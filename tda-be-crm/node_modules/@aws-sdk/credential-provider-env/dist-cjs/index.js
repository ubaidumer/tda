"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fromEnv = exports.ENV_EXPIRATION = exports.ENV_SESSION = exports.ENV_SECRET = exports.ENV_KEY = void 0;
const property_provider_1 = require("@aws-sdk/property-provider");
exports.ENV_KEY = "AWS_ACCESS_KEY_ID";
exports.ENV_SECRET = "AWS_SECRET_ACCESS_KEY";
exports.ENV_SESSION = "AWS_SESSION_TOKEN";
exports.ENV_EXPIRATION = "AWS_CREDENTIAL_EXPIRATION";
function fromEnv() {
    return () => {
        const accessKeyId = process.env[exports.ENV_KEY];
        const secretAccessKey = process.env[exports.ENV_SECRET];
        const expiry = process.env[exports.ENV_EXPIRATION];
        if (accessKeyId && secretAccessKey) {
            return Promise.resolve({
                accessKeyId,
                secretAccessKey,
                sessionToken: process.env[exports.ENV_SESSION],
                expiration: expiry ? new Date(expiry) : undefined,
            });
        }
        return Promise.reject(new property_provider_1.CredentialsProviderError("Unable to find environment variable credentials."));
    };
}
exports.fromEnv = fromEnv;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsa0VBQXNFO0FBR3pELFFBQUEsT0FBTyxHQUFHLG1CQUFtQixDQUFDO0FBQzlCLFFBQUEsVUFBVSxHQUFHLHVCQUF1QixDQUFDO0FBQ3JDLFFBQUEsV0FBVyxHQUFHLG1CQUFtQixDQUFDO0FBQ2xDLFFBQUEsY0FBYyxHQUFHLDJCQUEyQixDQUFDO0FBTzFELFNBQWdCLE9BQU87SUFDckIsT0FBTyxHQUFHLEVBQUU7UUFDVixNQUFNLFdBQVcsR0FBdUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFPLENBQUMsQ0FBQztRQUM3RCxNQUFNLGVBQWUsR0FBdUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBVSxDQUFDLENBQUM7UUFDcEUsTUFBTSxNQUFNLEdBQXVCLE9BQU8sQ0FBQyxHQUFHLENBQUMsc0JBQWMsQ0FBQyxDQUFDO1FBQy9ELElBQUksV0FBVyxJQUFJLGVBQWUsRUFBRTtZQUNsQyxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUM7Z0JBQ3JCLFdBQVc7Z0JBQ1gsZUFBZTtnQkFDZixZQUFZLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBVyxDQUFDO2dCQUN0QyxVQUFVLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUzthQUNsRCxDQUFDLENBQUM7U0FDSjtRQUVELE9BQU8sT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLDRDQUF3QixDQUFDLGtEQUFrRCxDQUFDLENBQUMsQ0FBQztJQUMxRyxDQUFDLENBQUM7QUFDSixDQUFDO0FBaEJELDBCQWdCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvciB9IGZyb20gXCJAYXdzLXNkay9wcm9wZXJ0eS1wcm92aWRlclwiO1xuaW1wb3J0IHsgQ3JlZGVudGlhbFByb3ZpZGVyIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmV4cG9ydCBjb25zdCBFTlZfS0VZID0gXCJBV1NfQUNDRVNTX0tFWV9JRFwiO1xuZXhwb3J0IGNvbnN0IEVOVl9TRUNSRVQgPSBcIkFXU19TRUNSRVRfQUNDRVNTX0tFWVwiO1xuZXhwb3J0IGNvbnN0IEVOVl9TRVNTSU9OID0gXCJBV1NfU0VTU0lPTl9UT0tFTlwiO1xuZXhwb3J0IGNvbnN0IEVOVl9FWFBJUkFUSU9OID0gXCJBV1NfQ1JFREVOVElBTF9FWFBJUkFUSU9OXCI7XG5cbi8qKlxuICogU291cmNlIEFXUyBjcmVkZW50aWFscyBmcm9tIGtub3duIGVudmlyb25tZW50IHZhcmlhYmxlcy4gSWYgZWl0aGVyIHRoZVxuICogYEFXU19BQ0NFU1NfS0VZX0lEYCBvciBgQVdTX1NFQ1JFVF9BQ0NFU1NfS0VZYCBlbnZpcm9ubWVudCB2YXJpYWJsZSBpcyBub3RcbiAqIHNldCBpbiB0aGlzIHByb2Nlc3MsIHRoZSBwcm92aWRlciB3aWxsIHJldHVybiBhIHJlamVjdGVkIHByb21pc2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmcm9tRW52KCk6IENyZWRlbnRpYWxQcm92aWRlciB7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgY29uc3QgYWNjZXNzS2V5SWQ6IHN0cmluZyB8IHVuZGVmaW5lZCA9IHByb2Nlc3MuZW52W0VOVl9LRVldO1xuICAgIGNvbnN0IHNlY3JldEFjY2Vzc0tleTogc3RyaW5nIHwgdW5kZWZpbmVkID0gcHJvY2Vzcy5lbnZbRU5WX1NFQ1JFVF07XG4gICAgY29uc3QgZXhwaXJ5OiBzdHJpbmcgfCB1bmRlZmluZWQgPSBwcm9jZXNzLmVudltFTlZfRVhQSVJBVElPTl07XG4gICAgaWYgKGFjY2Vzc0tleUlkICYmIHNlY3JldEFjY2Vzc0tleSkge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh7XG4gICAgICAgIGFjY2Vzc0tleUlkLFxuICAgICAgICBzZWNyZXRBY2Nlc3NLZXksXG4gICAgICAgIHNlc3Npb25Ub2tlbjogcHJvY2Vzcy5lbnZbRU5WX1NFU1NJT05dLFxuICAgICAgICBleHBpcmF0aW9uOiBleHBpcnkgPyBuZXcgRGF0ZShleHBpcnkpIDogdW5kZWZpbmVkLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IoXCJVbmFibGUgdG8gZmluZCBlbnZpcm9ubWVudCB2YXJpYWJsZSBjcmVkZW50aWFscy5cIikpO1xuICB9O1xufVxuIl19