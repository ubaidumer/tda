import { __assign } from "tslib";
export var waiterServiceDefaults = {
    minDelay: 2,
    maxDelay: 120,
};
export var WaiterState;
(function (WaiterState) {
    WaiterState["ABORTED"] = "ABORTED";
    WaiterState["FAILURE"] = "FAILURE";
    WaiterState["SUCCESS"] = "SUCCESS";
    WaiterState["RETRY"] = "RETRY";
    WaiterState["TIMEOUT"] = "TIMEOUT";
})(WaiterState || (WaiterState = {}));
export var checkExceptions = function (result) {
    if (result.state === WaiterState.ABORTED) {
        var abortError = new Error("" + JSON.stringify(__assign(__assign({}, result), { reason: "Request was aborted" })));
        abortError.name = "AbortError";
        throw abortError;
    }
    else if (result.state === WaiterState.TIMEOUT) {
        var timeoutError = new Error("" + JSON.stringify(__assign(__assign({}, result), { reason: "Waiter has timed out" })));
        timeoutError.name = "TimeoutError";
        throw timeoutError;
    }
    else if (result.state !== WaiterState.SUCCESS) {
        throw new Error("" + JSON.stringify({ result: result }));
    }
    return result;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3dhaXRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBT0EsTUFBTSxDQUFDLElBQU0scUJBQXFCLEdBQUc7SUFDbkMsUUFBUSxFQUFFLENBQUM7SUFDWCxRQUFRLEVBQUUsR0FBRztDQUNkLENBQUM7QUFRRixNQUFNLENBQU4sSUFBWSxXQU1YO0FBTkQsV0FBWSxXQUFXO0lBQ3JCLGtDQUFtQixDQUFBO0lBQ25CLGtDQUFtQixDQUFBO0lBQ25CLGtDQUFtQixDQUFBO0lBQ25CLDhCQUFlLENBQUE7SUFDZixrQ0FBbUIsQ0FBQTtBQUNyQixDQUFDLEVBTlcsV0FBVyxLQUFYLFdBQVcsUUFNdEI7QUFlRCxNQUFNLENBQUMsSUFBTSxlQUFlLEdBQUcsVUFBQyxNQUFvQjtJQUNsRCxJQUFJLE1BQU0sQ0FBQyxLQUFLLEtBQUssV0FBVyxDQUFDLE9BQU8sRUFBRTtRQUN4QyxJQUFNLFVBQVUsR0FBRyxJQUFJLEtBQUssQ0FDMUIsS0FBRyxJQUFJLENBQUMsU0FBUyx1QkFDWixNQUFNLEtBQ1QsTUFBTSxFQUFFLHFCQUFxQixJQUMzQixDQUNMLENBQUM7UUFDRixVQUFVLENBQUMsSUFBSSxHQUFHLFlBQVksQ0FBQztRQUMvQixNQUFNLFVBQVUsQ0FBQztLQUNsQjtTQUFNLElBQUksTUFBTSxDQUFDLEtBQUssS0FBSyxXQUFXLENBQUMsT0FBTyxFQUFFO1FBQy9DLElBQU0sWUFBWSxHQUFHLElBQUksS0FBSyxDQUM1QixLQUFHLElBQUksQ0FBQyxTQUFTLHVCQUNaLE1BQU0sS0FDVCxNQUFNLEVBQUUsc0JBQXNCLElBQzVCLENBQ0wsQ0FBQztRQUNGLFlBQVksQ0FBQyxJQUFJLEdBQUcsY0FBYyxDQUFDO1FBQ25DLE1BQU0sWUFBWSxDQUFDO0tBQ3BCO1NBQU0sSUFBSSxNQUFNLENBQUMsS0FBSyxLQUFLLFdBQVcsQ0FBQyxPQUFPLEVBQUU7UUFDL0MsTUFBTSxJQUFJLEtBQUssQ0FBQyxLQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxNQUFNLFFBQUEsRUFBRSxDQUFHLENBQUMsQ0FBQztLQUNsRDtJQUNELE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdhaXRlckNvbmZpZ3VyYXRpb24gYXMgV2FpdGVyQ29uZmlndXJhdGlvbl9fIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgV2FpdGVyQ29uZmlndXJhdGlvbjxUPiBleHRlbmRzIFdhaXRlckNvbmZpZ3VyYXRpb25fXzxUPiB7fVxuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBjb25zdCB3YWl0ZXJTZXJ2aWNlRGVmYXVsdHMgPSB7XG4gIG1pbkRlbGF5OiAyLFxuICBtYXhEZWxheTogMTIwLFxufTtcblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgdHlwZSBXYWl0ZXJPcHRpb25zPENsaWVudD4gPSBXYWl0ZXJDb25maWd1cmF0aW9uPENsaWVudD4gJlxuICBSZXF1aXJlZDxQaWNrPFdhaXRlckNvbmZpZ3VyYXRpb248Q2xpZW50PiwgXCJtaW5EZWxheVwiIHwgXCJtYXhEZWxheVwiPj47XG5cbmV4cG9ydCBlbnVtIFdhaXRlclN0YXRlIHtcbiAgQUJPUlRFRCA9IFwiQUJPUlRFRFwiLFxuICBGQUlMVVJFID0gXCJGQUlMVVJFXCIsXG4gIFNVQ0NFU1MgPSBcIlNVQ0NFU1NcIixcbiAgUkVUUlkgPSBcIlJFVFJZXCIsXG4gIFRJTUVPVVQgPSBcIlRJTUVPVVRcIixcbn1cblxuZXhwb3J0IHR5cGUgV2FpdGVyUmVzdWx0ID0ge1xuICBzdGF0ZTogV2FpdGVyU3RhdGU7XG5cbiAgLyoqXG4gICAqIChvcHRpb25hbCkgSW5kaWNhdGVzIGEgcmVhc29uIGZvciB3aHkgYSB3YWl0ZXIgaGFzIHJlYWNoZWQgaXRzIHN0YXRlLlxuICAgKi9cbiAgcmVhc29uPzogYW55O1xufTtcblxuLyoqXG4gKiBIYW5kbGVzIGFuZCB0aHJvd3MgZXhjZXB0aW9ucyByZXN1bHRpbmcgZnJvbSB0aGUgd2FpdGVyUmVzdWx0XG4gKiBAcGFyYW0gcmVzdWx0IFdhaXRlclJlc3VsdFxuICovXG5leHBvcnQgY29uc3QgY2hlY2tFeGNlcHRpb25zID0gKHJlc3VsdDogV2FpdGVyUmVzdWx0KTogV2FpdGVyUmVzdWx0ID0+IHtcbiAgaWYgKHJlc3VsdC5zdGF0ZSA9PT0gV2FpdGVyU3RhdGUuQUJPUlRFRCkge1xuICAgIGNvbnN0IGFib3J0RXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICBgJHtKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIC4uLnJlc3VsdCxcbiAgICAgICAgcmVhc29uOiBcIlJlcXVlc3Qgd2FzIGFib3J0ZWRcIixcbiAgICAgIH0pfWBcbiAgICApO1xuICAgIGFib3J0RXJyb3IubmFtZSA9IFwiQWJvcnRFcnJvclwiO1xuICAgIHRocm93IGFib3J0RXJyb3I7XG4gIH0gZWxzZSBpZiAocmVzdWx0LnN0YXRlID09PSBXYWl0ZXJTdGF0ZS5USU1FT1VUKSB7XG4gICAgY29uc3QgdGltZW91dEVycm9yID0gbmV3IEVycm9yKFxuICAgICAgYCR7SlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAuLi5yZXN1bHQsXG4gICAgICAgIHJlYXNvbjogXCJXYWl0ZXIgaGFzIHRpbWVkIG91dFwiLFxuICAgICAgfSl9YFxuICAgICk7XG4gICAgdGltZW91dEVycm9yLm5hbWUgPSBcIlRpbWVvdXRFcnJvclwiO1xuICAgIHRocm93IHRpbWVvdXRFcnJvcjtcbiAgfSBlbHNlIGlmIChyZXN1bHQuc3RhdGUgIT09IFdhaXRlclN0YXRlLlNVQ0NFU1MpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7SlNPTi5zdHJpbmdpZnkoeyByZXN1bHQgfSl9YCk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG4iXX0=