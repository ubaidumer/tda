"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaultUserAgent = void 0;
const tslib_1 = require("tslib");
const bowser_1 = tslib_1.__importDefault(require("bowser"));
const defaultUserAgent = ({ serviceId, clientVersion }) => async () => {
    var _a, _b, _c, _d, _e, _f, _g;
    const parsedUA = typeof window !== "undefined" && ((_a = window === null || window === void 0 ? void 0 : window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent)
        ? bowser_1.default.parse(window.navigator.userAgent)
        : undefined;
    const sections = [
        ["aws-sdk-js", clientVersion],
        [`os/${((_b = parsedUA === null || parsedUA === void 0 ? void 0 : parsedUA.os) === null || _b === void 0 ? void 0 : _b.name) || "other"}`, (_c = parsedUA === null || parsedUA === void 0 ? void 0 : parsedUA.os) === null || _c === void 0 ? void 0 : _c.version],
        ["lang/js"],
        ["md/browser", `${(_e = (_d = parsedUA === null || parsedUA === void 0 ? void 0 : parsedUA.browser) === null || _d === void 0 ? void 0 : _d.name) !== null && _e !== void 0 ? _e : "unknown"}_${(_g = (_f = parsedUA === null || parsedUA === void 0 ? void 0 : parsedUA.browser) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : "unknown"}`],
    ];
    if (serviceId) {
        sections.push([`api/${serviceId}`, clientVersion]);
    }
    return sections;
};
exports.defaultUserAgent = defaultUserAgent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLDREQUE0QjtBQVFyQixNQUFNLGdCQUFnQixHQUMzQixDQUFDLEVBQUUsU0FBUyxFQUFFLGFBQWEsRUFBMkIsRUFBdUIsRUFBRSxDQUMvRSxLQUFLLElBQUksRUFBRTs7SUFDVCxNQUFNLFFBQVEsR0FDWixPQUFPLE1BQU0sS0FBSyxXQUFXLEtBQUksTUFBQSxNQUFNLGFBQU4sTUFBTSx1QkFBTixNQUFNLENBQUUsU0FBUywwQ0FBRSxTQUFTLENBQUE7UUFDM0QsQ0FBQyxDQUFDLGdCQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDO1FBQzFDLENBQUMsQ0FBQyxTQUFTLENBQUM7SUFDaEIsTUFBTSxRQUFRLEdBQWM7UUFFMUIsQ0FBQyxZQUFZLEVBQUUsYUFBYSxDQUFDO1FBRTdCLENBQUMsTUFBTSxDQUFBLE1BQUEsUUFBUSxhQUFSLFFBQVEsdUJBQVIsUUFBUSxDQUFFLEVBQUUsMENBQUUsSUFBSSxLQUFJLE9BQU8sRUFBRSxFQUFFLE1BQUEsUUFBUSxhQUFSLFFBQVEsdUJBQVIsUUFBUSxDQUFFLEVBQUUsMENBQUUsT0FBTyxDQUFDO1FBRzlELENBQUMsU0FBUyxDQUFDO1FBRVgsQ0FBQyxZQUFZLEVBQUUsR0FBRyxNQUFBLE1BQUEsUUFBUSxhQUFSLFFBQVEsdUJBQVIsUUFBUSxDQUFFLE9BQU8sMENBQUUsSUFBSSxtQ0FBSSxTQUFTLElBQUksTUFBQSxNQUFBLFFBQVEsYUFBUixRQUFRLHVCQUFSLFFBQVEsQ0FBRSxPQUFPLDBDQUFFLE9BQU8sbUNBQUksU0FBUyxFQUFFLENBQUM7S0FDckcsQ0FBQztJQUVGLElBQUksU0FBUyxFQUFFO1FBR2IsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sU0FBUyxFQUFFLEVBQUUsYUFBYSxDQUFDLENBQUMsQ0FBQztLQUNwRDtJQUVELE9BQU8sUUFBUSxDQUFDO0FBQ2xCLENBQUMsQ0FBQztBQTFCUyxRQUFBLGdCQUFnQixvQkEwQnpCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvdmlkZXIsIFVzZXJBZ2VudCB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuaW1wb3J0IGJvd3NlciBmcm9tIFwiYm93c2VyXCI7XG5cbmltcG9ydCB7IERlZmF1bHRVc2VyQWdlbnRPcHRpb25zIH0gZnJvbSBcIi4vY29uZmlndXJhdGlvbnNcIjtcblxuLyoqXG4gKiBEZWZhdWx0IHByb3ZpZGVyIHRvIHRoZSB1c2VyIGFnZW50IGluIGJyb3dzZXJzLiBJdCdzIGEgYmVzdCBlZmZvcnQgdG8gaW5mZXJcbiAqIHRoZSBkZXZpY2UgaW5mb3JtYXRpb24uIEl0IHVzZXMgYm93c2VyIGxpYnJhcnkgdG8gZGV0ZWN0IHRoZSBicm93c2VyIGFuZCB2ZXJzaW9uXG4gKi9cbmV4cG9ydCBjb25zdCBkZWZhdWx0VXNlckFnZW50ID1cbiAgKHsgc2VydmljZUlkLCBjbGllbnRWZXJzaW9uIH06IERlZmF1bHRVc2VyQWdlbnRPcHRpb25zKTogUHJvdmlkZXI8VXNlckFnZW50PiA9PlxuICBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgcGFyc2VkVUEgPVxuICAgICAgdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3c/Lm5hdmlnYXRvcj8udXNlckFnZW50XG4gICAgICAgID8gYm93c2VyLnBhcnNlKHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50KVxuICAgICAgICA6IHVuZGVmaW5lZDtcbiAgICBjb25zdCBzZWN0aW9uczogVXNlckFnZW50ID0gW1xuICAgICAgLy8gc2RrLW1ldGFkYXRhXG4gICAgICBbXCJhd3Mtc2RrLWpzXCIsIGNsaWVudFZlcnNpb25dLFxuICAgICAgLy8gb3MtbWV0YWRhdGFcbiAgICAgIFtgb3MvJHtwYXJzZWRVQT8ub3M/Lm5hbWUgfHwgXCJvdGhlclwifWAsIHBhcnNlZFVBPy5vcz8udmVyc2lvbl0sXG4gICAgICAvLyBsYW5ndWFnZS1tZXRhZGF0YVxuICAgICAgLy8gRUNNQVNjcmlwdCBlZGl0aW9uIGRvZXNuJ3QgbWF0dGVyIGluIEpTLlxuICAgICAgW1wibGFuZy9qc1wiXSxcbiAgICAgIC8vIGJyb3dzZXIgdmVuZG9yIGFuZCB2ZXJzaW9uLlxuICAgICAgW1wibWQvYnJvd3NlclwiLCBgJHtwYXJzZWRVQT8uYnJvd3Nlcj8ubmFtZSA/PyBcInVua25vd25cIn1fJHtwYXJzZWRVQT8uYnJvd3Nlcj8udmVyc2lvbiA/PyBcInVua25vd25cIn1gXSxcbiAgICBdO1xuXG4gICAgaWYgKHNlcnZpY2VJZCkge1xuICAgICAgLy8gYXBpLW1ldGFkYXRhXG4gICAgICAvLyBzZXJ2aWNlIElkIG1heSBub3QgYXBwZWFyIGluIG5vbi1BV1MgY2xpZW50c1xuICAgICAgc2VjdGlvbnMucHVzaChbYGFwaS8ke3NlcnZpY2VJZH1gLCBjbGllbnRWZXJzaW9uXSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHNlY3Rpb25zO1xuICB9O1xuIl19