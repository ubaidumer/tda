var MockSha256 = (function () {
    function MockSha256(secret) {
    }
    MockSha256.prototype.update = function (data) { };
    MockSha256.prototype.digest = function () {
        return Promise.resolve(new Uint8Array(5));
    };
    return MockSha256;
}());
export { MockSha256 };
export var region = function () { return Promise.resolve("mock-region"); };
export var endpoint = function () {
    return Promise.resolve({
        protocol: "https:",
        path: "/",
        hostname: "ec2.mock-region.amazonaws.com",
    });
};
export var credentials = function () {
    return Promise.resolve({
        accessKeyId: "akid",
        secretAccessKey: "secret",
        sessionToken: "session",
    });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZml4dHVyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9maXh0dXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0lBRUUsb0JBQVksTUFBK0M7SUFBRyxDQUFDO0lBRS9ELDJCQUFNLEdBQU4sVUFBTyxJQUFpQixJQUFHLENBQUM7SUFDNUIsMkJBQU0sR0FBTjtRQUNFLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFDSCxpQkFBQztBQUFELENBQUMsQUFSRCxJQVFDOztBQUVELE1BQU0sQ0FBQyxJQUFNLE1BQU0sR0FBRyxjQUFNLE9BQUEsT0FBTyxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsRUFBOUIsQ0FBOEIsQ0FBQztBQUUzRCxNQUFNLENBQUMsSUFBTSxRQUFRLEdBQUc7SUFDdEIsT0FBQSxPQUFPLENBQUMsT0FBTyxDQUFDO1FBQ2QsUUFBUSxFQUFFLFFBQVE7UUFDbEIsSUFBSSxFQUFFLEdBQUc7UUFDVCxRQUFRLEVBQUUsK0JBQStCO0tBQzFDLENBQUM7QUFKRixDQUlFLENBQUM7QUFFTCxNQUFNLENBQUMsSUFBTSxXQUFXLEdBQUc7SUFDekIsT0FBQSxPQUFPLENBQUMsT0FBTyxDQUFDO1FBQ2QsV0FBVyxFQUFFLE1BQU07UUFDbkIsZUFBZSxFQUFFLFFBQVE7UUFDekIsWUFBWSxFQUFFLFNBQVM7S0FDeEIsQ0FBQztBQUpGLENBSUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNvdXJjZURhdGEgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuZXhwb3J0IGNsYXNzIE1vY2tTaGEyNTYge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXG4gIGNvbnN0cnVjdG9yKHNlY3JldD86IHN0cmluZyB8IEFycmF5QnVmZmVyIHwgQXJyYXlCdWZmZXJWaWV3KSB7fVxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXG4gIHVwZGF0ZShkYXRhPzogU291cmNlRGF0YSkge31cbiAgZGlnZXN0KCkge1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUobmV3IFVpbnQ4QXJyYXkoNSkpO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCByZWdpb24gPSAoKSA9PiBQcm9taXNlLnJlc29sdmUoXCJtb2NrLXJlZ2lvblwiKTtcblxuZXhwb3J0IGNvbnN0IGVuZHBvaW50ID0gKCkgPT5cbiAgUHJvbWlzZS5yZXNvbHZlKHtcbiAgICBwcm90b2NvbDogXCJodHRwczpcIixcbiAgICBwYXRoOiBcIi9cIixcbiAgICBob3N0bmFtZTogXCJlYzIubW9jay1yZWdpb24uYW1hem9uYXdzLmNvbVwiLFxuICB9KTtcblxuZXhwb3J0IGNvbnN0IGNyZWRlbnRpYWxzID0gKCkgPT5cbiAgUHJvbWlzZS5yZXNvbHZlKHtcbiAgICBhY2Nlc3NLZXlJZDogXCJha2lkXCIsXG4gICAgc2VjcmV0QWNjZXNzS2V5OiBcInNlY3JldFwiLFxuICAgIHNlc3Npb25Ub2tlbjogXCJzZXNzaW9uXCIsXG4gIH0pO1xuIl19