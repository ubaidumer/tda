{"version":3,"file":"fetch.js","sourceRoot":"","sources":["../../../../lib/workers/repository/process/fetch.ts"],"names":[],"mappings":"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","sourcesContent":["import pAll from 'p-all';\nimport { getManagerConfig, mergeChildConfig } from '../../../config';\nimport type { RenovateConfig } from '../../../config/types';\nimport { getDefaultConfig } from '../../../datasource';\nimport { logger } from '../../../logger';\nimport type { PackageDependency, PackageFile } from '../../../manager/types';\nimport { SkipReason } from '../../../types';\nimport { clone } from '../../../util/clone';\nimport { applyPackageRules } from '../../../util/package-rules';\nimport { lookupUpdates } from './lookup';\nimport type { LookupUpdateConfig } from './lookup/types';\n\nasync function fetchDepUpdates(\n  packageFileConfig: RenovateConfig & PackageFile,\n  indep: PackageDependency\n): Promise<PackageDependency> {\n  let dep = clone(indep);\n  dep.updates = [];\n  if (dep.skipReason) {\n    return dep;\n  }\n  const { depName } = dep;\n  // TODO: fix types\n  let depConfig = mergeChildConfig(packageFileConfig, dep);\n  const datasourceDefaultConfig = await getDefaultConfig(depConfig.datasource);\n  depConfig = mergeChildConfig(depConfig, datasourceDefaultConfig);\n  depConfig = applyPackageRules(depConfig);\n  if (depConfig.ignoreDeps.includes(depName)) {\n    logger.debug({ dependency: depName }, 'Dependency is ignored');\n    dep.skipReason = SkipReason.Ignored;\n  } else if (depConfig.enabled === false) {\n    logger.debug({ dependency: depName }, 'Dependency is disabled');\n    dep.skipReason = SkipReason.Disabled;\n  } else {\n    if (depConfig.datasource) {\n      dep = {\n        ...dep,\n        ...(await lookupUpdates(depConfig as LookupUpdateConfig)),\n      };\n    }\n    dep.updates = dep.updates || [];\n  }\n  return dep;\n}\n\nasync function fetchManagerPackagerFileUpdates(\n  config: RenovateConfig,\n  managerConfig: RenovateConfig,\n  pFile: PackageFile\n): Promise<void> {\n  const { packageFile } = pFile;\n  const packageFileConfig = mergeChildConfig(managerConfig, pFile);\n  const { manager } = packageFileConfig;\n  const queue = pFile.deps.map(\n    (dep) => (): Promise<PackageDependency> =>\n      fetchDepUpdates(packageFileConfig, dep)\n  );\n  logger.trace(\n    { manager, packageFile, queueLength: queue.length },\n    'fetchManagerPackagerFileUpdates starting with concurrency'\n  );\n\n  pFile.deps = await pAll(queue, { concurrency: 5 });\n  logger.trace({ packageFile }, 'fetchManagerPackagerFileUpdates finished');\n}\n\nasync function fetchManagerUpdates(\n  config: RenovateConfig,\n  packageFiles: Record<string, PackageFile[]>,\n  manager: string\n): Promise<void> {\n  const managerConfig = getManagerConfig(config, manager);\n  const queue = packageFiles[manager].map(\n    (pFile) => (): Promise<void> =>\n      fetchManagerPackagerFileUpdates(config, managerConfig, pFile)\n  );\n  logger.trace(\n    { manager, queueLength: queue.length },\n    'fetchManagerUpdates starting'\n  );\n  await pAll(queue, { concurrency: 5 });\n  logger.trace({ manager }, 'fetchManagerUpdates finished');\n}\n\nexport async function fetchUpdates(\n  config: RenovateConfig,\n  packageFiles: Record<string, PackageFile[]>\n): Promise<void> {\n  const managers = Object.keys(packageFiles);\n  const allManagerJobs = managers.map((manager) =>\n    fetchManagerUpdates(config, packageFiles, manager)\n  );\n  await Promise.all(allManagerJobs);\n  logger.debug(\n    { baseBranch: config.baseBranch },\n    'Package releases lookups complete'\n  );\n}\n"]}