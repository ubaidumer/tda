"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OnboardingCommitMessageFactory = void 0;
const commit_message_1 = require("../../model/commit-message");
class OnboardingCommitMessageFactory {
    constructor(config, configFile) {
        this.config = config;
        this.configFile = configFile;
    }
    create() {
        const { commitMessagePrefix, onboardingCommitMessage, semanticCommitScope, semanticCommitType, } = this.config;
        const commitMessage = new commit_message_1.CommitMessage();
        if (commitMessagePrefix) {
            commitMessage.setCustomPrefix(commitMessagePrefix);
        }
        else if (this.areSemanticCommitsEnabled()) {
            commitMessage.setSemanticPrefix(semanticCommitType, semanticCommitScope);
        }
        if (onboardingCommitMessage) {
            commitMessage.setMessage(onboardingCommitMessage);
        }
        else {
            commitMessage.setMessage(`add ${this.configFile}`);
        }
        return commitMessage;
    }
    areSemanticCommitsEnabled() {
        return this.config.semanticCommits === 'enabled';
    }
}
exports.OnboardingCommitMessageFactory = OnboardingCommitMessageFactory;
//# sourceMappingURL=commit-message.js.map