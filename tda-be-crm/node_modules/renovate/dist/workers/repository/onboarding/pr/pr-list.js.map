{"version":3,"file":"pr-list.js","sourceRoot":"","sources":["../../../../../lib/workers/repository/onboarding/pr/pr-list.ts"],"names":[],"mappings":";;;AACA,+CAA4C;AAC5C,kDAAiD;AACjD,kDAA+C;AAG/C,SAAgB,SAAS,CACvB,MAAsB,EACtB,QAAwB;;IAExB,eAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;IAC5B,eAAM,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;IACzB,IAAI,MAAM,GAAG,0BAA0B,CAAC;IACxC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;QACpB,OAAO,GAAG,MAAM,wHAAwH,CAAC;KAC1I;IACD,MAAM,IAAI,yDAAyD,QAAQ,CAAC,MAAM,eAAe,CAAC;IAClG,MAAM,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC;IAEnD,KAAK,MAAM,MAAM,IAAI,QAAQ,EAAE;QAC7B,MAAM,SAAS,GAAG,IAAA,aAAK,EAAC,mBAAmB,CAAC,CAAC,CAAC,cAAc;QAC5D,MAAM,IAAI,uBAAuB,MAAM,CAAC,OAAO,CAAC,OAAO,CACrD,SAAS,EACT,YAAY,CACb,gBAAgB,CAAC;QAClB,IAAI,MAAA,MAAM,CAAC,QAAQ,0CAAE,MAAM,EAAE;YAC3B,MAAM,IAAI,iBAAiB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;SAChE;QACD,MAAM,IAAI,sBAAsB,MAAM,CAAC,UAAU,MAAM,CAAC;QACxD,MAAM,IAAI,MAAM,CAAC,UAAU;YACzB,CAAC,CAAC,qBAAqB,MAAM,CAAC,UAAU,MAAM;YAC9C,CAAC,CAAC,EAAE,CAAC;QACP,MAAM,IAAI,GAAa,EAAE,CAAC;QAC1B,KAAK,MAAM,OAAO,IAAI,MAAM,CAAC,QAAQ,EAAE;YACrC,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,IAAI,OAAO,CAAC,UAAU,KAAK,qBAAqB,EAAE;gBAChD,IAAI,IAAI,6DAA6D,CAAC;aACvE;iBAAM;gBACL,IAAI,OAAO,CAAC,UAAU,KAAK,KAAK,EAAE;oBAChC,IAAI,IAAI,UAAU,CAAC;iBACpB;qBAAM;oBACL,IAAI,IAAI,cAAc,CAAC;iBACxB;gBACD,IAAI,OAAO,CAAC,SAAS,EAAE;oBACrB,IAAI,IAAI,IAAI,OAAO,CAAC,OAAO,KAAK,OAAO,CAAC,SAAS,GAAG,CAAC;iBACtD;qBAAM;oBACL,IAAI,IAAI,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;iBAC1D;gBACD,IAAI,IAAI,OAAO,CAAC,gBAAgB;oBAC9B,CAAC,CAAC,SAAS,OAAO,CAAC,UAAU,IAAI;oBACjC,CAAC,CAAC,SAAS,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,QAAQ,IAAI,CAAC;gBACvD,IAAI,IAAI,IAAI,CAAC;aACd;YACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACxB,MAAM,IAAI,IAAI,CAAC;gBACf,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACjB;SACF;QACD,MAAM,IAAI,MAAM,CAAC;QACjB,MAAM,IAAI,gBAAgB,CAAC;KAC5B;IACD,IACE,MAAM,CAAC,aAAa,GAAG,CAAC;QACxB,MAAM,CAAC,aAAa,GAAG,CAAC;QACxB,MAAM,CAAC,aAAa,GAAG,QAAQ,CAAC,MAAM,EACtC;QACA,MAAM,IAAI,IAAA,eAAO,EACf,4EAA4E,MAAM,CAAC,aAAa,sHAAsH,CACvN,CAAC;KACH;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAjED,8BAiEC","sourcesContent":["import type { RenovateConfig } from '../../../../config/types';\nimport { logger } from '../../../../logger';\nimport { emojify } from '../../../../util/emoji';\nimport { regEx } from '../../../../util/regex';\nimport type { BranchConfig } from '../../../types';\n\nexport function getPrList(\n  config: RenovateConfig,\n  branches: BranchConfig[]\n): string {\n  logger.debug('getPrList()');\n  logger.trace({ config });\n  let prDesc = `\\n### What to Expect\\n\\n`;\n  if (!branches.length) {\n    return `${prDesc}It looks like your repository dependencies are already up-to-date and no Pull Requests will be necessary right away.\\n`;\n  }\n  prDesc += `With your current configuration, Renovate will create ${branches.length} Pull Request`;\n  prDesc += branches.length > 1 ? `s:\\n\\n` : `:\\n\\n`;\n\n  for (const branch of branches) {\n    const prTitleRe = regEx(/@([a-z]+\\/[a-z]+)/); // TODO #12071\n    prDesc += `<details>\\n<summary>${branch.prTitle.replace(\n      prTitleRe,\n      '@&#8203;$1'\n    )}</summary>\\n\\n`;\n    if (branch.schedule?.length) {\n      prDesc += `  - Schedule: ${JSON.stringify(branch.schedule)}\\n`;\n    }\n    prDesc += `  - Branch name: \\`${branch.branchName}\\`\\n`;\n    prDesc += branch.baseBranch\n      ? `  - Merge into: \\`${branch.baseBranch}\\`\\n`\n      : '';\n    const seen: string[] = [];\n    for (const upgrade of branch.upgrades) {\n      let text = '';\n      if (upgrade.updateType === 'lockFileMaintenance') {\n        text += '  - Regenerate lock files to use latest dependency versions';\n      } else {\n        if (upgrade.updateType === 'pin') {\n          text += '  - Pin ';\n        } else {\n          text += '  - Upgrade ';\n        }\n        if (upgrade.sourceUrl) {\n          text += `[${upgrade.depName}](${upgrade.sourceUrl})`;\n        } else {\n          text += upgrade.depName.replace(prTitleRe, '@&#8203;$1');\n        }\n        text += upgrade.isLockfileUpdate\n          ? ` to \\`${upgrade.newVersion}\\``\n          : ` to \\`${upgrade.newDigest || upgrade.newValue}\\``;\n        text += '\\n';\n      }\n      if (!seen.includes(text)) {\n        prDesc += text;\n        seen.push(text);\n      }\n    }\n    prDesc += '\\n\\n';\n    prDesc += '</details>\\n\\n';\n  }\n  if (\n    config.prHourlyLimit > 0 &&\n    config.prHourlyLimit < 5 &&\n    config.prHourlyLimit < branches.length\n  ) {\n    prDesc += emojify(\n      `<br />\\n\\n:children_crossing: Branch creation will be limited to maximum ${config.prHourlyLimit} per hour, so it doesn't swamp any CI resources or spam the project. See docs for \\`prhourlylimit\\` for details.\\n\\n`\n    );\n  }\n  return prDesc;\n}\n"]}