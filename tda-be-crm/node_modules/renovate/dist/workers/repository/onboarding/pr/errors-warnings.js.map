{"version":3,"file":"errors-warnings.js","sourceRoot":"","sources":["../../../../../lib/workers/repository/onboarding/pr/errors-warnings.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RenovateConfig } from '../../../../config/types';\nimport { logger } from '../../../../logger';\nimport type { PackageFile } from '../../../../manager/types';\nimport { emojify } from '../../../../util/emoji';\n\nexport function getWarnings(config: RenovateConfig): string {\n  if (!config.warnings.length) {\n    return '';\n  }\n  let warningText = `\\n# Warnings (${config.warnings.length})\\n\\n`;\n  warningText += `Please correct - or verify that you can safely ignore - these warnings before you merge this PR.\\n\\n`;\n  config.warnings.forEach((w) => {\n    warningText += `-   \\`${w.topic}\\`: ${w.message}\\n`;\n  });\n  warningText += '\\n---\\n';\n  return warningText;\n}\n\nexport function getErrors(config: RenovateConfig): string {\n  let errorText = '';\n  if (!config.errors.length) {\n    return '';\n  }\n  errorText = `\\n# Errors (${config.errors.length})\\n\\n`;\n  errorText += `Renovate has found errors that you should fix (in this branch) before finishing this PR.\\n\\n`;\n  config.errors.forEach((e) => {\n    errorText += `-   \\`${e.topic}\\`: ${e.message}\\n`;\n  });\n  errorText += '\\n---\\n';\n  return errorText;\n}\n\nexport function getDepWarnings(\n  packageFiles: Record<string, PackageFile[]>\n): string {\n  let warningText = '';\n  try {\n    const warnings: string[] = [];\n    const warningFiles: string[] = [];\n    for (const files of Object.values(packageFiles || {})) {\n      for (const file of files || []) {\n        if (file.deps) {\n          for (const dep of file.deps || []) {\n            if (dep.warnings?.length) {\n              const message = dep.warnings[0].message;\n              if (!warnings.includes(message)) {\n                warnings.push(message);\n              }\n              if (!warningFiles.includes(file.packageFile)) {\n                warningFiles.push(file.packageFile);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (!warnings.length) {\n      return '';\n    }\n    logger.debug(\n      { warnings, warningFiles },\n      'Found package lookup warnings in onboarding'\n    );\n    warningText = emojify(\n      `\\n---\\n\\n### :warning: Dependency Lookup Warnings :warning:\\n\\n`\n    );\n    warningText += `Please correct - or verify that you can safely ignore - these lookup failures before you merge this PR.\\n\\n`;\n    warnings.forEach((w) => {\n      warningText += `-   \\`${w}\\`\\n`;\n    });\n    warningText +=\n      '\\nFiles affected: ' +\n      warningFiles.map((f) => '`' + f + '`').join(', ') +\n      '\\n\\n';\n  } catch (err) {\n    // istanbul ignore next\n    logger.error({ err }, 'Error generating dep warnings text');\n  }\n  return warningText;\n}\n"]}