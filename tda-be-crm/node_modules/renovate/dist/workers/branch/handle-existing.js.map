{"version":3,"file":"handle-existing.js","sourceRoot":"","sources":["../../../lib/workers/branch/handle-existing.ts"],"names":[],"mappings":";;;AAAA,gDAAmD;AACnD,yCAAsC;AACtC,6CAA8C;AAC9C,uCAAsC;AACtC,wCAA4D;AAGrD,KAAK,UAAU,QAAQ,CAAC,MAAoB,EAAE,EAAM;IACzD,IAAI,EAAE,CAAC,KAAK,KAAK,eAAO,CAAC,MAAM,EAAE;QAC/B,IAAI,OAAO,CAAC;QACZ,IAAI,MAAM,CAAC,UAAU,KAAK,OAAO,EAAE;YACjC,OAAO,GAAG,wHAAwH,MAAM,CAAC,QAAQ,2CAA2C,MAAM,CAAC,QAAQ,iGAAiG,CAAC;SAC9S;aAAM,IAAI,MAAM,CAAC,UAAU,KAAK,QAAQ,EAAE;YACzC,OAAO,GAAG,mIAAmI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,YAAY,0FAA0F,CAAC;SAC9Q;aAAM;YACL,OAAO,GAAG,8EAA8E,MAAM,CAAC,QAAQ,2LAA2L,CAAC;SACpS;QACD,OAAO;YACL,mJAAmJ,CAAC;QACtJ,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,QAAQ,CAAC,sBAAsB,CAAC,EAAE;YAClE,MAAM,WAAW,GAAG,8BAA8B,CAAC;YACnD,IAAI,qBAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;gBAC9B,eAAM,CAAC,IAAI,CACT,kDAAkD,EAAE,CAAC,MAAM,EAAE,CAC9D,CAAC;aACH;iBAAM;gBACL,MAAM,mBAAQ,CAAC,aAAa,CAAC;oBAC3B,MAAM,EAAE,EAAE,CAAC,MAAM;oBACjB,KAAK,EAAE,WAAW;oBAClB,OAAO;iBACR,CAAC,CAAC;aACJ;SACF;QACD,IAAI,IAAA,kBAAY,EAAC,MAAM,CAAC,UAAU,CAAC,EAAE;YACnC,IAAI,qBAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;gBAC9B,eAAM,CAAC,IAAI,CAAC,+BAA+B,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;aAClE;iBAAM;gBACL,MAAM,IAAA,kBAAY,EAAC,MAAM,CAAC,UAAU,CAAC,CAAC;aACvC;SACF;KACF;SAAM,IAAI,EAAE,CAAC,KAAK,KAAK,eAAO,CAAC,MAAM,EAAE;QACtC,eAAM,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,MAAM,EAAE,EAAE,mCAAmC,CAAC,CAAC;KACtE;AACH,CAAC;AApCD,4BAoCC","sourcesContent":["import { GlobalConfig } from '../../config/global';\nimport { logger } from '../../logger';\nimport { Pr, platform } from '../../platform';\nimport { PrState } from '../../types';\nimport { branchExists, deleteBranch } from '../../util/git';\nimport { BranchConfig } from '../types';\n\nexport async function handlepr(config: BranchConfig, pr: Pr): Promise<void> {\n  if (pr.state === PrState.Closed) {\n    let content;\n    if (config.updateType === 'major') {\n      content = `As this PR has been closed unmerged, Renovate will ignore this upgrade and you will not receive PRs for *any* future ${config.newMajor}.x releases. However, if you upgrade to ${config.newMajor}.x manually then Renovate will then reenable updates for minor and patch updates automatically.`;\n    } else if (config.updateType === 'digest') {\n      content = `As this PR has been closed unmerged, Renovate will ignore this upgrade updateType and you will not receive PRs for *any* future ${config.depName}:${config.currentValue} digest updates. Digest updates will resume if you update the specified tag at any time.`;\n    } else {\n      content = `As this PR has been closed unmerged, Renovate will now ignore this update (${config.newValue}). You will still receive a PR once a newer version is released, so if you wish to permanently ignore this dependency, please add it to the \\`ignoreDeps\\` array of your renovate config.`;\n    }\n    content +=\n      '\\n\\nIf this PR was closed by mistake or you changed your mind, you can simply rename this PR and you will soon get a fresh replacement PR opened.';\n    if (!config.suppressNotifications.includes('prIgnoreNotification')) {\n      const ignoreTopic = `Renovate Ignore Notification`;\n      if (GlobalConfig.get('dryRun')) {\n        logger.info(\n          `DRY-RUN: Would ensure closed PR comment in PR #${pr.number}`\n        );\n      } else {\n        await platform.ensureComment({\n          number: pr.number,\n          topic: ignoreTopic,\n          content,\n        });\n      }\n    }\n    if (branchExists(config.branchName)) {\n      if (GlobalConfig.get('dryRun')) {\n        logger.info('DRY-RUN: Would delete branch ' + config.branchName);\n      } else {\n        await deleteBranch(config.branchName);\n      }\n    }\n  } else if (pr.state === PrState.Merged) {\n    logger.debug({ pr: pr.number }, 'Merged PR is blocking this branch');\n  }\n}\n"]}