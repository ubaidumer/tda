{"version":3,"file":"check-existing.js","sourceRoot":"","sources":["../../../lib/workers/branch/check-existing.ts"],"names":[],"mappings":";;;AAAA,mEAAoE;AACpE,yCAAsC;AACtC,6CAA8C;AAC9C,uCAAsC;AAG/B,KAAK,UAAU,gBAAgB,CACpC,MAAoB;IAEpB,eAAM,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,EAAE,kBAAkB,CAAC,CAAC;IAC7C,IAAI,MAAM,CAAC,cAAc,EAAE;QACzB,eAAM,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC;KACb;IACD,eAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;IACxC,oCAAoC;IACpC,MAAM,EAAE,GAAG,MAAM,mBAAQ,CAAC,MAAM,CAAC;QAC/B,UAAU,EAAE,MAAM,CAAC,UAAU;QAC7B,OAAO,EAAE,MAAM,CAAC,OAAO;QACvB,KAAK,EAAE,eAAO,CAAC,OAAO;KACvB,CAAC,CAAC;IACH,IAAI,EAAE,EAAE;QACN,eAAM,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC;QACnD,MAAM,SAAS,GAAG,MAAM,mBAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAClD,qBAAqB;QACrB,IAAI,SAAS,CAAC,KAAK,KAAK,eAAO,CAAC,IAAI,EAAE;YACpC,eAAM,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;YAC3C,MAAM,IAAI,KAAK,CAAC,mCAAkB,CAAC,CAAC;SACrC;QACD,OAAO,EAAE,CAAC;KACX;IACD,eAAM,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;IACvC,OAAO,IAAI,CAAC;AACd,CAAC;AA3BD,4CA2BC","sourcesContent":["import { REPOSITORY_CHANGED } from '../../constants/error-messages';\nimport { logger } from '../../logger';\nimport { Pr, platform } from '../../platform';\nimport { PrState } from '../../types';\nimport type { BranchConfig } from '../types';\n\nexport async function prAlreadyExisted(\n  config: BranchConfig\n): Promise<Pr | null> {\n  logger.trace({ config }, 'prAlreadyExisted');\n  if (config.recreateClosed) {\n    logger.debug('recreateClosed is true');\n    return null;\n  }\n  logger.debug('recreateClosed is false');\n  // Return if same PR already existed\n  const pr = await platform.findPr({\n    branchName: config.branchName,\n    prTitle: config.prTitle,\n    state: PrState.NotOpen,\n  });\n  if (pr) {\n    logger.debug('Found closed PR with current title');\n    const prDetails = await platform.getPr(pr.number);\n    // istanbul ignore if\n    if (prDetails.state === PrState.Open) {\n      logger.debug('PR reopened - aborting run');\n      throw new Error(REPOSITORY_CHANGED);\n    }\n    return pr;\n  }\n  logger.debug('prAlreadyExisted=false');\n  return null;\n}\n"]}