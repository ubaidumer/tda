{"version":3,"file":"metadata.js","sourceRoot":"","sources":["../../lib/datasource/metadata.ts"],"names":[],"mappings":";;;;AAAA,2DAAsB;AACtB,uEAAkC;AAClC,2FAAwC;AACxC,iCAAiC;AACjC,2EAAgD;AAChD,yCAAsC;AACtC,qCAA0C;AAG1C,wDAAwD;AACxD,4FAA4F;AAC5F,MAAM,mBAAmB,GAAG;IAC1B,GAAG,EAAE;QACH,wBAAwB,EACtB,uDAAuD;QACzD,QAAQ,EAAE,sDAAsD;QAChE,UAAU,EAAE,2DAA2D;QACvE,MAAM,EACJ,6EAA6E;QAC/E,cAAc,EACZ,0FAA0F;QAC5F,KAAK,EAAE,+DAA+D;QACtE,wBAAwB,EACtB,kFAAkF;QACpF,SAAS,EACP,8EAA8E;KACjF;IACD,IAAI,EAAE;QACJ,OAAO,EAAE,yDAAyD;QAClE,cAAc,EACZ,+EAA+E;QACjF,MAAM,EAAE,4DAA4D;QACpE,mBAAmB,EACjB,gEAAgE;QAClE,MAAM,EAAE,4DAA4D;QACpE,iBAAiB,EACf,wEAAwE;QAC1E,UAAU,EACR,8FAA8F;QAChG,IAAI,EAAE,kDAAkD;QACxD,IAAI,EAAE,iCAAiC;QACvC,YAAY,EACV,iFAAiF;QACnF,QAAQ,EAAE,gDAAgD;QAC1D,iBAAiB,EAAE,gDAAgD;QACnE,SAAS,EACP,qEAAqE;QACvE,sBAAsB,EACpB,oEAAoE;QACtE,gBAAgB,EACd,gEAAgE;QAClE,QAAQ,EAAE,wDAAwD;QAClE,UAAU,EAAE,kDAAkD;QAC9D,KAAK,EAAE,4DAA4D;QACnE,OAAO,EAAE,8DAA8D;KACxE;IACD,MAAM,EAAE;QACN,kBAAkB,EAChB,sEAAsE;QACxE,sBAAsB,EACpB,wEAAwE;QAC1E,kBAAkB,EAAE,iDAAiD;QACrE,KAAK,EAAE,kCAAkC;KAC1C;CACF,CAAC;AAEF,4DAA4D;AAC5D,6EAA6E;AAC7E,MAAM,gBAAgB,GAAG;IACvB,GAAG,EAAE;QACH,oBAAoB,EAAE,4CAA4C;QAClE,kCAAkC,EAChC,4DAA4D;KAC/D;IACD,MAAM,EAAE;QACN,eAAe,EAAE,uCAAuC;QACxD,iBAAiB,EAAE,oCAAoC;QACvD,gBAAgB,EAAE,mCAAmC;QACrD,aAAa,EAAE,gCAAgC;QAC/C,2BAA2B,EACzB,sDAAsD;QACxD,yBAAyB,EACvB,oDAAoD;QACtD,wBAAwB,EACtB,mDAAmD;QACrD,gCAAgC,EAC9B,gDAAgD;QAClD,kBAAkB,EAAE,2CAA2C;QAC/D,sBAAsB,EAAE,6CAA6C;QACrE,aAAa,EAAE,mCAAmC;QAClD,qBAAqB,EAAE,wCAAwC;QAC/D,IAAI,EAAE,gCAAgC;QACtC,OAAO,EAAE,uCAAuC;KACjD;IACD,UAAU,EAAE;QACV,IAAI,EAAE,gCAAgC;KACvC;IACD,GAAG,EAAE;QACH,IAAI,EAAE,gCAAgC;KACvC;IACD,GAAG,EAAE;QACH,IAAI,EAAE,gCAAgC;KACvC;IACD,IAAI,EAAE;QACJ,MAAM,EAAE,kCAAkC;QAC1C,IAAI,EAAE,gCAAgC;KACvC;CACF,CAAC;AAEF,MAAM,WAAW,GAAG,IAAA,aAAK,EAAC,sCAAsC,CAAC,CAAC;AAClE,MAAM,SAAS,GAAG,IAAA,aAAK,EAAC,WAAW,CAAC,CAAC;AAErC,SAAgB,gBAAgB,CAAC,GAAW;IAC1C,IAAI,WAAW,GAAG,GAAG,CAAC;IAEtB,IAAI,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;QAC1B,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;KACjE;IAED,OAAO,WAAW;SACf,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC;SAC1B,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC;SAC9B,OAAO,CAAC,YAAY,EAAE,QAAQ,CAAC;SAC/B,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC;SACjC,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC;SAC9B,OAAO,CAAC,WAAW,EAAE,0BAA0B,CAAC;SAChD,OAAO,CAAC,gBAAgB,EAAE,YAAY,CAAC;SACvC,KAAK,CAAC,GAAG,CAAC;SACV,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;SACX,IAAI,CAAC,GAAG,CAAC,CAAC;AACf,CAAC;AAlBD,4CAkBC;AAED,SAAS,gBAAgB,CAAC,GAAW;IACnC,OAAO,GAAG;SACP,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC;SAC1B,OAAO,CAAC,IAAA,aAAK,EAAC,aAAa,CAAC,EAAE,UAAU,CAAC;SACzC,OAAO,CAAC,IAAA,aAAK,EAAC,cAAc,CAAC,EAAE,EAAE,CAAC;SAClC,OAAO,CAAC,IAAA,aAAK,EAAC,MAAM,CAAC,EAAE,EAAE,CAAC;SAC1B,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AACzB,CAAC;AAED,SAAgB,aAAa,CAAC,KAAU;IACtC,IACE,OAAO,KAAK,KAAK,QAAQ;QACzB,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;QACpB,KAAK,GAAG,CAAC;QACT,KAAK,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,EACzC;QACA,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;KACtC;IAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC7B,oEAAoE;QACpE,gCAAgC;QAChC,EAAE;QACF,yEAAyE;QACzE,EAAE;QACF,mEAAmE;QACnE,8DAA8D;QAC9D,EAAE;QACF,uDAAuD;QACvD,wCAAwC;QACxC,+CAA+C;QAC/C,EAAE;QACF,MAAM,SAAS,GAAG,gBAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;QAC3D,IAAI,SAAS,CAAC,OAAO,EAAE;YACrB,OAAO,SAAS,CAAC,KAAK,EAAE,CAAC;SAC1B;QAED,OAAO,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;KACzC;IAED,IAAI,KAAK,YAAY,IAAI,EAAE;QACzB,OAAO,KAAK,CAAC,WAAW,EAAE,CAAC;KAC5B;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AApCD,sCAoCC;AAED,SAAS,iBAAiB,CAAC,GAAkB;IAC3C,KAAK,MAAM,OAAO,IAAI,GAAG,CAAC,QAAQ,IAAI,EAAE,EAAE;QACxC,IAAI,EAAE,gBAAgB,EAAE,GAAG,OAAO,CAAC;QACnC,OAAO,OAAO,CAAC,gBAAgB,CAAC;QAChC,gBAAgB,GAAG,aAAa,CAAC,gBAAgB,CAAC,CAAC;QACnD,IAAI,gBAAgB,EAAE;YACpB,OAAO,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;SAC7C;KACF;AACH,CAAC;AAED,SAAgB,WAAW,CACzB,GAAmB,EACnB,UAAmB,EACnB,UAAmB;;IAEnB,IAAI,CAAC,GAAG,EAAE;QACR,OAAO;KACR;IAED,iBAAiB,CAAC,GAAG,CAAC,CAAC;IAEvB,MAAM,mBAAmB,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IACzE,IAAI,MAAA,mBAAmB,CAAC,UAAU,CAAC,0CAAG,mBAAmB,CAAC,EAAE;QAC1D,GAAG,CAAC,YAAY,GAAG,mBAAmB,CAAC,UAAU,CAAC,CAAC,mBAAmB,CAAC,CAAC;KACzE;IACD,IAAI,MAAA,gBAAgB,CAAC,UAAU,CAAC,0CAAG,mBAAmB,CAAC,EAAE;QACvD,GAAG,CAAC,SAAS,GAAG,gBAAgB,CAAC,UAAU,CAAC,CAAC,mBAAmB,CAAC,CAAC;KACnE;IAED,IACE,CAAA,MAAA,GAAG,CAAC,YAAY,0CAAE,QAAQ,CAAC,YAAY,CAAC,KAAI,kDAAkD;QAC9F,CAAC,GAAG,CAAC,SAAS,EACd;QACA,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,YAAY,CAAC;KAClC;IACD,kBAAkB;IAClB,IAAI,MAAA,GAAG,CAAC,QAAQ,0CAAE,QAAQ,CAAC,YAAY,CAAC,EAAE,EAAE,kDAAkD;QAC5F,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE;YAClB,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,QAAQ,CAAC;SAC9B;QACD,OAAO,GAAG,CAAC,QAAQ,CAAC;KACrB;IACD,MAAM,aAAa,GAAG,EAAE,CAAC;IACzB,uBAAuB;IACvB,SAAS,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;QACvD,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,IAAI,EAAE,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IACH,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACjC,IAAI,GAAG,CAAC,SAAS,EAAE;QACjB,MAAM,SAAS,GAAG,aAAG,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC3C,IAAI,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,QAAQ,EAAE;YACvB,IAAI,WAAW,CAAC;YAChB,IAAI,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;gBACzC,WAAW,GAAG,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;aAC/C;iBAAM;gBACL,WAAW,GAAG,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;aAC/C;YACD,mBAAmB;YACnB,GAAG,CAAC,SAAS;gBACX,IAAA,6BAAK,EAAC,WAAW,EAAE;oBACjB,aAAa;iBACd,CAAC,IAAI,GAAG,CAAC,SAAS,CAAC;SACvB;aAAM;YACL,OAAO,GAAG,CAAC,SAAS,CAAC;SACtB;KACF;IAED,0BAA0B;IAC1B,MAAM,IAAI,GAAG,CAAC,UAAU,EAAE,WAAW,EAAE,cAAc,EAAE,eAAe,CAAC,CAAC;IACxE,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;QACtB,IAAI,YAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAA,iBAAW,EAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE;YACvD,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;SAC5B;aAAM;YACL,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;SACjB;KACF;AACH,CAAC;AAlED,kCAkEC","sourcesContent":["import URL from 'url';\nimport is from '@sindresorhus/is';\nimport parse from 'github-url-from-git';\nimport { DateTime } from 'luxon';\nimport * as hostRules from '../util/host-rules';\nimport { regEx } from '../util/regex';\nimport { validateUrl } from '../util/url';\nimport type { ReleaseResult } from './types';\n\n// Use this object to define changelog URLs for packages\n// Only necessary when the changelog data cannot be found in the package's source repository\nconst manualChangelogUrls = {\n  npm: {\n    'babel-preset-react-app':\n      'https://github.com/facebook/create-react-app/releases',\n    firebase: 'https://firebase.google.com/support/release-notes/js',\n    'flow-bin': 'https://github.com/facebook/flow/blob/master/Changelog.md',\n    gatsby:\n      'https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/CHANGELOG.md',\n    'react-native':\n      'https://github.com/react-native-community/react-native-releases/blob/master/CHANGELOG.md',\n    sharp: 'https://github.com/lovell/sharp/blob/master/docs/changelog.md',\n    'tailwindcss-classnames':\n      'https://github.com/muhammadsammy/tailwindcss-classnames/blob/master/CHANGELOG.md',\n    'zone.js':\n      'https://github.com/angular/angular/blob/master/packages/zone.js/CHANGELOG.md',\n  },\n  pypi: {\n    alembic: 'https://alembic.sqlalchemy.org/en/latest/changelog.html',\n    beautifulsoup4:\n      'https://bazaar.launchpad.net/~leonardr/beautifulsoup/bs4/view/head:/CHANGELOG',\n    django: 'https://github.com/django/django/tree/master/docs/releases',\n    djangorestframework:\n      'https://www.django-rest-framework.org/community/release-notes/',\n    flake8: 'http://flake8.pycqa.org/en/latest/release-notes/index.html',\n    'django-storages':\n      'https://github.com/jschneier/django-storages/blob/master/CHANGELOG.rst',\n    hypothesis:\n      'https://github.com/HypothesisWorks/hypothesis/blob/master/hypothesis-python/docs/changes.rst',\n    lxml: 'https://git.launchpad.net/lxml/plain/CHANGES.txt',\n    mypy: 'https://mypy-lang.blogspot.com/',\n    phonenumbers:\n      'https://github.com/daviddrysdale/python-phonenumbers/blob/dev/python/HISTORY.md',\n    psycopg2: 'http://initd.org/psycopg/articles/tag/release/',\n    'psycopg2-binary': 'http://initd.org/psycopg/articles/tag/release/',\n    pycountry:\n      'https://github.com/flyingcircusio/pycountry/blob/master/HISTORY.txt',\n    'django-debug-toolbar':\n      'https://django-debug-toolbar.readthedocs.io/en/latest/changes.html',\n    'firebase-admin':\n      'https://firebase.google.com/support/release-notes/admin/python',\n    requests: 'https://github.com/psf/requests/blob/master/HISTORY.md',\n    sqlalchemy: 'https://docs.sqlalchemy.org/en/latest/changelog/',\n    uwsgi: 'https://uwsgi-docs.readthedocs.io/en/latest/#release-notes',\n    wagtail: 'https://github.com/wagtail/wagtail/tree/master/docs/releases',\n  },\n  docker: {\n    'gitlab/gitlab-ce':\n      'https://gitlab.com/gitlab-org/gitlab-foss/-/blob/master/CHANGELOG.md',\n    'gitlab/gitlab-runner':\n      'https://gitlab.com/gitlab-org/gitlab-runner/-/blob/master/CHANGELOG.md',\n    'google/cloud-sdk': 'https://cloud.google.com/sdk/docs/release-notes',\n    neo4j: 'https://neo4j.com/release-notes/',\n  },\n};\n\n// Use this object to define manual source URLs for packages\n// Only necessary if the datasource is unable to locate the source URL itself\nconst manualSourceUrls = {\n  orb: {\n    'cypress-io/cypress': 'https://github.com/cypress-io/circleci-orb',\n    'hutson/library-release-workflows':\n      'https://github.com/hyper-expanse/library-release-workflows',\n  },\n  docker: {\n    'amd64/traefik': 'https://github.com/containous/traefik',\n    'coredns/coredns': 'https://github.com/coredns/coredns',\n    'docker/compose': 'https://github.com/docker/compose',\n    'drone/drone': 'https://github.com/drone/drone',\n    'drone/drone-runner-docker':\n      'https://github.com/drone-runners/drone-runner-docker',\n    'drone/drone-runner-kube':\n      'https://github.com/drone-runners/drone-runner-kube',\n    'drone/drone-runner-ssh':\n      'https://github.com/drone-runners/drone-runner-ssh',\n    'gcr.io/kaniko-project/executor':\n      'https://github.com/GoogleContainerTools/kaniko',\n    'gitlab/gitlab-ce': 'https://gitlab.com/gitlab-org/gitlab-foss',\n    'gitlab/gitlab-runner': 'https://gitlab.com/gitlab-org/gitlab-runner',\n    'gitea/gitea': 'https://github.com/go-gitea/gitea',\n    'hashicorp/terraform': 'https://github.com/hashicorp/terraform',\n    node: 'https://github.com/nodejs/node',\n    traefik: 'https://github.com/containous/traefik',\n  },\n  kubernetes: {\n    node: 'https://github.com/nodejs/node',\n  },\n  npm: {\n    node: 'https://github.com/nodejs/node',\n  },\n  nvm: {\n    node: 'https://github.com/nodejs/node',\n  },\n  pypi: {\n    mkdocs: 'https://github.com/mkdocs/mkdocs',\n    mypy: 'https://github.com/python/mypy',\n  },\n};\n\nconst githubPages = regEx('^https://([^.]+).github.com/([^/]+)$');\nconst gitPrefix = regEx('^git:/?/?');\n\nexport function massageGithubUrl(url: string): string {\n  let massagedUrl = url;\n\n  if (url.startsWith('git@')) {\n    massagedUrl = url.replace(':', '/').replace('git@', 'https://');\n  }\n\n  return massagedUrl\n    .replace('http:', 'https:')\n    .replace('http+git:', 'https:')\n    .replace('https+git:', 'https:')\n    .replace('ssh://git@', 'https://')\n    .replace(gitPrefix, 'https://')\n    .replace(githubPages, 'https://github.com/$1/$2')\n    .replace('www.github.com', 'github.com')\n    .split('/')\n    .slice(0, 5)\n    .join('/');\n}\n\nfunction massageGitlabUrl(url: string): string {\n  return url\n    .replace('http:', 'https:')\n    .replace(regEx(/^git:\\/?\\/?/), 'https://')\n    .replace(regEx(/\\/tree\\/.*$/i), '')\n    .replace(regEx(/\\/$/i), '')\n    .replace('.git', '');\n}\n\nexport function normalizeDate(input: any): string | null {\n  if (\n    typeof input === 'number' &&\n    !Number.isNaN(input) &&\n    input > 0 &&\n    input <= Date.now() + 24 * 60 * 60 * 1000\n  ) {\n    return new Date(input).toISOString();\n  }\n\n  if (typeof input === 'string') {\n    // `Date.parse()` is more permissive, but it assumes local time zone\n    // for inputs like `2021-01-01`.\n    //\n    // Here we try to parse with default UTC with fallback to `Date.parse()`.\n    //\n    // It allows us not to care about machine timezones so much, though\n    // some misinterpretation is still possible, but only if both:\n    //\n    //   1. Renovate machine is configured for non-UTC zone\n    //   2. Format of `input` is very exotic\n    //      (from `DateTime.fromISO()` perspective)\n    //\n    const luxonDate = DateTime.fromISO(input, { zone: 'UTC' });\n    if (luxonDate.isValid) {\n      return luxonDate.toISO();\n    }\n\n    return normalizeDate(Date.parse(input));\n  }\n\n  if (input instanceof Date) {\n    return input.toISOString();\n  }\n\n  return null;\n}\n\nfunction massageTimestamps(dep: ReleaseResult): void {\n  for (const release of dep.releases || []) {\n    let { releaseTimestamp } = release;\n    delete release.releaseTimestamp;\n    releaseTimestamp = normalizeDate(releaseTimestamp);\n    if (releaseTimestamp) {\n      release.releaseTimestamp = releaseTimestamp;\n    }\n  }\n}\n\nexport function addMetaData(\n  dep?: ReleaseResult,\n  datasource?: string,\n  lookupName?: string\n): void {\n  if (!dep) {\n    return;\n  }\n\n  massageTimestamps(dep);\n\n  const lookupNameLowercase = lookupName ? lookupName.toLowerCase() : null;\n  if (manualChangelogUrls[datasource]?.[lookupNameLowercase]) {\n    dep.changelogUrl = manualChangelogUrls[datasource][lookupNameLowercase];\n  }\n  if (manualSourceUrls[datasource]?.[lookupNameLowercase]) {\n    dep.sourceUrl = manualSourceUrls[datasource][lookupNameLowercase];\n  }\n\n  if (\n    dep.changelogUrl?.includes('github.com') && // lgtm [js/incomplete-url-substring-sanitization]\n    !dep.sourceUrl\n  ) {\n    dep.sourceUrl = dep.changelogUrl;\n  }\n  // prettier-ignore\n  if (dep.homepage?.includes('github.com')) { // lgtm [js/incomplete-url-substring-sanitization]\n    if (!dep.sourceUrl) {\n      dep.sourceUrl = dep.homepage;\n    }\n    delete dep.homepage;\n  }\n  const extraBaseUrls = [];\n  // istanbul ignore next\n  hostRules.hosts({ hostType: 'github' }).forEach((host) => {\n    extraBaseUrls.push(host, `gist.${host}`);\n  });\n  extraBaseUrls.push('gitlab.com');\n  if (dep.sourceUrl) {\n    const parsedUrl = URL.parse(dep.sourceUrl);\n    if (parsedUrl?.hostname) {\n      let massagedUrl;\n      if (parsedUrl.hostname.includes('gitlab')) {\n        massagedUrl = massageGitlabUrl(dep.sourceUrl);\n      } else {\n        massagedUrl = massageGithubUrl(dep.sourceUrl);\n      }\n      // try massaging it\n      dep.sourceUrl =\n        parse(massagedUrl, {\n          extraBaseUrls,\n        }) || dep.sourceUrl;\n    } else {\n      delete dep.sourceUrl;\n    }\n  }\n\n  // Clean up any empty urls\n  const urls = ['homepage', 'sourceUrl', 'changelogUrl', 'dependencyUrl'];\n  for (const url of urls) {\n    if (is.string(dep[url]) && validateUrl(dep[url].trim())) {\n      dep[url] = dep[url].trim();\n    } else {\n      delete dep[url];\n    }\n  }\n}\n"]}