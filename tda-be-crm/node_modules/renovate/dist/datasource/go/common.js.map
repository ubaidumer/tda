{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../lib/datasource/go/common.ts"],"names":[],"mappings":";;;AAAA,0CAAuC;AACvC,sDAA4D;AAC5D,sDAA4E;AAC5E,gDAAwD;AACxD,gDAAwD;AACxD,8CAAsE;AAIzD,QAAA,EAAE,GAAG,IAAI,CAAC;AAEV,QAAA,IAAI,GAAG,IAAI,WAAI,CAAC,UAAE,CAAC,CAAC;AAEpB,QAAA,SAAS,GAAG,IAAI,wCAAuB,EAAE,CAAC;AAEvD,IAAY,eAGX;AAHD,WAAY,eAAe;IACzB,2CAAwB,CAAA;IACxB,+BAAY,CAAA;AACd,CAAC,EAHW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAG1B;AAED,SAAgB,YAAY,CAAC,UAAuB;IAClD,IAAI,UAAU,EAAE;QACd,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG,UAAU,CAAC;QAE3D,IAAI,UAAU,KAAK,gBAAgB,EAAE;YACnC,OAAO,IAAA,qBAAe,EAAC,UAAU,EAAE,WAAW,CAAC,CAAC;SACjD;QAED,IAAI,UAAU,KAAK,gBAAgB,EAAE;YACnC,OAAO,IAAA,mBAAe,EAAC,UAAU,EAAE,WAAW,CAAC,CAAC;SACjD;QAED,IAAI,UAAU,KAAK,iBAAS,CAAC,EAAE,EAAE;YAC/B,OAAO,wCAAuB,CAAC,YAAY,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;SACtE;KACF;IAED,uBAAuB;IACvB,OAAO,SAAS,CAAC;AACnB,CAAC;AAnBD,oCAmBC","sourcesContent":["import { Http } from '../../util/http';\nimport { BitBucketTagsDatasource } from '../bitbucket-tags';\nimport { getSourceUrl as githubSourceUrl } from '../github-releases/common';\nimport { id as githubDatasource } from '../github-tags';\nimport { id as gitlabDatasource } from '../gitlab-tags';\nimport { getSourceUrl as gitlabSourceUrl } from '../gitlab-tags/util';\n\nimport type { DataSource } from './types';\n\nexport const id = 'go';\n\nexport const http = new Http(id);\n\nexport const bitbucket = new BitBucketTagsDatasource();\n\nexport enum GoproxyFallback {\n  WhenNotFoundOrGone = ',',\n  Always = '|',\n}\n\nexport function getSourceUrl(dataSource?: DataSource): string | undefined {\n  if (dataSource) {\n    const { datasource, registryUrl, lookupName } = dataSource;\n\n    if (datasource === githubDatasource) {\n      return githubSourceUrl(lookupName, registryUrl);\n    }\n\n    if (datasource === gitlabDatasource) {\n      return gitlabSourceUrl(lookupName, registryUrl);\n    }\n\n    if (datasource === bitbucket.id) {\n      return BitBucketTagsDatasource.getSourceUrl(lookupName, registryUrl);\n    }\n  }\n\n  // istanbul ignore next\n  return undefined;\n}\n"]}