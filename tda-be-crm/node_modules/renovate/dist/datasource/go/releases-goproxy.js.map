{"version":3,"file":"releases-goproxy.js","sourceRoot":"","sources":["../../../lib/datasource/go/releases-goproxy.ts"],"names":[],"mappings":";;;;AAAA,uEAAkC;AAClC,2DAAsB;AACtB,+DAAyB;AACzB,yCAAsC;AACtC,oFAAyD;AACzD,4CAAyC;AAEzC,qCAA+D;AAC/D,qDAAiD;AACjD,uEAA4C;AAG5C,MAAM,aAAa,GAAkC,EAAE,CAAC;AAExD;;;;;;;;;;;;GAYG;AACH,SAAgB,YAAY,CAC1B,QAAgB,OAAO,CAAC,GAAG,CAAC,OAAO;IAEnC,IAAI,CAAC,YAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;QACrB,OAAO,EAAE,CAAC;KACX;IAED,IAAI,aAAa,CAAC,KAAK,CAAC,EAAE;QACxB,OAAO,aAAa,CAAC,KAAK,CAAC,CAAC;KAC7B;IAED,MAAM,MAAM,GAAkB,KAAK;SAChC,KAAK,CAAC,IAAA,aAAK,EAAC,kBAAkB,CAAC,CAAC;SAChC,MAAM,CAAC,OAAO,CAAC;SACf,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,yBAAyB;SACzD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC;QAC1B,GAAG;QACH,QAAQ,EACN,SAAS,KAAK,GAAG;YACf,CAAC,CAAC,wBAAe,CAAC,kBAAkB;YACpC,CAAC,CAAC,wBAAe,CAAC,MAAM;KAC7B,CAAC,CAAC,CAAC;IAEN,aAAa,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;IAC9B,OAAO,MAAM,CAAC;AAChB,CAAC;AAzBD,oCAyBC;AAED,qCAAqC;AACrC,MAAM,KAAK,GAAG,aAAG,CAAC,MAAM,CAAC;IACvB,IAAI,EAAE;QACJ,SAAS,EAAE;YACT,KAAK,EAAE,WAAW;YAClB,KAAK,EAAE,CAAC,CAAS,EAAE,EAAE,CAAC,GAAG;SAC1B;QACD,QAAQ,EAAE;YACR,KAAK,EAAE,GAAG;YACV,KAAK,EAAE,CAAC,CAAS,EAAE,EAAE,CAAC,SAAS;SAChC;QACD,KAAK,EAAE;YACL,KAAK,EAAE,GAAG;YACV,KAAK,EAAE,CAAC,CAAS,EAAE,EAAE,CAAC,QAAQ;SAC/B;QACD,kBAAkB,EAAE;YAClB,KAAK,EAAE,GAAG;YACV,IAAI,EAAE,gBAAgB;YACtB,KAAK,EAAE,CAAC,CAAS,EAAE,EAAE,CAAC,GAAG;SAC1B;QACD,IAAI,EAAE;YACJ,KAAK,EAAE,YAAY;YACnB,KAAK,EAAE,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAA,aAAK,EAAC,KAAK,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC;SAC1D;QACD,WAAW,EAAE;YACX,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;SACjC;KACF;IACD,cAAc,EAAE;QACd,IAAI,EAAE,WAAW;QACjB,WAAW,EAAE;YACX,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;SACjC;QACD,iBAAiB,EAAE;YACjB,KAAK,EAAE,GAAG;YACV,GAAG,EAAE,CAAC;SACP;KACF;CACF,CAAC,CAAC;AAEH,MAAM,aAAa,GAAkC,EAAE,CAAC;AAExD,SAAgB,YAAY,CAC1B,QAAiB,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,OAAO,CAAC,GAAG,CAAC,SAAS;IAE/D,IAAI,CAAC,YAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;QACrB,OAAO,IAAI,CAAC;KACb;IACD,IAAI,aAAa,CAAC,KAAK,CAAC,KAAK,SAAS,EAAE;QACtC,OAAO,aAAa,CAAC,KAAK,CAAC,CAAC;KAC7B;IACD,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACnB,MAAM,cAAc,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrE,MAAM,MAAM,GAAG,cAAc,CAAC,CAAC,CAAC,IAAA,aAAK,EAAC,OAAO,cAAc,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACxE,aAAa,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;IAC9B,OAAO,MAAM,CAAC;AAChB,CAAC;AAdD,oCAcC;AAED;;;;GAIG;AACH,SAAgB,UAAU,CAAC,KAAa;IACtC,OAAO,KAAK,CAAC,OAAO,CAAC,IAAA,aAAK,EAAC,UAAU,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AACxE,CAAC;AAFD,gCAEC;AAEM,KAAK,UAAU,YAAY,CAChC,OAAe,EACf,UAAkB;IAElB,MAAM,GAAG,GAAG,GAAG,OAAO,IAAI,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC;IAC3D,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,aAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACrC,OAAO,IAAI;SACR,KAAK,CAAC,IAAA,aAAK,EAAC,KAAK,CAAC,CAAC;SACnB,MAAM,CAAC,OAAO,CAAC;SACf,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC;AAVD,oCAUC;AAEM,KAAK,UAAU,WAAW,CAC/B,OAAe,EACf,UAAkB,EAClB,OAAe;IAEf,MAAM,GAAG,GAAG,GAAG,OAAO,IAAI,UAAU,CAAC,UAAU,CAAC,OAAO,OAAO,OAAO,CAAC;IACtE,MAAM,GAAG,GAAG,MAAM,aAAI,CAAC,OAAO,CAAc,GAAG,CAAC,CAAC;IAEjD,MAAM,MAAM,GAAY;QACtB,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO;KAC1B,CAAC;IAEF,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE;QACjB,MAAM,CAAC,gBAAgB,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;KACzC;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAjBD,kCAiBC;AAEM,KAAK,UAAU,WAAW,CAC/B,MAAyB;;IAEzB,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,CAAC;IAC9B,eAAM,CAAC,KAAK,CAAC,uBAAuB,UAAU,GAAG,CAAC,CAAC;IAEnD,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;IACpC,MAAM,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;IACxC,MAAM,OAAO,GAAG,YAAY,EAAE,CAAC;IAE/B,MAAM,eAAe,GAAG,qBAAqB,CAAC;IAC9C,MAAM,QAAQ,GAAG,GAAG,UAAU,KAAK,OAAO,KAAK,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,EAAE,EAAE,CAAC;IACrE,MAAM,YAAY,GAAG,EAAE,CAAC;IACxB,MAAM,YAAY,GAAG,MAAM,YAAY,CAAC,GAAG,CACzC,eAAe,EACf,QAAQ,CACT,CAAC;IACF,qBAAqB;IACrB,IAAI,YAAY,IAAI,YAAY,KAAK,IAAI,EAAE;QACzC,OAAO,YAAY,CAAC;KACrB;IAED,IAAI,MAAM,GAAyB,IAAI,CAAC;IAExC,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,CAAC,UAAU,CAAC,EAAE;QAC7B,eAAM,CAAC,KAAK,CAAC,YAAY,UAAU,sBAAsB,CAAC,CAAC;QAC3D,MAAM,GAAG,MAAM,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC1C,MAAM,YAAY,CAAC,GAAG,CAAC,eAAe,EAAE,QAAQ,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;QACxE,OAAO,MAAM,CAAC;KACf;IAED,KAAK,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,SAAS,EAAE;QACzC,IAAI;YACF,IAAI,GAAG,KAAK,KAAK,EAAE;gBACjB,MAAM;aACP;iBAAM,IAAI,GAAG,KAAK,QAAQ,EAAE;gBAC3B,MAAM,GAAG,MAAM,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;gBAC1C,MAAM;aACP;YAED,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;YACrD,MAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,KAAK,IAAsB,EAAE;gBACnE,IAAI;oBACF,OAAO,MAAM,WAAW,CAAC,GAAG,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;iBACpD;gBAAC,OAAO,GAAG,EAAE;oBACZ,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,0BAA0B,GAAG,EAAE,CAAC,CAAC;oBACvD,OAAO,EAAE,OAAO,EAAE,CAAC;iBACpB;YACH,CAAC,CAAC,CAAC;YACH,MAAM,QAAQ,GAAG,MAAM,IAAA,eAAI,EAAC,KAAK,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;YACvD,IAAI,QAAQ,CAAC,MAAM,EAAE;gBACnB,MAAM,UAAU,GAAG,MAAM,IAAA,8BAAa,EAAC,UAAU,CAAC,CAAC;gBACnD,MAAM,SAAS,GAAG,IAAA,qBAAY,EAAC,UAAU,CAAC,CAAC;gBAC3C,MAAM,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC;gBACjC,MAAM;aACP;SACF;QAAC,OAAO,GAAG,EAAE;YACZ,MAAM,UAAU,GAAG,MAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,QAAQ,0CAAE,UAAU,CAAC;YAC7C,MAAM,WAAW,GACf,QAAQ,KAAK,wBAAe,CAAC,MAAM;gBACjC,CAAC,CAAC,IAAI;gBACN,CAAC,CAAC,UAAU,KAAK,GAAG,IAAI,UAAU,KAAK,GAAG,CAAC;YAC/C,MAAM,GAAG,GAAG,WAAW;gBACrB,CAAC,CAAC,sDAAsD;gBACxD,CAAC,CAAC,0DAA0D,CAAC;YAC/D,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC;YAC3B,IAAI,CAAC,WAAW,EAAE;gBAChB,MAAM;aACP;SACF;KACF;IAED,MAAM,YAAY,CAAC,GAAG,CAAC,eAAe,EAAE,QAAQ,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;IACxE,OAAO,MAAM,CAAC;AAChB,CAAC;AA1ED,kCA0EC","sourcesContent":["import is from '@sindresorhus/is';\nimport moo from 'moo';\nimport pAll from 'p-all';\nimport { logger } from '../../logger';\nimport * as packageCache from '../../util/cache/package';\nimport { regEx } from '../../util/regex';\nimport type { GetReleasesConfig, Release, ReleaseResult } from '../types';\nimport { GoproxyFallback, getSourceUrl, http } from './common';\nimport { getDatasource } from './get-datasource';\nimport * as direct from './releases-direct';\nimport type { GoproxyItem, VersionInfo } from './types';\n\nconst parsedGoproxy: Record<string, GoproxyItem[]> = {};\n\n/**\n * Parse `GOPROXY` to the sequence of url + fallback strategy tags.\n *\n * @example\n * parseGoproxy('foo.example.com|bar.example.com,baz.example.com')\n * // [\n * //   { url: 'foo.example.com', fallback: '|' },\n * //   { url: 'bar.example.com', fallback: ',' },\n * //   { url: 'baz.example.com', fallback: '|' },\n * // ]\n *\n * @see https://golang.org/ref/mod#goproxy-protocol\n */\nexport function parseGoproxy(\n  input: string = process.env.GOPROXY\n): GoproxyItem[] {\n  if (!is.string(input)) {\n    return [];\n  }\n\n  if (parsedGoproxy[input]) {\n    return parsedGoproxy[input];\n  }\n\n  const result: GoproxyItem[] = input\n    .split(regEx(/([^,|]*(?:,|\\|))/))\n    .filter(Boolean)\n    .map((s) => s.split(/(?=,|\\|)/)) // TODO: #12872 lookahead\n    .map(([url, separator]) => ({\n      url,\n      fallback:\n        separator === ','\n          ? GoproxyFallback.WhenNotFoundOrGone\n          : GoproxyFallback.Always,\n    }));\n\n  parsedGoproxy[input] = result;\n  return result;\n}\n\n// https://golang.org/pkg/path/#Match\nconst lexer = moo.states({\n  main: {\n    separator: {\n      match: /\\s*?,\\s*?/, // TODO #12870\n      value: (_: string) => '|',\n    },\n    asterisk: {\n      match: '*',\n      value: (_: string) => '[^\\\\/]*',\n    },\n    qmark: {\n      match: '?',\n      value: (_: string) => '[^\\\\/]',\n    },\n    characterRangeOpen: {\n      match: '[',\n      push: 'characterRange',\n      value: (_: string) => '[',\n    },\n    char: {\n      match: /[^*?\\\\[\\n]/,\n      value: (s: string) => s.replace(regEx('\\\\.', 'g'), '\\\\.'),\n    },\n    escapedChar: {\n      match: /\\\\./, // TODO #12870\n      value: (s: string) => s.slice(1),\n    },\n  },\n  characterRange: {\n    char: /[^\\\\\\]\\n]/, // TODO #12870\n    escapedChar: {\n      match: /\\\\./, // TODO #12870\n      value: (s: string) => s.slice(1),\n    },\n    characterRangeEnd: {\n      match: ']',\n      pop: 1,\n    },\n  },\n});\n\nconst parsedNoproxy: Record<string, RegExp | null> = {};\n\nexport function parseNoproxy(\n  input: unknown = process.env.GONOPROXY || process.env.GOPRIVATE\n): RegExp | null {\n  if (!is.string(input)) {\n    return null;\n  }\n  if (parsedNoproxy[input] !== undefined) {\n    return parsedNoproxy[input];\n  }\n  lexer.reset(input);\n  const noproxyPattern = [...lexer].map(({ value }) => value).join('');\n  const result = noproxyPattern ? regEx(`^(?:${noproxyPattern})$`) : null;\n  parsedNoproxy[input] = result;\n  return result;\n}\n\n/**\n * Avoid ambiguity when serving from case-insensitive file systems.\n *\n * @see https://golang.org/ref/mod#goproxy-protocol\n */\nexport function encodeCase(input: string): string {\n  return input.replace(regEx(/([A-Z])/g), (x) => `!${x.toLowerCase()}`);\n}\n\nexport async function listVersions(\n  baseUrl: string,\n  lookupName: string\n): Promise<string[]> {\n  const url = `${baseUrl}/${encodeCase(lookupName)}/@v/list`;\n  const { body } = await http.get(url);\n  return body\n    .split(regEx(/\\s+/))\n    .filter(Boolean)\n    .filter((x) => x.indexOf('+') === -1);\n}\n\nexport async function versionInfo(\n  baseUrl: string,\n  lookupName: string,\n  version: string\n): Promise<Release> {\n  const url = `${baseUrl}/${encodeCase(lookupName)}/@v/${version}.info`;\n  const res = await http.getJson<VersionInfo>(url);\n\n  const result: Release = {\n    version: res.body.Version,\n  };\n\n  if (res.body.Time) {\n    result.releaseTimestamp = res.body.Time;\n  }\n\n  return result;\n}\n\nexport async function getReleases(\n  config: GetReleasesConfig\n): Promise<ReleaseResult | null> {\n  const { lookupName } = config;\n  logger.trace(`goproxy.getReleases(${lookupName})`);\n\n  const goproxy = process.env.GOPROXY;\n  const proxyList = parseGoproxy(goproxy);\n  const noproxy = parseNoproxy();\n\n  const cacheNamespaces = 'datasource-go-proxy';\n  const cacheKey = `${lookupName}@@${goproxy}@@${noproxy?.toString()}`;\n  const cacheMinutes = 60;\n  const cachedResult = await packageCache.get<ReleaseResult | null>(\n    cacheNamespaces,\n    cacheKey\n  );\n  // istanbul ignore if\n  if (cachedResult || cachedResult === null) {\n    return cachedResult;\n  }\n\n  let result: ReleaseResult | null = null;\n\n  if (noproxy?.test(lookupName)) {\n    logger.debug(`Fetching ${lookupName} via GONOPROXY match`);\n    result = await direct.getReleases(config);\n    await packageCache.set(cacheNamespaces, cacheKey, result, cacheMinutes);\n    return result;\n  }\n\n  for (const { url, fallback } of proxyList) {\n    try {\n      if (url === 'off') {\n        break;\n      } else if (url === 'direct') {\n        result = await direct.getReleases(config);\n        break;\n      }\n\n      const versions = await listVersions(url, lookupName);\n      const queue = versions.map((version) => async (): Promise<Release> => {\n        try {\n          return await versionInfo(url, lookupName, version);\n        } catch (err) {\n          logger.trace({ err }, `Can't obtain data from ${url}`);\n          return { version };\n        }\n      });\n      const releases = await pAll(queue, { concurrency: 5 });\n      if (releases.length) {\n        const datasource = await getDatasource(lookupName);\n        const sourceUrl = getSourceUrl(datasource);\n        result = { releases, sourceUrl };\n        break;\n      }\n    } catch (err) {\n      const statusCode = err?.response?.statusCode;\n      const canFallback =\n        fallback === GoproxyFallback.Always\n          ? true\n          : statusCode === 404 || statusCode === 410;\n      const msg = canFallback\n        ? 'Goproxy error: trying next URL provided with GOPROXY'\n        : 'Goproxy error: skipping other URLs provided with GOPROXY';\n      logger.debug({ err }, msg);\n      if (!canFallback) {\n        break;\n      }\n    }\n  }\n\n  await packageCache.set(cacheNamespaces, cacheKey, result, cacheMinutes);\n  return result;\n}\n"]}