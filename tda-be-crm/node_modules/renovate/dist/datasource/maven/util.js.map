{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../lib/datasource/maven/util.ts"],"names":[],"mappings":"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","sourcesContent":["import url from 'url';\nimport { DateTime } from 'luxon';\nimport { XmlDocument } from 'xmldoc';\nimport { HOST_DISABLED } from '../../constants/error-messages';\nimport { logger } from '../../logger';\nimport { ExternalHostError } from '../../types/errors/external-host-error';\nimport { Http, HttpResponse } from '../../util/http';\nimport { regEx } from '../../util/regex';\nimport { normalizeDate } from '../metadata';\n\nimport type { ReleaseResult } from '../types';\nimport { MAVEN_REPO, id } from './common';\nimport type {\n  HttpResourceCheckResult,\n  MavenDependency,\n  MavenXml,\n} from './types';\n\nconst http: Record<string, Http> = {};\n\nfunction httpByHostType(hostType: string): Http {\n  if (!http[hostType]) {\n    http[hostType] = new Http(hostType);\n  }\n  return http[hostType];\n}\n\nconst getHost = (x: string): string => new url.URL(x).host;\n\nfunction isMavenCentral(pkgUrl: url.URL | string): boolean {\n  const host = typeof pkgUrl === 'string' ? pkgUrl : pkgUrl.host;\n  return getHost(MAVEN_REPO) === host;\n}\n\nfunction isTemporalError(err: { code: string; statusCode: number }): boolean {\n  return (\n    err.code === 'ECONNRESET' ||\n    err.statusCode === 429 ||\n    (err.statusCode >= 500 && err.statusCode < 600)\n  );\n}\n\nfunction isHostError(err: { code: string }): boolean {\n  return err.code === 'ETIMEDOUT';\n}\n\nfunction isNotFoundError(err: { code: string; statusCode: number }): boolean {\n  return err.code === 'ENOTFOUND' || err.statusCode === 404;\n}\n\nfunction isPermissionsIssue(err: { statusCode: number }): boolean {\n  return err.statusCode === 401 || err.statusCode === 403;\n}\n\nfunction isConnectionError(err: { code: string }): boolean {\n  return (\n    err.code === 'EAI_AGAIN' ||\n    err.code === 'ERR_TLS_CERT_ALTNAME_INVALID' ||\n    err.code === 'ECONNREFUSED'\n  );\n}\n\nfunction isUnsupportedHostError(err: { name: string }): boolean {\n  return err.name === 'UnsupportedProtocolError';\n}\n\nexport async function downloadHttpProtocol(\n  pkgUrl: url.URL | string,\n  hostType = id\n): Promise<Partial<HttpResponse>> {\n  let raw: HttpResponse;\n  try {\n    const httpClient = httpByHostType(hostType);\n    raw = await httpClient.get(pkgUrl.toString());\n    return raw;\n  } catch (err) {\n    const failedUrl = pkgUrl.toString();\n    if (err.message === HOST_DISABLED) {\n      // istanbul ignore next\n      logger.trace({ failedUrl }, 'Host disabled');\n    } else if (isNotFoundError(err)) {\n      logger.trace({ failedUrl }, `Url not found`);\n    } else if (isHostError(err)) {\n      // istanbul ignore next\n      logger.debug({ failedUrl }, `Cannot connect to ${hostType} host`);\n    } else if (isPermissionsIssue(err)) {\n      logger.debug(\n        { failedUrl },\n        'Dependency lookup unauthorized. Please add authentication with a hostRule'\n      );\n    } else if (isTemporalError(err)) {\n      logger.debug({ failedUrl, err }, 'Temporary error');\n      if (isMavenCentral(pkgUrl)) {\n        throw new ExternalHostError(err);\n      }\n    } else if (isConnectionError(err)) {\n      // istanbul ignore next\n      logger.debug({ failedUrl }, 'Connection refused to maven registry');\n    } else if (isUnsupportedHostError(err)) {\n      // istanbul ignore next\n      logger.debug({ failedUrl }, 'Unsupported host');\n    } else {\n      logger.info({ failedUrl, err }, 'Unknown error');\n    }\n    return {};\n  }\n}\n\nexport async function checkHttpResource(\n  pkgUrl: url.URL | string,\n  hostType = id\n): Promise<HttpResourceCheckResult> {\n  try {\n    const httpClient = httpByHostType(hostType);\n    const res = await httpClient.head(pkgUrl.toString());\n    const timestamp = res?.headers?.['last-modified'] as string;\n    if (timestamp) {\n      const isoTimestamp = normalizeDate(timestamp);\n      if (isoTimestamp) {\n        const releaseDate = DateTime.fromISO(isoTimestamp, {\n          zone: 'UTC',\n        }).toJSDate();\n        return releaseDate;\n      }\n    }\n    return 'found';\n  } catch (err) {\n    if (isNotFoundError(err)) {\n      return 'not-found';\n    }\n\n    const failedUrl = pkgUrl.toString();\n    logger.debug(\n      { failedUrl, statusCode: err.statusCode },\n      `Can't check HTTP resource existence`\n    );\n    return 'error';\n  }\n}\n\nfunction containsPlaceholder(str: string): boolean {\n  return regEx(/\\${.*?}/g).test(str);\n}\n\nexport function getMavenUrl(\n  dependency: MavenDependency,\n  repoUrl: string,\n  path: string\n): url.URL | null {\n  return new url.URL(`${dependency.dependencyUrl}/${path}`, repoUrl);\n}\n\nexport async function downloadMavenXml(\n  pkgUrl: url.URL | null\n): Promise<MavenXml | null> {\n  /* istanbul ignore if */\n  if (!pkgUrl) {\n    return {};\n  }\n  let rawContent: string;\n  let authorization: boolean;\n  let statusCode: number;\n  switch (pkgUrl.protocol) {\n    case 'http:':\n    case 'https:':\n      ({\n        authorization,\n        body: rawContent,\n        statusCode,\n      } = await downloadHttpProtocol(pkgUrl));\n      break;\n    case 's3:':\n      logger.debug('Skipping s3 dependency');\n      return {};\n    default:\n      logger.debug({ url: pkgUrl.toString() }, `Unsupported Maven protocol`);\n      return {};\n  }\n\n  if (!rawContent) {\n    logger.debug(\n      { url: pkgUrl.toString(), statusCode },\n      `Content is not found for Maven url`\n    );\n    return {};\n  }\n\n  return { authorization, xml: new XmlDocument(rawContent) };\n}\n\nexport function getDependencyParts(lookupName: string): MavenDependency {\n  const [group, name] = lookupName.split(':');\n  const dependencyUrl = `${group.replace(regEx(/\\./g), '/')}/${name}`;\n  return {\n    display: lookupName,\n    group,\n    name,\n    dependencyUrl,\n  };\n}\n\nexport async function getDependencyInfo(\n  dependency: MavenDependency,\n  repoUrl: string,\n  version: string,\n  recursionLimit = 5\n): Promise<Partial<ReleaseResult>> {\n  const result: Partial<ReleaseResult> = {};\n  const path = `${version}/${dependency.name}-${version}.pom`;\n\n  const pomUrl = getMavenUrl(dependency, repoUrl, path);\n  const { xml: pomContent } = await downloadMavenXml(pomUrl);\n  // istanbul ignore if\n  if (!pomContent) {\n    return result;\n  }\n\n  const homepage = pomContent.valueWithPath('url');\n  if (homepage && !containsPlaceholder(homepage)) {\n    result.homepage = homepage;\n  }\n\n  const sourceUrl = pomContent.valueWithPath('scm.url');\n  if (sourceUrl && !containsPlaceholder(sourceUrl)) {\n    result.sourceUrl = sourceUrl\n      .replace(regEx(/^scm:/), '')\n      .replace(regEx(/^git:/), '')\n      .replace(regEx(/^git@github.com:/), 'https://github.com/')\n      .replace(regEx(/^git@github.com\\//), 'https://github.com/')\n      .replace(regEx(/\\.git$/), '');\n\n    if (result.sourceUrl.startsWith('//')) {\n      // most likely the result of us stripping scm:, git: etc\n      // going with prepending https: here which should result in potential information retrival\n      result.sourceUrl = `https:${result.sourceUrl}`;\n    }\n  }\n\n  const parent = pomContent.childNamed('parent');\n  if (recursionLimit > 0 && parent && (!result.sourceUrl || !result.homepage)) {\n    // if we found a parent and are missing some information\n    // trying to get the scm/homepage information from it\n    const [parentGroupId, parentArtifactId, parentVersion] = [\n      'groupId',\n      'artifactId',\n      'version',\n    ].map((k) => parent.valueWithPath(k)?.replace(/\\s+/g, ''));\n    if (parentGroupId && parentArtifactId && parentVersion) {\n      const parentDisplayId = `${parentGroupId}:${parentArtifactId}`;\n      const parentDependency = getDependencyParts(parentDisplayId);\n      const parentInformation = await getDependencyInfo(\n        parentDependency,\n        repoUrl,\n        parentVersion,\n        recursionLimit - 1\n      );\n      if (!result.sourceUrl && parentInformation.sourceUrl) {\n        result.sourceUrl = parentInformation.sourceUrl;\n      }\n      if (!result.homepage && parentInformation.homepage) {\n        result.homepage = parentInformation.homepage;\n      }\n    }\n  }\n\n  return result;\n}\n"]}