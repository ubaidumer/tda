"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const adoptium_java_1 = require("./adoptium-java");
const artifactory_1 = require("./artifactory");
const aws_machine_image_1 = require("./aws-machine-image");
const bitbucket_tags_1 = require("./bitbucket-tags");
const cdnjs_1 = require("./cdnjs");
const clojure_1 = require("./clojure");
const crate_1 = require("./crate");
const dart_1 = require("./dart");
const docker = (0, tslib_1.__importStar)(require("./docker"));
const galaxy_1 = require("./galaxy");
const galaxy_collection_1 = require("./galaxy-collection");
const git_refs_1 = require("./git-refs");
const git_tags_1 = require("./git-tags");
const githubReleases = (0, tslib_1.__importStar)(require("./github-releases"));
const githubTags = (0, tslib_1.__importStar)(require("./github-tags"));
const gitlab_packages_1 = require("./gitlab-packages");
const gitlab_releases_1 = require("./gitlab-releases");
const gitlabTags = (0, tslib_1.__importStar)(require("./gitlab-tags"));
const go = (0, tslib_1.__importStar)(require("./go"));
const gradle_version_1 = require("./gradle-version");
const helm_1 = require("./helm");
const hex_1 = require("./hex");
const jenkins_plugins_1 = require("./jenkins-plugins");
const maven = (0, tslib_1.__importStar)(require("./maven"));
const node_1 = require("./node");
const npm = (0, tslib_1.__importStar)(require("./npm"));
const nuget = (0, tslib_1.__importStar)(require("./nuget"));
const orb_1 = require("./orb");
const packagist = (0, tslib_1.__importStar)(require("./packagist"));
const pod = (0, tslib_1.__importStar)(require("./pod"));
const pypi_1 = require("./pypi");
const repology = (0, tslib_1.__importStar)(require("./repology"));
const ruby_version_1 = require("./ruby-version");
const rubygems_1 = require("./rubygems");
const sbtPackage = (0, tslib_1.__importStar)(require("./sbt-package"));
const sbtPlugin = (0, tslib_1.__importStar)(require("./sbt-plugin"));
const terraform_module_1 = require("./terraform-module");
const terraform_provider_1 = require("./terraform-provider");
const api = new Map();
exports.default = api;
api.set(adoptium_java_1.AdoptiumJavaDatasource.id, new adoptium_java_1.AdoptiumJavaDatasource());
api.set(artifactory_1.ArtifactoryDatasource.id, new artifactory_1.ArtifactoryDatasource());
api.set(aws_machine_image_1.AwsMachineImageDataSource.id, new aws_machine_image_1.AwsMachineImageDataSource());
api.set('bitbucket-tags', new bitbucket_tags_1.BitBucketTagsDatasource());
api.set('cdnjs', new cdnjs_1.CdnJsDatasource());
api.set('clojure', new clojure_1.ClojureDatasource());
api.set('crate', new crate_1.CrateDatasource());
api.set('dart', new dart_1.DartDatasource());
api.set('docker', docker);
api.set('galaxy', new galaxy_1.GalaxyDatasource());
api.set('galaxy-collection', new galaxy_collection_1.GalaxyCollectionDatasource());
api.set('git-refs', new git_refs_1.GitRefsDatasource());
api.set('git-tags', new git_tags_1.GitTagsDatasource());
api.set('github-releases', githubReleases);
api.set('github-tags', githubTags);
api.set('gitlab-packages', new gitlab_packages_1.GitlabPackagesDatasource());
api.set('gitlab-tags', gitlabTags);
api.set(gitlab_releases_1.GitlabReleasesDatasource.id, new gitlab_releases_1.GitlabReleasesDatasource());
api.set('go', go);
api.set('gradle-version', new gradle_version_1.GradleVersionDatasource());
api.set('helm', new helm_1.HelmDatasource());
api.set('hex', new hex_1.HexDatasource());
api.set('jenkins-plugins', new jenkins_plugins_1.JenkinsPluginsDatasource());
api.set('maven', maven);
api.set('npm', npm);
api.set(node_1.NodeDatasource.id, new node_1.NodeDatasource());
api.set('nuget', nuget);
api.set('orb', new orb_1.OrbDatasource());
api.set('packagist', packagist);
api.set('pod', pod);
api.set('pypi', new pypi_1.PypiDatasource());
api.set('repology', repology);
api.set('ruby-version', new ruby_version_1.RubyVersionDatasource());
api.set(rubygems_1.RubyGemsDatasource.id, new rubygems_1.RubyGemsDatasource());
api.set('sbt-package', sbtPackage);
api.set('sbt-plugin', sbtPlugin);
api.set('terraform-module', new terraform_module_1.TerraformModuleDatasource());
api.set('terraform-provider', new terraform_provider_1.TerraformProviderDatasource());
//# sourceMappingURL=api.js.map