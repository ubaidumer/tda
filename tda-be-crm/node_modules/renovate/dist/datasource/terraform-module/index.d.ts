import type { HttpError } from '../../util/http/types';
import type { GetReleasesConfig, ReleaseResult } from '../types';
import { TerraformDatasource } from './base';
export declare class TerraformModuleDatasource extends TerraformDatasource {
    static readonly id = "terraform-module";
    constructor();
    readonly defaultRegistryUrls: string[];
    readonly defaultVersioning = "hashicorp";
    /**
     * This function will fetch a package from the specified Terraform registry and return all semver versions.
     *  - `sourceUrl` is supported of "source" field is set
     *  - `homepage` is set to the Terraform registry's page if it's on the official main registry
     */
    getReleases({ lookupName, registryUrl, }: GetReleasesConfig): Promise<ReleaseResult | null>;
    handleSpecificErrors(err: HttpError): void;
    private static getRegistryRepository;
    private static getCacheKey;
}
