{"version":3,"file":"common.js","sourceRoot":"","sources":["../../../lib/datasource/docker/common.ts"],"names":[],"mappings":"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","sourcesContent":["import { ECR, ECRClientConfig } from '@aws-sdk/client-ecr';\nimport is from '@sindresorhus/is';\nimport { parse } from 'auth-header';\nimport hasha from 'hasha';\nimport { HOST_DISABLED } from '../../constants/error-messages';\nimport { logger } from '../../logger';\nimport { HostRule } from '../../types';\nimport { ExternalHostError } from '../../types/errors/external-host-error';\nimport * as packageCache from '../../util/cache/package';\nimport * as hostRules from '../../util/host-rules';\nimport { Http, HttpOptions, HttpResponse } from '../../util/http';\nimport type { OutgoingHttpHeaders } from '../../util/http/types';\nimport { regEx } from '../../util/regex';\nimport {\n  ensureTrailingSlash,\n  parseUrl,\n  trimTrailingSlash,\n} from '../../util/url';\nimport { MediaType, RegistryRepository } from './types';\n\nexport const id = 'docker';\nexport const http = new Http(id);\n\nexport const ecrRegex = regEx(/\\d+\\.dkr\\.ecr\\.([-a-z0-9]+)\\.amazonaws\\.com/);\nconst DOCKER_HUB = 'https://index.docker.io';\nexport const defaultRegistryUrls = [DOCKER_HUB];\n\nasync function getECRAuthToken(\n  region: string,\n  opts: HostRule\n): Promise<string | null> {\n  const config: ECRClientConfig = { region };\n  if (opts.username && opts.password) {\n    config.credentials = {\n      accessKeyId: opts.username,\n      secretAccessKey: opts.password,\n      ...(opts.token && { sessionToken: opts.token }),\n    };\n  }\n\n  const ecr = new ECR(config);\n  try {\n    const data = await ecr.getAuthorizationToken({});\n    const authorizationToken = data?.authorizationData?.[0]?.authorizationToken;\n    if (authorizationToken) {\n      return authorizationToken;\n    }\n    logger.warn(\n      'Could not extract authorizationToken from ECR getAuthorizationToken response'\n    );\n  } catch (err) {\n    logger.trace({ err }, 'err');\n    logger.debug('ECR getAuthorizationToken error');\n  }\n  return null;\n}\n\nexport async function getAuthHeaders(\n  registryHost: string,\n  dockerRepository: string\n): Promise<OutgoingHttpHeaders | null> {\n  try {\n    const apiCheckUrl = `${registryHost}/v2/`;\n    const apiCheckResponse = await http.get(apiCheckUrl, {\n      throwHttpErrors: false,\n      noAuth: true,\n    });\n\n    if (apiCheckResponse.statusCode === 200) {\n      logger.debug({ registryHost }, 'No registry auth required');\n      return {};\n    }\n    if (\n      apiCheckResponse.statusCode !== 401 ||\n      !is.nonEmptyString(apiCheckResponse.headers['www-authenticate'])\n    ) {\n      logger.warn(\n        { registryHost, res: apiCheckResponse },\n        'Invalid registry response'\n      );\n      return null;\n    }\n\n    const authenticateHeader = parse(\n      apiCheckResponse.headers['www-authenticate']\n    );\n\n    const opts: HostRule & HttpOptions = hostRules.find({\n      hostType: id,\n      url: apiCheckUrl,\n    });\n    if (ecrRegex.test(registryHost)) {\n      logger.trace(\n        { registryHost, dockerRepository },\n        `Using ecr auth for Docker registry`\n      );\n      const [, region] = ecrRegex.exec(registryHost);\n      const auth = await getECRAuthToken(region, opts);\n      if (auth) {\n        opts.headers = { authorization: `Basic ${auth}` };\n      }\n    } else if (opts.username && opts.password) {\n      logger.trace(\n        { registryHost, dockerRepository },\n        `Using basic auth for Docker registry`\n      );\n      const auth = Buffer.from(`${opts.username}:${opts.password}`).toString(\n        'base64'\n      );\n      opts.headers = { authorization: `Basic ${auth}` };\n    } else if (opts.token) {\n      const authType = opts.authType ?? 'Bearer';\n      logger.trace(\n        { registryHost, dockerRepository },\n        `Using ${authType} token for Docker registry`\n      );\n      opts.headers = { authorization: `${authType} ${opts.token}` };\n    }\n    delete opts.username;\n    delete opts.password;\n    delete opts.token;\n\n    // If realm isn't an url, we should directly use auth header\n    // Can happen when we get a Basic auth or some other auth type\n    // * WWW-Authenticate: Basic realm=\"Artifactory Realm\"\n    // * Www-Authenticate: Basic realm=\"https://123456789.dkr.ecr.eu-central-1.amazonaws.com/\",service=\"ecr.amazonaws.com\"\n    // * www-authenticate: Bearer realm=\"https://ghcr.io/token\",service=\"ghcr.io\",scope=\"repository:user/image:pull\"\n    // * www-authenticate: Bearer realm=\"https://auth.docker.io/token\",service=\"registry.docker.io\"\n    if (\n      authenticateHeader.scheme.toUpperCase() !== 'BEARER' ||\n      !is.string(authenticateHeader.params.realm) ||\n      !is.string(authenticateHeader.params.service) ||\n      parseUrl(authenticateHeader.params.realm) === null\n    ) {\n      logger.trace(\n        { registryHost, dockerRepository, authenticateHeader },\n        `Invalid realm, testing direct auth`\n      );\n      return opts.headers;\n    }\n\n    const authUrl = `${authenticateHeader.params.realm}?service=${authenticateHeader.params.service}&scope=repository:${dockerRepository}:pull`;\n    logger.trace(\n      { registryHost, dockerRepository, authUrl },\n      `Obtaining docker registry token`\n    );\n    opts.noAuth = true;\n    const authResponse = (\n      await http.getJson<{ token?: string; access_token?: string }>(\n        authUrl,\n        opts\n      )\n    ).body;\n\n    const token = authResponse.token || authResponse.access_token;\n    // istanbul ignore if\n    if (!token) {\n      logger.warn('Failed to obtain docker registry token');\n      return null;\n    }\n    return {\n      authorization: `Bearer ${token}`,\n    };\n  } catch (err) /* istanbul ignore next */ {\n    if (err.host === 'quay.io') {\n      // TODO: debug why quay throws errors (#9604)\n      return null;\n    }\n    if (err.statusCode === 401) {\n      logger.debug(\n        { registryHost, dockerRepository },\n        'Unauthorized docker lookup'\n      );\n      logger.debug({ err });\n      return null;\n    }\n    if (err.statusCode === 403) {\n      logger.debug(\n        { registryHost, dockerRepository },\n        'Not allowed to access docker registry'\n      );\n      logger.debug({ err });\n      return null;\n    }\n    // prettier-ignore\n    if (err.name === 'RequestError' && registryHost.endsWith('docker.io')) { // lgtm [js/incomplete-url-substring-sanitization]\n        throw new ExternalHostError(err);\n      }\n    // prettier-ignore\n    if (err.statusCode === 429 && registryHost.endsWith('docker.io')) { // lgtm [js/incomplete-url-substring-sanitization]\n        throw new ExternalHostError(err);\n      }\n    if (err.statusCode >= 500 && err.statusCode < 600) {\n      throw new ExternalHostError(err);\n    }\n    if (err.message === HOST_DISABLED) {\n      logger.trace({ registryHost, dockerRepository, err }, 'Host disabled');\n      return null;\n    }\n    logger.warn(\n      { registryHost, dockerRepository, err },\n      'Error obtaining docker token'\n    );\n    return null;\n  }\n}\n\nexport function getRegistryRepository(\n  lookupName: string,\n  registryUrl: string\n): RegistryRepository {\n  if (registryUrl !== DOCKER_HUB) {\n    const registryEndingWithSlash = ensureTrailingSlash(\n      registryUrl.replace(regEx(/^https?:\\/\\//), '')\n    );\n    if (lookupName.startsWith(registryEndingWithSlash)) {\n      let registryHost = trimTrailingSlash(registryUrl);\n      if (!regEx(/^https?:\\/\\//).test(registryHost)) {\n        registryHost = `https://${registryHost}`;\n      }\n      let dockerRepository = lookupName.replace(registryEndingWithSlash, '');\n      const fullUrl = `${registryHost}/${dockerRepository}`;\n      const { origin, pathname } = parseUrl(fullUrl);\n      registryHost = origin;\n      dockerRepository = pathname.substring(1);\n      return {\n        registryHost,\n        dockerRepository,\n      };\n    }\n  }\n  let registryHost: string;\n  const split = lookupName.split('/');\n  if (split.length > 1 && (split[0].includes('.') || split[0].includes(':'))) {\n    [registryHost] = split;\n    split.shift();\n  }\n  let dockerRepository = split.join('/');\n  if (!registryHost) {\n    registryHost = registryUrl.replace(\n      'https://docker.io',\n      'https://index.docker.io'\n    );\n  }\n  if (registryHost === 'docker.io') {\n    registryHost = 'index.docker.io';\n  }\n  if (!regEx(/^https?:\\/\\//).exec(registryHost)) {\n    registryHost = `https://${registryHost}`;\n  }\n  const opts = hostRules.find({ hostType: id, url: registryHost });\n  if (opts?.insecureRegistry) {\n    registryHost = registryHost.replace('https', 'http');\n  }\n  if (registryHost.endsWith('.docker.io') && !dockerRepository.includes('/')) {\n    dockerRepository = 'library/' + dockerRepository;\n  }\n  return {\n    registryHost,\n    dockerRepository,\n  };\n}\n\nfunction digestFromManifestStr(str: hasha.HashaInput): string {\n  return 'sha256:' + hasha(str, { algorithm: 'sha256' });\n}\n\nexport function extractDigestFromResponseBody(\n  manifestResponse: HttpResponse\n): string {\n  return digestFromManifestStr(manifestResponse.body);\n}\n\n// TODO: debug why quay throws errors (#9612)\nexport async function getManifestResponse(\n  registryHost: string,\n  dockerRepository: string,\n  tag: string,\n  mode: 'head' | 'get' = 'get'\n): Promise<HttpResponse> {\n  logger.debug(\n    `getManifestResponse(${registryHost}, ${dockerRepository}, ${tag})`\n  );\n  try {\n    const headers = await getAuthHeaders(registryHost, dockerRepository);\n    if (!headers) {\n      logger.debug('No docker auth found - returning');\n      return null;\n    }\n    headers.accept =\n      'application/vnd.docker.distribution.manifest.list.v2+json, application/vnd.docker.distribution.manifest.v2+json';\n    const url = `${registryHost}/v2/${dockerRepository}/manifests/${tag}`;\n    const manifestResponse = await http[mode](url, {\n      headers,\n      noAuth: true,\n    });\n    return manifestResponse;\n  } catch (err) /* istanbul ignore next */ {\n    if (err instanceof ExternalHostError) {\n      throw err;\n    }\n    if (err.statusCode === 401) {\n      logger.debug(\n        { registryHost, dockerRepository },\n        'Unauthorized docker lookup'\n      );\n      logger.debug({ err });\n      return null;\n    }\n    if (err.statusCode === 404) {\n      logger.debug(\n        {\n          err,\n          registryHost,\n          dockerRepository,\n          tag,\n        },\n        'Docker Manifest is unknown'\n      );\n      return null;\n    }\n    // prettier-ignore\n    if (err.statusCode === 429 && registryHost.endsWith('docker.io')) { // lgtm [js/incomplete-url-substring-sanitization]\n      throw new ExternalHostError(err);\n    }\n    if (err.statusCode >= 500 && err.statusCode < 600) {\n      throw new ExternalHostError(err);\n    }\n    if (err.code === 'ETIMEDOUT') {\n      logger.debug(\n        { registryHost },\n        'Timeout when attempting to connect to docker registry'\n      );\n      logger.debug({ err });\n      return null;\n    }\n    logger.debug(\n      {\n        err,\n        registryHost,\n        dockerRepository,\n        tag,\n      },\n      'Unknown Error looking up docker manifest'\n    );\n    return null;\n  }\n}\n\nasync function getConfigDigest(\n  registry: string,\n  dockerRepository: string,\n  tag: string\n): Promise<string> {\n  const manifestResponse = await getManifestResponse(\n    registry,\n    dockerRepository,\n    tag\n  );\n  // If getting the manifest fails here, then abort\n  // This means that the latest tag doesn't have a manifest, which shouldn't\n  // be possible\n  // istanbul ignore if\n  if (!manifestResponse) {\n    return null;\n  }\n  const manifest = JSON.parse(manifestResponse.body);\n  if (manifest.schemaVersion !== 2) {\n    logger.debug(\n      { registry, dockerRepository, tag },\n      'Manifest schema version is not 2'\n    );\n    return null;\n  }\n\n  if (\n    manifest.mediaType === MediaType.manifestListV2 &&\n    manifest.manifests.length\n  ) {\n    logger.trace(\n      { registry, dockerRepository, tag },\n      'Found manifest list, using first image'\n    );\n    return getConfigDigest(\n      registry,\n      dockerRepository,\n      manifest.manifests[0].digest\n    );\n  }\n\n  if (manifest.mediaType === MediaType.manifestV2) {\n    return manifest.config?.digest || null;\n  }\n\n  logger.debug({ manifest }, 'Invalid manifest - returning');\n  return null;\n}\n\n/*\n * docker.getLabels\n *\n * This function will:\n *  - Return the labels for the requested image\n */\n\nexport async function getLabels(\n  registryHost: string,\n  dockerRepository: string,\n  tag: string\n): Promise<Record<string, string>> {\n  logger.debug(`getLabels(${registryHost}, ${dockerRepository}, ${tag})`);\n  const cacheNamespace = 'datasource-docker-labels';\n  const cacheKey = `${registryHost}:${dockerRepository}:${tag}`;\n  const cachedResult = await packageCache.get<Record<string, string>>(\n    cacheNamespace,\n    cacheKey\n  );\n  // istanbul ignore if\n  if (cachedResult !== undefined) {\n    return cachedResult;\n  }\n  try {\n    let labels: Record<string, string> = {};\n    const configDigest = await getConfigDigest(\n      registryHost,\n      dockerRepository,\n      tag\n    );\n    if (!configDigest) {\n      return {};\n    }\n\n    const headers = await getAuthHeaders(registryHost, dockerRepository);\n    // istanbul ignore if: Should never be happen\n    if (!headers) {\n      logger.debug('No docker auth found - returning');\n      return {};\n    }\n    const url = `${registryHost}/v2/${dockerRepository}/blobs/${configDigest}`;\n    const configResponse = await http.get(url, {\n      headers,\n      noAuth: true,\n    });\n    labels = JSON.parse(configResponse.body).config.Labels;\n\n    if (labels) {\n      logger.debug(\n        {\n          labels,\n        },\n        'found labels in manifest'\n      );\n    }\n    const cacheMinutes = 60;\n    await packageCache.set(cacheNamespace, cacheKey, labels, cacheMinutes);\n    return labels;\n  } catch (err) /* istanbul ignore next: should be tested in future */ {\n    if (err instanceof ExternalHostError) {\n      throw err;\n    }\n    if (err.statusCode === 400 || err.statusCode === 401) {\n      logger.debug(\n        { registryHost, dockerRepository, err },\n        'Unauthorized docker lookup'\n      );\n    } else if (err.statusCode === 404) {\n      logger.warn(\n        {\n          err,\n          registryHost,\n          dockerRepository,\n          tag,\n        },\n        'Config Manifest is unknown'\n      );\n    } else if (\n      err.statusCode === 429 &&\n      registryHost.endsWith('docker.io') // lgtm [js/incomplete-url-substring-sanitization]\n    ) {\n      logger.warn({ err }, 'docker registry failure: too many requests');\n    } else if (err.statusCode >= 500 && err.statusCode < 600) {\n      logger.debug(\n        {\n          err,\n          registryHost,\n          dockerRepository,\n          tag,\n        },\n        'docker registry failure: internal error'\n      );\n    } else if (\n      err.code === 'ERR_TLS_CERT_ALTNAME_INVALID' ||\n      err.code === 'ETIMEDOUT'\n    ) {\n      logger.debug(\n        { registryHost, err },\n        'Error connecting to docker registry'\n      );\n    } else if (registryHost === 'https://quay.io') {\n      // istanbul ignore next\n      logger.debug(\n        'Ignoring quay.io errors until they fully support v2 schema'\n      );\n    } else {\n      logger.info(\n        { registryHost, dockerRepository, tag, err },\n        'Unknown error getting Docker labels'\n      );\n    }\n    return {};\n  }\n}\n"]}