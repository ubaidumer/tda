import { Http, HttpOptions, HttpResponse } from '../../util/http';
import type { OutgoingHttpHeaders } from '../../util/http/types';
import { RegistryRepository } from './types';
export declare const id = "docker";
export declare const http: Http<HttpOptions, import("../../util/http").HttpPostOptions>;
export declare const ecrRegex: RegExp;
export declare const defaultRegistryUrls: string[];
export declare function getAuthHeaders(registryHost: string, dockerRepository: string): Promise<OutgoingHttpHeaders | null>;
export declare function getRegistryRepository(lookupName: string, registryUrl: string): RegistryRepository;
export declare function extractDigestFromResponseBody(manifestResponse: HttpResponse): string;
export declare function getManifestResponse(registryHost: string, dockerRepository: string, tag: string, mode?: 'head' | 'get'): Promise<HttpResponse>;
export declare function getLabels(registryHost: string, dockerRepository: string, tag: string): Promise<Record<string, string>>;
