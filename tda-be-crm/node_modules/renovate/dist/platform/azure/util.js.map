{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../lib/platform/azure/util.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  GitPullRequest,\n  GitRepository,\n  GitStatusContext,\n  PullRequestAsyncStatus,\n  PullRequestStatus,\n} from 'azure-devops-node-api/interfaces/GitInterfaces';\nimport { logger } from '../../logger';\nimport { HostRule, PrState } from '../../types';\nimport { GitOptions } from '../../types/git';\nimport { add } from '../../util/sanitize';\nimport { AzurePr } from './types';\n\nexport function getNewBranchName(branchName?: string): string {\n  if (branchName && !branchName.startsWith('refs/heads/')) {\n    return `refs/heads/${branchName}`;\n  }\n  return branchName;\n}\n\nexport function getGitStatusContextCombinedName(\n  context: GitStatusContext\n): string | undefined {\n  if (!context) {\n    return undefined;\n  }\n  const combinedName = `${context.genre ? `${context.genre}/` : ''}${\n    context.name\n  }`;\n  logger.trace(`Got combined context name of ${combinedName}`);\n  return combinedName;\n}\n\nexport function getGitStatusContextFromCombinedName(\n  context: string\n): GitStatusContext | undefined {\n  if (!context) {\n    return undefined;\n  }\n  let name = context;\n  let genre;\n  const lastSlash = context.lastIndexOf('/');\n  if (lastSlash > 0) {\n    name = context.substr(lastSlash + 1);\n    genre = context.substr(0, lastSlash);\n  }\n  return {\n    genre,\n    name,\n  };\n}\n\nexport function getBranchNameWithoutRefsheadsPrefix(\n  branchPath: string\n): string | undefined {\n  if (!branchPath) {\n    logger.error(`getBranchNameWithoutRefsheadsPrefix(${branchPath})`);\n    return undefined;\n  }\n  if (!branchPath.startsWith('refs/heads/')) {\n    logger.trace(\n      `The refs/heads/ name should have started with 'refs/heads/' but it didn't. (${branchPath})`\n    );\n    return branchPath;\n  }\n  return branchPath.substring(11, branchPath.length);\n}\n\nexport function getBranchNameWithoutRefsPrefix(\n  branchPath?: string\n): string | undefined {\n  if (!branchPath) {\n    logger.error(`getBranchNameWithoutRefsPrefix(${branchPath})`);\n    return undefined;\n  }\n  if (!branchPath.startsWith('refs/')) {\n    logger.trace(\n      `The ref name should have started with 'refs/' but it didn't. (${branchPath})`\n    );\n    return branchPath;\n  }\n  return branchPath.substring(5, branchPath.length);\n}\n\nexport function getRenovatePRFormat(azurePr: GitPullRequest): AzurePr {\n  const number = azurePr.pullRequestId;\n  const displayNumber = `Pull Request #${number}`;\n\n  const sourceBranch = getBranchNameWithoutRefsheadsPrefix(\n    azurePr.sourceRefName\n  );\n  const targetBranch = getBranchNameWithoutRefsheadsPrefix(\n    azurePr.targetRefName\n  );\n  const body = azurePr.description;\n\n  const createdAt = azurePr.creationDate?.toISOString();\n  const state =\n    {\n      [PullRequestStatus.Abandoned]: PrState.Closed,\n      [PullRequestStatus.Completed]: PrState.Merged,\n    }[azurePr.status] || PrState.Open;\n\n  const sourceRefName = azurePr.sourceRefName;\n\n  const isConflicted = azurePr.mergeStatus === PullRequestAsyncStatus.Conflicts;\n\n  return {\n    ...azurePr,\n    sourceBranch,\n    state,\n    number,\n    displayNumber,\n    body,\n    sourceRefName,\n    targetBranch,\n    createdAt,\n    ...(isConflicted && { isConflicted }),\n  } as AzurePr;\n}\n\nexport async function streamToString(\n  stream: NodeJS.ReadableStream\n): Promise<string> {\n  const chunks: Uint8Array[] = [];\n\n  const p = await new Promise<string>((resolve, reject) => {\n    stream.on('data', (chunk) => chunks.push(Buffer.from(chunk)));\n    stream.on('end', () => resolve(Buffer.concat(chunks).toString('utf8')));\n    stream.on('error', (err) => reject(err));\n  });\n  return p;\n}\n\nfunction toBase64(from: string): string {\n  return Buffer.from(from).toString('base64');\n}\n\nexport function getStorageExtraCloneOpts(config: HostRule): GitOptions {\n  let authType: string;\n  let authValue: string;\n  if (!config.token && config.username && config.password) {\n    authType = 'basic';\n    authValue = toBase64(`${config.username}:${config.password}`);\n  } else if (config.token.length === 52) {\n    authType = 'basic';\n    authValue = toBase64(`:${config.token}`);\n  } else {\n    authType = 'bearer';\n    authValue = config.token;\n  }\n  add(authValue);\n  return {\n    '-c': `http.extraheader=AUTHORIZATION: ${authType} ${authValue}`,\n  };\n}\n\nexport function max4000Chars(str: string): string {\n  if (str && str.length >= 4000) {\n    return str.substring(0, 3999);\n  }\n  return str;\n}\n\nexport function getProjectAndRepo(str: string): {\n  project: string;\n  repo: string;\n} {\n  logger.trace(`getProjectAndRepo(${str})`);\n  const strSplit = str.split(`/`);\n  if (strSplit.length === 1) {\n    return {\n      project: str,\n      repo: str,\n    };\n  }\n  if (strSplit.length === 2) {\n    return {\n      project: strSplit[0],\n      repo: strSplit[1],\n    };\n  }\n  const msg = `${str} can be only structured this way : 'repository' or 'projectName/repository'!`;\n  logger.error(msg);\n  throw new Error(msg);\n}\n\nexport function getRepoByName(\n  name: string,\n  repos: GitRepository[]\n): GitRepository | null {\n  logger.trace(`getRepoByName(${name})`);\n\n  let { project, repo } = getProjectAndRepo(name);\n  project = project.toLowerCase();\n  repo = repo.toLowerCase();\n\n  return (\n    repos?.find(\n      (r) =>\n        project === r?.project?.name?.toLowerCase() &&\n        repo === r?.name?.toLowerCase()\n    ) || null\n  );\n}\n"]}