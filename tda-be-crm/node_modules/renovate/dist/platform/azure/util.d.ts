/// <reference types="node" />
import { GitPullRequest, GitRepository, GitStatusContext } from 'azure-devops-node-api/interfaces/GitInterfaces';
import { HostRule } from '../../types';
import { GitOptions } from '../../types/git';
import { AzurePr } from './types';
export declare function getNewBranchName(branchName?: string): string;
export declare function getGitStatusContextCombinedName(context: GitStatusContext): string | undefined;
export declare function getGitStatusContextFromCombinedName(context: string): GitStatusContext | undefined;
export declare function getBranchNameWithoutRefsheadsPrefix(branchPath: string): string | undefined;
export declare function getBranchNameWithoutRefsPrefix(branchPath?: string): string | undefined;
export declare function getRenovatePRFormat(azurePr: GitPullRequest): AzurePr;
export declare function streamToString(stream: NodeJS.ReadableStream): Promise<string>;
export declare function getStorageExtraCloneOpts(config: HostRule): GitOptions;
export declare function max4000Chars(str: string): string;
export declare function getProjectAndRepo(str: string): {
    project: string;
    repo: string;
};
export declare function getRepoByName(name: string, repos: GitRepository[]): GitRepository | null;
