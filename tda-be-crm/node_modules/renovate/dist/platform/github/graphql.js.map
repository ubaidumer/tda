{"version":3,"file":"graphql.js","sourceRoot":"","sources":["../../../lib/platform/github/graphql.ts"],"names":[],"mappings":";;;AAAa,QAAA,aAAa,GAAG;;;;;;;;;;;;;;;;;;;CAmB5B,CAAC;AAEW,QAAA,cAAc,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA+B7B,CAAC;AAEW,QAAA,YAAY,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAgE3B,CAAC;AAEW,QAAA,cAAc,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA4B7B,CAAC;AAEW,QAAA,wBAAwB,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;CA0BvC,CAAC;AAEW,QAAA,uBAAuB,GAAG;;;;;;;;;;;;;;;;CAgBtC,CAAC","sourcesContent":["export const repoInfoQuery = `\nquery($owner: String!, $name: String!) {\n  repository(owner: $owner, name: $name) {\n    isFork\n    isArchived\n    nameWithOwner\n    hasIssuesEnabled\n    autoMergeAllowed\n    mergeCommitAllowed\n    rebaseMergeAllowed\n    squashMergeAllowed\n    defaultBranchRef {\n      name\n      target {\n        oid\n      }\n    }\n  }\n}\n`;\n\nexport const closedPrsQuery = `\nquery($owner: String!, $name: String!, $count: Int, $cursor: String) {\n  repository(owner: $owner, name: $name) {\n    pullRequests(\n      states: [CLOSED, MERGED],\n      orderBy: {\n        field: UPDATED_AT,\n        direction: DESC\n      },\n      first: $count,\n      after: $cursor\n    ) {\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      nodes {\n        number\n        state\n        headRefName\n        title\n        comments(last: 100) {\n          nodes {\n            databaseId\n            body\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nexport const openPrsQuery = `\nquery($owner: String!, $name: String!, $count: Int, $cursor: String) {\n  repository(owner: $owner, name: $name) {\n    pullRequests(\n      states: [OPEN],\n      orderBy: {\n        field: UPDATED_AT,\n        direction: DESC\n      },\n      first: $count,\n      after: $cursor\n    ) {\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      nodes {\n        number\n        headRefName\n        baseRefName\n        title\n        mergeable\n        mergeStateStatus\n        labels(last: 100) {\n          nodes {\n            name\n          }\n        }\n        assignees {\n          totalCount\n        }\n        reviewRequests {\n          totalCount\n        }\n        commits(first: 2) {\n          nodes {\n            commit {\n              author {\n                email\n              }\n              committer {\n                email\n              }\n              parents(last: 1) {\n                edges {\n                  node {\n                    abbreviatedOid\n                    oid\n                  }\n                }\n              }\n            }\n          }\n        }\n        body\n        reviews(first: 1, states: [CHANGES_REQUESTED]){\n          nodes{\n            state\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nexport const getIssuesQuery = `\nquery(\n  $owner: String!,\n  $name: String!,\n  $user: String!,\n  $count: Int,\n  $cursor: String\n) {\n  repository(owner: $owner, name: $name) {\n    issues(\n      orderBy: { field: UPDATED_AT, direction: DESC },\n      filterBy: { createdBy: $user },\n      first: $count,\n      after: $cursor\n    ) {\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      nodes {\n        number\n        state\n        title\n        body\n      }\n    }\n  }\n}\n`;\n\nexport const vulnerabilityAlertsQuery = `\nquery($owner: String!, $name: String!) {\n  repository(owner: $owner, name: $name) {\n    vulnerabilityAlerts(last: 100) {\n      edges {\n        node {\n          dismissReason\n          vulnerableManifestFilename\n          vulnerableManifestPath\n          vulnerableRequirements\n          securityAdvisory {\n            description\n            identifiers { type value }\n            references { url }\n            severity\n          }\n          securityVulnerability {\n            package { name ecosystem }\n            firstPatchedVersion { identifier }\n            vulnerableVersionRange\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nexport const enableAutoMergeMutation = `\nmutation EnablePullRequestAutoMerge(\n  $pullRequestId: ID!,\n  $mergeMethod: PullRequestMergeMethod!,\n) {\n  enablePullRequestAutoMerge(\n    input: {\n      pullRequestId: $pullRequestId,\n      mergeMethod: $mergeMethod,\n    }\n  ) {\n    pullRequest {\n      number\n    }\n  }\n}\n`;\n"]}