{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../lib/platform/bitbucket-server/utils.ts"],"names":[],"mappings":"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","sourcesContent":["// SEE for the reference https://github.com/renovatebot/renovate/blob/c3e9e572b225085448d94aa121c7ec81c14d3955/lib/platform/bitbucket/utils.js\nimport url from 'url';\nimport { HTTPError, Response } from 'got';\nimport { PrState } from '../../types';\nimport { HttpOptions, HttpPostOptions, HttpResponse } from '../../util/http';\nimport { BitbucketServerHttp } from '../../util/http/bitbucket-server';\nimport type { BbsPr, BbsRestPr } from './types';\n\nconst BITBUCKET_INVALID_REVIEWERS_EXCEPTION =\n  'com.atlassian.bitbucket.pull.InvalidPullRequestReviewersException';\n\nconst bitbucketServerHttp = new BitbucketServerHttp();\n\n// https://docs.atlassian.com/bitbucket-server/rest/6.0.0/bitbucket-rest.html#idp250\nconst prStateMapping: any = {\n  MERGED: PrState.Merged,\n  DECLINED: PrState.Closed,\n  OPEN: PrState.Open,\n};\n\nexport function prInfo(pr: BbsRestPr): BbsPr {\n  return {\n    version: pr.version,\n    number: pr.id,\n    body: pr.description,\n    sourceBranch: pr.fromRef.displayId,\n    targetBranch: pr.toRef.displayId,\n    title: pr.title,\n    state: prStateMapping[pr.state],\n    createdAt: pr.createdDate,\n  };\n}\n\nconst addMaxLength = (inputUrl: string, limit = 100): string => {\n  const { search, ...parsedUrl } = url.parse(inputUrl, true); // eslint-disable-line @typescript-eslint/no-unused-vars\n  const maxedUrl = url.format({\n    ...parsedUrl,\n    query: { ...parsedUrl.query, limit },\n  });\n  return maxedUrl;\n};\n\nfunction callApi<T>(\n  apiUrl: string,\n  method: string,\n  options?: HttpOptions | HttpPostOptions\n): Promise<HttpResponse<T>> {\n  /* istanbul ignore next */\n  switch (method.toLowerCase()) {\n    case 'post':\n      return bitbucketServerHttp.postJson<T>(\n        apiUrl,\n        options as HttpPostOptions\n      );\n    case 'put':\n      return bitbucketServerHttp.putJson<T>(apiUrl, options as HttpPostOptions);\n    case 'patch':\n      return bitbucketServerHttp.patchJson<T>(\n        apiUrl,\n        options as HttpPostOptions\n      );\n    case 'head':\n      return bitbucketServerHttp.headJson<T>(apiUrl, options);\n    case 'delete':\n      return bitbucketServerHttp.deleteJson<T>(\n        apiUrl,\n        options as HttpPostOptions\n      );\n    case 'get':\n    default:\n      return bitbucketServerHttp.getJson<T>(apiUrl, options);\n  }\n}\n\nexport async function accumulateValues<T = any>(\n  reqUrl: string,\n  method = 'get',\n  options?: HttpOptions | HttpPostOptions,\n  limit?: number\n): Promise<T[]> {\n  let accumulator: T[] = [];\n  let nextUrl = addMaxLength(reqUrl, limit);\n\n  while (typeof nextUrl !== 'undefined') {\n    // TODO: fix typing (#9610)\n    const { body } = await callApi<{\n      values: T[];\n      isLastPage: boolean;\n      nextPageStart: string;\n    }>(nextUrl, method, options);\n    accumulator = [...accumulator, ...body.values];\n    if (body.isLastPage !== false) {\n      break;\n    }\n\n    const { search, ...parsedUrl } = url.parse(nextUrl, true); // eslint-disable-line @typescript-eslint/no-unused-vars\n    nextUrl = url.format({\n      ...parsedUrl,\n      query: {\n        ...parsedUrl.query,\n        start: body.nextPageStart,\n      },\n    });\n  }\n\n  return accumulator;\n}\n\nexport interface BitbucketCommitStatus {\n  failed: number;\n  inProgress: number;\n  successful: number;\n}\n\nexport type BitbucketBranchState =\n  | 'SUCCESSFUL'\n  | 'FAILED'\n  | 'INPROGRESS'\n  | 'STOPPED';\n\nexport interface BitbucketStatus {\n  key: string;\n  state: BitbucketBranchState;\n}\n\ninterface BitbucketErrorResponse {\n  errors?: {\n    exceptionName?: string;\n    reviewerErrors?: { context?: string }[];\n  }[];\n}\n\ninterface BitbucketError extends HTTPError {\n  readonly response: Response<BitbucketErrorResponse>;\n}\n\nexport function isInvalidReviewersResponse(err: BitbucketError): boolean {\n  const errors = err?.response?.body?.errors || [];\n  return (\n    errors.length > 0 &&\n    errors.every(\n      (error) => error.exceptionName === BITBUCKET_INVALID_REVIEWERS_EXCEPTION\n    )\n  );\n}\n\nexport function getInvalidReviewers(err: BitbucketError): string[] {\n  const errors = err?.response?.body?.errors || [];\n  let invalidReviewers = [];\n  for (const error of errors) {\n    if (error.exceptionName === BITBUCKET_INVALID_REVIEWERS_EXCEPTION) {\n      invalidReviewers = invalidReviewers.concat(\n        error.reviewerErrors?.map(({ context }) => context) || []\n      );\n    }\n  }\n\n  return invalidReviewers;\n}\n"]}