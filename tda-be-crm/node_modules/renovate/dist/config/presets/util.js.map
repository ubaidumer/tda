{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../lib/config/presets/util.ts"],"names":[],"mappings":";;;AAAA,yCAAsC;AACtC,wCAAqD;AAGxC,QAAA,oBAAoB,GAAG,eAAe,CAAC;AACvC,QAAA,cAAc,GAAG,gBAAgB,CAAC;AAClC,QAAA,mBAAmB,GAAG,qBAAqB,CAAC;AAC5C,QAAA,gBAAgB,GAAG,kBAAkB,CAAC;AACtC,QAAA,2BAA2B,GAAG,uBAAuB,CAAC;AACtD,QAAA,gCAAgC,GAC3C,kCAAkC,CAAC;AAE9B,KAAK,UAAU,WAAW,CAAC,EAChC,OAAO,EACP,UAAU,EACV,UAAU,EACV,QAAQ,EAAE,SAAS,EACnB,UAAU,GAAG,IAAI,EACjB,KAAK,GACa;IAClB,MAAM,QAAQ,GAAG,IAAA,yBAAmB,EAAC,SAAS,CAAC,CAAC;IAChD,MAAM,CAAC,QAAQ,EAAE,UAAU,EAAE,aAAa,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACpE,MAAM,UAAU,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;IACtD,MAAM,aAAa,GAAG,CAAC,IAAY,EAAU,EAAE,CAAC,GAAG,UAAU,GAAG,IAAI,EAAE,CAAC;IACvE,IAAI,WAA4B,CAAC;IACjC,IAAI,QAAQ,KAAK,SAAS,EAAE;QAC1B,IAAI;YACF,WAAW,GAAG,MAAM,KAAK,CACvB,OAAO,EACP,aAAa,CAAC,cAAc,CAAC,EAC7B,QAAQ,EACR,UAAU,CACX,CAAC;SACH;QAAC,OAAO,GAAG,EAAE;YACZ,IAAI,GAAG,CAAC,OAAO,KAAK,4BAAoB,EAAE;gBACxC,MAAM,GAAG,CAAC;aACX;YACD,eAAM,CAAC,IAAI,CACT,mGAAmG,CACpG,CAAC;YACF,WAAW,GAAG,MAAM,KAAK,CACvB,OAAO,EACP,aAAa,CAAC,eAAe,CAAC,EAC9B,QAAQ,EACR,UAAU,CACX,CAAC;SACH;KACF;SAAM;QACL,WAAW,GAAG,MAAM,KAAK,CACvB,OAAO,EACP,aAAa,CAAC,GAAG,QAAQ,OAAO,CAAC,EACjC,QAAQ,EACR,UAAU,CACX,CAAC;KACH;IAED,IAAI,CAAC,WAAW,EAAE;QAChB,MAAM,IAAI,KAAK,CAAC,4BAAoB,CAAC,CAAC;KACvC;IACD,IAAI,UAAU,EAAE;QACd,MAAM,MAAM,GAAG,WAAW,CAAC,UAAU,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,IAAI,KAAK,CAAC,wBAAgB,CAAC,CAAC;SACnC;QACD,IAAI,aAAa,EAAE;YACjB,MAAM,SAAS,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;YACxC,IAAI,CAAC,SAAS,EAAE;gBACd,MAAM,IAAI,KAAK,CAAC,wBAAgB,CAAC,CAAC;aACnC;YACD,OAAO,SAAS,CAAC;SAClB;QACD,OAAO,MAAM,CAAC;KACf;IACD,OAAO,WAAW,CAAC;AACrB,CAAC;AA9DD,kCA8DC","sourcesContent":["import { logger } from '../../logger';\nimport { ensureTrailingSlash } from '../../util/url';\nimport type { FetchPresetConfig, Preset } from './types';\n\nexport const PRESET_DEP_NOT_FOUND = 'dep not found';\nexport const PRESET_INVALID = 'invalid preset';\nexport const PRESET_INVALID_JSON = 'invalid preset JSON';\nexport const PRESET_NOT_FOUND = 'preset not found';\nexport const PRESET_PROHIBITED_SUBPRESET = 'prohibited sub-preset';\nexport const PRESET_RENOVATE_CONFIG_NOT_FOUND =\n  'preset renovate-config not found';\n\nexport async function fetchPreset({\n  pkgName,\n  filePreset,\n  presetPath,\n  endpoint: _endpoint,\n  packageTag = null,\n  fetch,\n}: FetchPresetConfig): Promise<Preset | undefined> {\n  const endpoint = ensureTrailingSlash(_endpoint);\n  const [fileName, presetName, subPresetName] = filePreset.split('/');\n  const pathPrefix = presetPath ? `${presetPath}/` : '';\n  const buildFilePath = (name: string): string => `${pathPrefix}${name}`;\n  let jsonContent: any | undefined;\n  if (fileName === 'default') {\n    try {\n      jsonContent = await fetch(\n        pkgName,\n        buildFilePath('default.json'),\n        endpoint,\n        packageTag\n      );\n    } catch (err) {\n      if (err.message !== PRESET_DEP_NOT_FOUND) {\n        throw err;\n      }\n      logger.info(\n        'Fallback to renovate.json file as a preset is deprecated, please use a default.json file instead.'\n      );\n      jsonContent = await fetch(\n        pkgName,\n        buildFilePath('renovate.json'),\n        endpoint,\n        packageTag\n      );\n    }\n  } else {\n    jsonContent = await fetch(\n      pkgName,\n      buildFilePath(`${fileName}.json`),\n      endpoint,\n      packageTag\n    );\n  }\n\n  if (!jsonContent) {\n    throw new Error(PRESET_DEP_NOT_FOUND);\n  }\n  if (presetName) {\n    const preset = jsonContent[presetName];\n    if (!preset) {\n      throw new Error(PRESET_NOT_FOUND);\n    }\n    if (subPresetName) {\n      const subPreset = preset[subPresetName];\n      if (!subPreset) {\n        throw new Error(PRESET_NOT_FOUND);\n      }\n      return subPreset;\n    }\n    return preset;\n  }\n  return jsonContent;\n}\n"]}