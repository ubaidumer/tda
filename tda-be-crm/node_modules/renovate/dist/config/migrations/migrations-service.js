"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MigrationsService = void 0;
const remove_property_migration_1 = require("./base/remove-property-migration");
const rename_property_migration_1 = require("./base/rename-property-migration");
const binary_source_migration_1 = require("./custom/binary-source-migration");
const go_mod_tidy_migration_1 = require("./custom/go-mod-tidy-migration");
const ignore_node_modules_migration_1 = require("./custom/ignore-node-modules-migration");
const required_status_checks_migration_1 = require("./custom/required-status-checks-migration");
const trust_level_migration_1 = require("./custom/trust-level-migration");
class MigrationsService {
    static run(originalConfig) {
        var _a;
        const migratedConfig = {};
        const migrations = MigrationsService.getMigrations(originalConfig, migratedConfig);
        for (const [key, value] of Object.entries(originalConfig)) {
            (_a = migratedConfig[key]) !== null && _a !== void 0 ? _a : (migratedConfig[key] = value);
            const migration = migrations.find((item) => item.propertyName === key);
            migration === null || migration === void 0 ? void 0 : migration.run();
        }
        return migratedConfig;
    }
    static getMigrations(originalConfig, migratedConfig) {
        const migrations = [];
        for (const propertyName of MigrationsService.removedProperties) {
            migrations.push(new remove_property_migration_1.RemovePropertyMigration(propertyName, originalConfig, migratedConfig));
        }
        for (const [oldPropertyName, newPropertyName,] of MigrationsService.renamedProperties.entries()) {
            migrations.push(new rename_property_migration_1.RenamePropertyMigration(oldPropertyName, newPropertyName, originalConfig, migratedConfig));
        }
        migrations.push(new binary_source_migration_1.BinarySourceMigration(originalConfig, migratedConfig));
        migrations.push(new ignore_node_modules_migration_1.IgnoreNodeModulesMigration(originalConfig, migratedConfig));
        migrations.push(new required_status_checks_migration_1.RequiredStatusChecksMigration(originalConfig, migratedConfig));
        migrations.push(new trust_level_migration_1.TrustLevelMigration(originalConfig, migratedConfig));
        migrations.push(new go_mod_tidy_migration_1.GoModTidyMigration(originalConfig, migratedConfig));
        return migrations;
    }
}
exports.MigrationsService = MigrationsService;
MigrationsService.removedProperties = new Set([
    'gitFs',
    'groupBranchName',
    'groupCommitMessage',
    'groupPrBody',
    'groupPrTitle',
    'lazyGrouping',
    'maintainYarnLock',
    'statusCheckVerify',
    'supportPolicy',
    'yarnCacheFolder',
    'yarnMaintenanceBranchName',
    'yarnMaintenanceCommitMessage',
    'yarnMaintenancePrBody',
    'yarnMaintenancePrTitle',
]);
MigrationsService.renamedProperties = new Map([
    ['exposeEnv', 'exposeAllEnv'],
    ['separatePatchReleases', 'separateMinorPatch'],
    ['multipleMajorPrs', 'separateMultipleMajor'],
    ['excludedPackageNames', 'excludePackageNames'],
    ['versionScheme', 'versioning'],
]);
//# sourceMappingURL=migrations-service.js.map