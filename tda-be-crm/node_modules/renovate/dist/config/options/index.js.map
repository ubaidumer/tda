{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/config/options/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { PlatformId } from '../../constants';\nimport { getManagers } from '../../manager';\nimport { getPlatformList } from '../../platform';\nimport { getVersioningList } from '../../versioning';\nimport * as dockerVersioning from '../../versioning/docker';\nimport * as pep440Versioning from '../../versioning/pep440';\nimport type { RenovateOptions } from '../types';\n\nconst options: RenovateOptions[] = [\n  {\n    name: 'detectGlobalManagerConfig',\n    description:\n      'If true, Renovate will attempt to read global manager config from the file system.',\n    type: 'boolean',\n    default: false,\n    globalOnly: true,\n  },\n  {\n    name: 'detectHostRulesFromEnv',\n    description:\n      'If true, Renovate tries to detect host rules from environment variables.',\n    type: 'boolean',\n    default: false,\n    globalOnly: true,\n  },\n  {\n    name: 'allowPostUpgradeCommandTemplating',\n    description: 'If true allow templating for post-upgrade commands.',\n    type: 'boolean',\n    default: false,\n    globalOnly: true,\n  },\n  {\n    name: 'allowedPostUpgradeCommands',\n    description:\n      'A list of regular expressions that determine which post-upgrade tasks are allowed.',\n    type: 'array',\n    subType: 'string',\n    default: [],\n    globalOnly: true,\n  },\n  {\n    name: 'postUpgradeTasks',\n    description:\n      'Post-upgrade tasks that are executed before a commit is made by Renovate.',\n    type: 'object',\n    default: {\n      commands: [],\n      fileFilters: [],\n      executionMode: 'update',\n    },\n  },\n  {\n    name: 'commands',\n    description:\n      'A list of post-upgrade commands that are executed before a commit is made by Renovate.',\n    type: 'array',\n    subType: 'string',\n    parent: 'postUpgradeTasks',\n    default: [],\n    cli: false,\n  },\n  {\n    name: 'fileFilters',\n    description:\n      'Files that match these glob patterns will be committed if they are present after running a post-upgrade task.',\n    type: 'array',\n    subType: 'string',\n    parent: 'postUpgradeTasks',\n    default: [],\n    cli: false,\n  },\n  {\n    name: 'executionMode',\n    description:\n      'Controls whether the post upgrade tasks runs for every update or once per upgrade branch',\n    type: 'string',\n    parent: 'postUpgradeTasks',\n    allowedValues: ['update', 'branch'],\n    default: 'update',\n    cli: false,\n  },\n  {\n    name: 'onboardingBranch',\n    description:\n      'Change this value in order to override the default onboarding branch name.',\n    type: 'string',\n    default: 'renovate/configure',\n    globalOnly: true,\n    cli: false,\n  },\n  {\n    name: 'onboardingCommitMessage',\n    description:\n      'Change this value in order to override the default onboarding commit message.',\n    type: 'string',\n    default: null,\n    globalOnly: true,\n    cli: false,\n  },\n  {\n    name: 'onboardingConfigFileName',\n    description:\n      'Change this value in order to override the default onboarding config file name.',\n    type: 'string',\n    default: 'renovate.json',\n    globalOnly: true,\n    cli: false,\n  },\n  {\n    name: 'onboardingNoDeps',\n    description: 'Onboard repository even if no dependencies found.',\n    type: 'boolean',\n    default: false,\n    globalOnly: true,\n  },\n  {\n    name: 'onboardingPrTitle',\n    description:\n      'Change this value in order to override the default onboarding PR title.',\n    type: 'string',\n    default: 'Configure Renovate',\n    globalOnly: true,\n    cli: false,\n  },\n  {\n    name: 'productLinks',\n    description: 'Links which are embedded within PRs, issues, etc.',\n    type: 'object',\n    globalOnly: true,\n    mergeable: true,\n    default: {\n      documentation: 'https://docs.renovatebot.com/',\n      help: 'https://github.com/renovatebot/renovate/discussions',\n      homepage: 'https://github.com/renovatebot/renovate',\n    },\n    additionalProperties: {\n      type: 'string',\n      format: 'uri',\n    },\n  },\n  {\n    name: 'secrets',\n    description: 'Object containing secret name/value pairs',\n    type: 'object',\n    globalOnly: true,\n    mergeable: true,\n    default: {},\n    additionalProperties: {\n      type: 'string',\n    },\n  },\n  {\n    name: 'extends',\n    description:\n      'Configuration presets to use/extend. Note: does not work if configured in config.js.',\n    stage: 'package',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    cli: false,\n  },\n  {\n    name: 'ignorePresets',\n    description:\n      'A list of presets to ignore, including nested ones inside `extends`.',\n    stage: 'package',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    cli: false,\n  },\n  {\n    name: 'migratePresets',\n    description:\n      'Define presets here which have been removed or renamed and should be migrated automatically.',\n    type: 'object',\n    globalOnly: true,\n    default: {},\n    additionalProperties: {\n      type: 'string',\n    },\n  },\n  {\n    name: 'description',\n    description: 'Plain text description for a config or preset.',\n    type: 'array',\n    subType: 'string',\n    stage: 'repository',\n    allowString: true,\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'enabled',\n    description: `Enable or disable the bot.`,\n    stage: 'package',\n    type: 'boolean',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'deepExtract',\n    description: `Enable extraction of dependencies using package managers.`,\n    type: 'boolean',\n    default: false,\n    cli: false,\n    env: false,\n    supportedManagers: ['gradle'],\n  },\n  {\n    name: 'repositoryCache',\n    description: 'Option to do repository extract caching.',\n    globalOnly: true,\n    type: 'string',\n    allowedValues: ['disabled', 'enabled', 'reset'],\n    stage: 'repository',\n    default: 'disabled',\n  },\n  {\n    name: 'force',\n    description:\n      'Any configuration defined within this object will force override existing settings.',\n    stage: 'package',\n    globalOnly: true,\n    type: 'object',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'forceCli',\n    description:\n      'Whether CLI configuration options should be moved to the `force` config section.',\n    stage: 'global',\n    type: 'boolean',\n    default: true,\n  },\n  {\n    name: 'draftPR',\n    description: 'If enabled, the PR created by Renovate is set to a draft.',\n    type: 'boolean',\n    default: false,\n    supportedPlatforms: ['github', 'gitlab', 'azure'],\n  },\n  {\n    name: 'dryRun',\n    description:\n      'If enabled, perform a dry run by logging messages instead of creating/updating/deleting branches and PRs.',\n    type: 'boolean',\n    globalOnly: true,\n    default: false,\n  },\n  {\n    name: 'printConfig',\n    description:\n      'If enabled, log the full resolved config for each repo, including resolved presets.',\n    type: 'boolean',\n    globalOnly: true,\n    default: false,\n  },\n  {\n    name: 'binarySource',\n    description:\n      'Controls whether third party tools like npm or Gradle are called directly, or via Docker sidecar containers.',\n    globalOnly: true,\n    type: 'string',\n    allowedValues: ['global', 'docker'],\n    default: 'global',\n  },\n  {\n    name: 'redisUrl',\n    description:\n      'If defined, this Redis URL will be used for caching instead of the file system.',\n    stage: 'global',\n    type: 'string',\n  },\n  {\n    name: 'baseDir',\n    description:\n      'The base directory for Renovate to store local files, including repository files and cache. If left empty, Renovate will create its own temporary directory to use.',\n    stage: 'global',\n    type: 'string',\n  },\n  {\n    name: 'cacheDir',\n    description:\n      'The directory for Renovate for storing caches. If left empty, Renovate will create a subdirectory within `baseDir` to use.',\n    globalOnly: true,\n    type: 'string',\n  },\n  {\n    name: 'customEnvVariables',\n    description:\n      'Custom environment variables for child processes and sidecar Docker containers.',\n    globalOnly: true,\n    type: 'object',\n    default: {},\n  },\n  {\n    name: 'dockerChildPrefix',\n    description:\n      'Change this value in order to add a prefix to the Renovate Docker sidecar container names and labels.',\n    type: 'string',\n    globalOnly: true,\n    default: 'renovate_',\n  },\n  {\n    name: 'dockerImagePrefix',\n    description:\n      'Change this value in order to override the default Renovate Docker sidecar image name prefix.',\n    type: 'string',\n    default: 'docker.io/renovate',\n    globalOnly: true,\n  },\n  {\n    name: 'dockerUser',\n    description:\n      'Specify UID and GID for Docker-based binaries when binarySource=docker is used.',\n    globalOnly: true,\n    type: 'string',\n  },\n  {\n    name: 'composerIgnorePlatformReqs',\n    description:\n      'Configure use of `--ignore-platform-reqs`/`--ignore-platform-req` for the Composer package manager.',\n    type: 'array',\n    subType: 'string',\n    default: [],\n  },\n  // Log options\n  {\n    name: 'logFile',\n    description: 'Log file path.',\n    stage: 'global',\n    type: 'string',\n  },\n  {\n    name: 'logFileLevel',\n    description: 'Log file log level.',\n    stage: 'global',\n    type: 'string',\n    default: 'debug',\n  },\n  {\n    name: 'logContext',\n    description: 'Add a global or per-repo log context to each log entry.',\n    globalOnly: true,\n    type: 'string',\n    default: null,\n  },\n  // Onboarding\n  {\n    name: 'onboarding',\n    description: 'Require a Configuration PR first.',\n    stage: 'repository',\n    type: 'boolean',\n    globalOnly: true,\n  },\n  {\n    name: 'onboardingConfig',\n    description: 'Configuration to use in onboarding PRs.',\n    stage: 'repository',\n    type: 'object',\n    default: { $schema: 'https://docs.renovatebot.com/renovate-schema.json' },\n    globalOnly: true,\n    mergeable: true,\n  },\n  {\n    name: 'includeForks',\n    description:\n      'Whether to process forked repositories or not. By default, all forked repositories are skipped.',\n    stage: 'repository',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'forkMode',\n    description:\n      'Set to true to fork the source repository and create branches there instead.',\n    stage: 'repository',\n    type: 'boolean',\n    default: false,\n    globalOnly: true,\n  },\n  {\n    name: 'forkToken',\n    description:\n      'Will be used on GitHub when `forkMode` is set to `true` to clone the repositories.',\n    stage: 'repository',\n    type: 'string',\n    default: '',\n    globalOnly: true,\n  },\n  {\n    name: 'requireConfig',\n    description:\n      'Set to false if it is optional for repositories to contain a config.',\n    stage: 'repository',\n    type: 'boolean',\n    default: true,\n    globalOnly: true,\n  },\n  {\n    name: 'optimizeForDisabled',\n    description:\n      'Set to true to first check for disabling in config before cloning.',\n    stage: 'repository',\n    type: 'boolean',\n    default: false,\n    globalOnly: true,\n  },\n  // Dependency Dashboard\n  {\n    name: 'dependencyDashboard',\n    description:\n      'Whether to create a \"Dependency Dashboard\" issue within the repository.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'dependencyDashboardApproval',\n    description:\n      'Whether updates should require manual approval from within the Dependency Dashboard issue before creation.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'dependencyDashboardAutoclose',\n    description:\n      'Set to `true` and Renovate will autoclose the Dependency Dashboard issue if there are no updates.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'dependencyDashboardTitle',\n    description: 'Title to use for the Dependency Dashboard issue.',\n    type: 'string',\n    default: `Dependency Dashboard`,\n  },\n  {\n    name: 'dependencyDashboardHeader',\n    description:\n      'Any text added here will be placed first in the Dependency Dashboard issue body.',\n    type: 'string',\n    default:\n      'This issue provides visibility into Renovate updates and their statuses. [Learn more](https://docs.renovatebot.com/key-concepts/dashboard/)',\n  },\n  {\n    name: 'dependencyDashboardFooter',\n    description:\n      'Any text added here will be placed last in the Dependency Dashboard issue body, with a divider separator before it.',\n    type: 'string',\n  },\n  {\n    name: 'dependencyDashboardLabels',\n    description:\n      'These labels will always be applied on the Dependency Dashboard issue, even when they have been removed manually.',\n    type: 'array',\n    subType: 'string',\n    default: null,\n  },\n  {\n    name: 'configWarningReuseIssue',\n    description:\n      'Set this to false and Renovate will open each config warning in a new issue instead of reopening/reusing an existing issue.',\n    type: 'boolean',\n    default: true,\n  },\n\n  // encryption\n  {\n    name: 'privateKey',\n    description: 'Server-side private key.',\n    stage: 'repository',\n    type: 'string',\n    replaceLineReturns: true,\n    globalOnly: true,\n  },\n  {\n    name: 'privateKeyOld',\n    description: 'Secondary/old private key to try.',\n    stage: 'repository',\n    type: 'string',\n    replaceLineReturns: true,\n    globalOnly: true,\n  },\n  {\n    name: 'privateKeyPath',\n    description: 'Path to the Server-side private key.',\n    stage: 'repository',\n    type: 'string',\n    globalOnly: true,\n  },\n  {\n    name: 'privateKeyPathOld',\n    description: 'Path to the Server-side old private key.',\n    stage: 'repository',\n    type: 'string',\n    globalOnly: true,\n  },\n  {\n    name: 'encrypted',\n    description:\n      'A configuration object containing configuration encrypted with project key.',\n    stage: 'repository',\n    type: 'object',\n    default: null,\n  },\n  // Scheduling\n  {\n    name: 'timezone',\n    description:\n      '[IANA Time Zone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)',\n    type: 'string',\n  },\n  {\n    name: 'schedule',\n    description: 'Times of day/week to limit branch creation to.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    cli: true,\n    env: false,\n    default: ['at any time'],\n  },\n  {\n    name: 'updateNotScheduled',\n    description:\n      'Whether to update (but not create) branches when not scheduled.',\n    stage: 'branch',\n    type: 'boolean',\n  },\n  // Bot administration\n  {\n    name: 'persistRepoData',\n    description:\n      'If set to true, repository data will preserved between runs instead of deleted.',\n    type: 'boolean',\n    globalOnly: true,\n    default: false,\n  },\n  {\n    name: 'exposeAllEnv',\n    description:\n      'Configure this to true to allow passing of all env variables to package managers.',\n    globalOnly: true,\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'allowPlugins',\n    description:\n      'Configure this to true if repositories are allowed to run install plugins.',\n    globalOnly: true,\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'allowScripts',\n    description:\n      'Configure this to true if repositories are allowed to run install scripts.',\n    globalOnly: true,\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'allowCustomCrateRegistries',\n    description:\n      'Configure this to true if custom crate registries are allowed.',\n    globalOnly: true,\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'ignorePlugins',\n    description:\n      'Configure this to true if allowPlugins=true but you wish to skip running plugins when updating lock files.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'ignoreScripts',\n    description:\n      'Configure this to true if allowScripts=true but you wish to skip running scripts when updating lock files.',\n    type: 'boolean',\n    default: false,\n    supportedManagers: ['npm', 'composer'],\n  },\n  {\n    name: 'platform',\n    description: 'Platform type of repository.',\n    type: 'string',\n    allowedValues: getPlatformList(),\n    default: PlatformId.Github,\n    globalOnly: true,\n  },\n  {\n    name: 'endpoint',\n    description: 'Custom endpoint to use.',\n    type: 'string',\n    globalOnly: true,\n    default: null,\n  },\n  {\n    name: 'token',\n    description: 'Repository Auth Token.',\n    stage: 'repository',\n    type: 'string',\n    globalOnly: true,\n  },\n  {\n    name: 'username',\n    description: 'Username for authentication. Currently Bitbucket only.',\n    stage: 'repository',\n    type: 'string',\n    globalOnly: true,\n  },\n  {\n    name: 'password',\n    description:\n      'Password for authentication. Currently Bitbucket only (AppPassword).',\n    stage: 'repository',\n    type: 'string',\n    globalOnly: true,\n  },\n  {\n    name: 'npmrc',\n    description: 'String copy of npmrc file. Use \\\\n instead of line breaks.',\n    stage: 'branch',\n    type: 'string',\n  },\n  {\n    name: 'npmrcMerge',\n    description:\n      'Whether to merge config.npmrc with repo .npmrc content if both are found.',\n    stage: 'branch',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'npmToken',\n    description: 'npm token used for authenticating with the default registry.',\n    stage: 'branch',\n    type: 'string',\n  },\n  {\n    name: 'updateLockFiles',\n    description: 'Set to false to disable lock file updating.',\n    type: 'boolean',\n  },\n  {\n    name: 'skipInstalls',\n    description:\n      'Skip installing modules/dependencies if lock file updating is possible alone.',\n    type: 'boolean',\n    default: null,\n    globalOnly: true,\n  },\n  {\n    name: 'autodiscover',\n    description: 'Autodiscover all repositories.',\n    stage: 'global',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'autodiscoverFilter',\n    description: 'Filter the list of autodiscovered repositories.',\n    stage: 'global',\n    type: 'string',\n    default: null,\n  },\n  {\n    name: 'prCommitsPerRunLimit',\n    description:\n      'Set a maximum number of commits per Renovate run. Default is no limit.',\n    stage: 'global',\n    type: 'integer',\n    default: 0,\n  },\n  {\n    name: 'repositories',\n    description: 'List of Repositories.',\n    stage: 'global',\n    type: 'array',\n    cli: false,\n  },\n  {\n    name: 'baseBranches',\n    description:\n      'An array of one or more custom base branches to be processed. If left empty, the default branch will be chosen.',\n    type: 'array',\n    stage: 'package',\n    cli: false,\n  },\n  {\n    name: 'gitAuthor',\n    description: 'Author to use for Git commits. Must conform to RFC5322.',\n    type: 'string',\n  },\n  {\n    name: 'gitPrivateKey',\n    description: 'PGP key to use for signing Git commits.',\n    type: 'string',\n    cli: false,\n    globalOnly: true,\n    stage: 'global',\n  },\n  {\n    name: 'gitIgnoredAuthors',\n    description:\n      'Additional git authors which are ignored by Renovate. Must conform to RFC5322.',\n    type: 'array',\n    subType: 'string',\n    stage: 'repository',\n  },\n  {\n    name: 'enabledManagers',\n    description:\n      'A list of package managers to enable. If defined, then all managers not on the list are disabled.',\n    type: 'array',\n    stage: 'repository',\n  },\n  {\n    name: 'includePaths',\n    description: 'Include package files only within these defined paths.',\n    type: 'array',\n    subType: 'string',\n    stage: 'repository',\n    default: [],\n  },\n  {\n    name: 'ignorePaths',\n    description:\n      'Skip any package file whose path matches one of these. Can be a string or glob pattern.',\n    type: 'array',\n    subType: 'string',\n    stage: 'repository',\n    default: ['**/node_modules/**', '**/bower_components/**'],\n  },\n  {\n    name: 'excludeCommitPaths',\n    description:\n      'A file that matches any of these glob patterns will not be committed, even if it has been updated.',\n    type: 'array',\n    subType: 'string',\n    default: [],\n  },\n  {\n    name: 'executionTimeout',\n    description:\n      'Default execution timeout in minutes for child processes Renovate creates.',\n    type: 'integer',\n    default: 15,\n    globalOnly: true,\n  },\n  {\n    name: 'aliases',\n    description: 'Aliases for registries, package manager specific.',\n    type: 'object',\n    default: {},\n    additionalProperties: {\n      type: 'string',\n      format: 'uri',\n    },\n    supportedManagers: ['helm-requirements', 'helmv3', 'helmfile'],\n  },\n  {\n    name: 'registryUrls',\n    description:\n      'List of URLs to try for dependency lookup. Package manager specific.',\n    type: 'array',\n    subType: 'string',\n    default: null,\n    stage: 'branch',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'extractVersion',\n    description:\n      \"A regex (re2) to extract a version from a datasource's raw version string.\",\n    type: 'string',\n    format: 'regex',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'versioning',\n    description: 'Versioning to use for filtering and comparisons.',\n    type: 'string',\n    allowedValues: getVersioningList(),\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'azureWorkItemId',\n    description:\n      'The id of an existing work item on Azure Boards to link to each PR.',\n    type: 'integer',\n    default: 0,\n    supportedPlatforms: ['azure'],\n  },\n  {\n    name: 'azureAutoApprove',\n    description:\n      'If set to true, Azure DevOps PRs will be automatically approved.',\n    type: 'boolean',\n    default: false,\n    supportedPlatforms: ['azure'],\n  },\n  // depType\n  {\n    name: 'ignoreDeps',\n    description: 'Dependencies to ignore.',\n    type: 'array',\n    subType: 'string',\n    stage: 'package',\n    mergeable: true,\n  },\n  {\n    name: 'updateInternalDeps',\n    description:\n      'Whether to update internal dep versions in a monorepo (Lerna or Yarn Workspaces).',\n    type: 'boolean',\n    default: false,\n    stage: 'package',\n  },\n  {\n    name: 'packageRules',\n    description: 'Rules for matching package names.',\n    type: 'array',\n    stage: 'package',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchLanguages',\n    description:\n      'List of languages to match (e.g. [\"python\"]). Valid only within `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    parent: 'packageRules',\n    stage: 'package',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchBaseBranches',\n    description:\n      'List of branches to match (e.g. [\"master\"]). Valid only within `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    parent: 'packageRules',\n    stage: 'package',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchManagers',\n    description:\n      'List of package managers to match (e.g. [\"pipenv\"]). Valid only within `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    parent: 'packageRules',\n    stage: 'package',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchDatasources',\n    description:\n      'List of datasources to match (e.g. [\"orb\"]). Valid only within `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    parent: 'packageRules',\n    stage: 'package',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchDepTypes',\n    description:\n      'List of depTypes to match (e.g. [`peerDependencies`]). Valid only within `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    parent: 'packageRules',\n    stage: 'package',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchPackageNames',\n    description:\n      'Package names to match. Valid only within `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    stage: 'package',\n    parent: 'packageRules',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'excludePackageNames',\n    description:\n      'Package names to exclude. Valid only within `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    stage: 'package',\n    parent: 'packageRules',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchPackagePrefixes',\n    description:\n      'Package name prefixes to match. Valid only within `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    stage: 'package',\n    parent: 'packageRules',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'excludePackagePrefixes',\n    description:\n      'Package name prefixes to exclude. Valid only within `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    stage: 'package',\n    parent: 'packageRules',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchPackagePatterns',\n    description:\n      'Package name patterns to match. Valid only within `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    format: 'regex',\n    allowString: true,\n    stage: 'package',\n    parent: 'packageRules',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'excludePackagePatterns',\n    description:\n      'Package name patterns to exclude. Valid only within `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    format: 'regex',\n    allowString: true,\n    stage: 'package',\n    parent: 'packageRules',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchCurrentVersion',\n    description:\n      'A version or version range to match against the current version of a package. Valid only within `packageRules` object.',\n    type: 'string',\n    stage: 'package',\n    parent: 'packageRules',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchSourceUrlPrefixes',\n    description:\n      'A list of source URL prefixes to match against, commonly used for grouping of monorepos or packages from the same organization.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    stage: 'package',\n    parent: 'packageRules',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'replacementName',\n    description:\n      'The name of the new dependency that replaces the old deprecated dependency.',\n    type: 'string',\n    stage: 'package',\n    parent: 'packageRules',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'replacementVersion',\n    description:\n      'The version of the new dependency that replaces the old deprecated dependency.',\n    type: 'string',\n    stage: 'package',\n    parent: 'packageRules',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchUpdateTypes',\n    description:\n      'Update types to match against (major, minor, pin, etc). Valid only within `packageRules` object.',\n    type: 'array',\n    subType: 'string',\n    allowedValues: [\n      'major',\n      'minor',\n      'patch',\n      'pin',\n      'digest',\n      'lockFileMaintenance',\n      'rollback',\n      'bump',\n    ],\n    allowString: true,\n    stage: 'package',\n    parent: 'packageRules',\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchFiles',\n    description:\n      'List of strings to do an exact match against package files with full path. Applicable inside packageRules only.',\n    type: 'array',\n    subType: 'string',\n    stage: 'repository',\n    parent: 'packageRules',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchPaths',\n    description:\n      'List of strings or glob patterns to match against package files. Applicable inside packageRules only.',\n    type: 'array',\n    subType: 'string',\n    stage: 'repository',\n    parent: 'packageRules',\n    cli: false,\n    env: false,\n  },\n  // Version behaviour\n  {\n    name: 'allowedVersions',\n    description:\n      'A version range or regex pattern capturing allowed versions for dependencies.',\n    type: 'string',\n    parent: 'packageRules',\n    stage: 'package',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'pinDigests',\n    description: 'Whether to add digests to Dockerfile source images.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'separateMajorMinor',\n    description:\n      'If set to false, it will upgrade dependencies to latest release only, and not separate major/minor branches.',\n    type: 'boolean',\n  },\n  {\n    name: 'separateMultipleMajor',\n    description:\n      'If set to true, PRs will be raised separately for each available major upgrade version.',\n    stage: 'package',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'separateMinorPatch',\n    description:\n      'If set to true, it will separate minor and patch updates into separate branches.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'ignoreUnstable',\n    description: 'Ignore versions with unstable SemVer.',\n    stage: 'package',\n    type: 'boolean',\n  },\n  {\n    name: 'ignoreDeprecated',\n    description:\n      'Ignore deprecated versions unless the current version is deprecated.',\n    stage: 'package',\n    type: 'boolean',\n    default: true,\n  },\n  {\n    name: 'followTag',\n    description: 'If defined, packages will follow this release tag exactly.',\n    stage: 'package',\n    type: 'string',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'respectLatest',\n    description: 'Ignore versions newer than npm \"latest\" version.',\n    stage: 'package',\n    type: 'boolean',\n  },\n  {\n    name: 'rangeStrategy',\n    description: 'Policy for how to modify/update existing ranges.',\n    type: 'string',\n    default: 'replace',\n    allowedValues: [\n      'auto',\n      'pin',\n      'bump',\n      'replace',\n      'widen',\n      'update-lockfile',\n    ],\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'branchPrefix',\n    description: 'Prefix to use for all branch names.',\n    stage: 'branch',\n    type: 'string',\n    default: `renovate/`,\n  },\n  {\n    name: 'bumpVersion',\n    description: 'Bump the version in the package file being updated.',\n    type: 'string',\n    allowedValues: ['major', 'minor', 'patch'],\n    supportedManagers: ['helmv3', 'npm', 'sbt'],\n  },\n  // Major/Minor/Patch\n  {\n    name: 'major',\n    description: 'Configuration to apply when an update type is major.',\n    stage: 'package',\n    type: 'object',\n    default: {},\n    cli: false,\n    mergeable: true,\n  },\n  {\n    name: 'minor',\n    description: 'Configuration to apply when an update type is minor.',\n    stage: 'package',\n    type: 'object',\n    default: {},\n    cli: false,\n    mergeable: true,\n  },\n  {\n    name: 'patch',\n    description: 'Configuration to apply when an update type is patch.',\n    stage: 'package',\n    type: 'object',\n    default: {},\n    cli: false,\n    mergeable: true,\n  },\n  {\n    name: 'pin',\n    description: 'Configuration to apply when an update type is pin.',\n    stage: 'package',\n    type: 'object',\n    default: {\n      rebaseWhen: 'behind-base-branch',\n      groupName: 'Pin Dependencies',\n      groupSlug: 'pin-dependencies',\n      commitMessageAction: 'Pin',\n      group: {\n        commitMessageTopic: 'dependencies',\n        commitMessageExtra: '',\n      },\n    },\n    cli: false,\n    mergeable: true,\n  },\n  {\n    name: 'digest',\n    description:\n      'Configuration to apply when updating a digest (no change in tag/version).',\n    stage: 'package',\n    type: 'object',\n    default: {\n      branchTopic: '{{{depNameSanitized}}}-digest',\n      commitMessageExtra: 'to {{newDigestShort}}',\n      commitMessageTopic: '{{{depName}}} commit hash',\n    },\n    cli: false,\n    mergeable: true,\n  },\n  {\n    name: 'rollback',\n    description: 'Configuration to apply when rolling back a version.',\n    stage: 'package',\n    type: 'object',\n    default: {\n      branchTopic: '{{{depNameSanitized}}}-rollback',\n      commitMessageAction: 'Roll back',\n      semanticCommitType: 'fix',\n    },\n    cli: false,\n    mergeable: true,\n  },\n  {\n    name: 'replacement',\n    description: 'Configuration to apply when replacing a dependency.',\n    stage: 'package',\n    type: 'object',\n    default: {\n      branchTopic: '{{{depNameSanitized}}}-replacement',\n      commitMessageAction: 'Replace',\n      commitMessageExtra:\n        'with {{newName}} {{#if isMajor}}v{{{newMajor}}}{{else}}{{#if isSingleVersion}}v{{{newVersion}}}{{else}}{{{newValue}}}{{/if}}{{/if}}',\n      prBodyNotes: [\n        'This is a special PR that replaces `{{{depNameSanitized}}}` with the community suggested minimal stable replacement version.',\n      ],\n    },\n    cli: false,\n    mergeable: true,\n  },\n  // Semantic commit / Semantic release\n  {\n    name: 'semanticCommits',\n    description: 'Enable Semantic Commit prefixes for commits and PR titles.',\n    type: 'string',\n    allowedValues: ['auto', 'enabled', 'disabled'],\n    default: 'auto',\n  },\n  {\n    name: 'semanticCommitType',\n    description: 'Commit type to use if Semantic Commits is enabled.',\n    type: 'string',\n    default: 'chore',\n  },\n  {\n    name: 'semanticCommitScope',\n    description: 'Commit scope to use if Semantic Commits are enabled.',\n    type: 'string',\n    default: 'deps',\n  },\n  // PR Behaviour\n  {\n    name: 'rollbackPrs',\n    description:\n      'Create PRs to roll back versions if the current version is not found in the registry.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'recreateClosed',\n    description: 'Recreate PRs even if same ones were closed previously.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'rebaseWhen',\n    description: 'Control when Renovate decides to rebase an existing branch.',\n    type: 'string',\n    allowedValues: ['auto', 'never', 'conflicted', 'behind-base-branch'],\n    default: 'auto',\n  },\n  {\n    name: 'rebaseLabel',\n    description: 'Label to use to request the bot to rebase a PR manually.',\n    type: 'string',\n    default: 'rebase',\n  },\n  {\n    name: 'stabilityDays',\n    description:\n      'Number of days required before a new release is considered to be stabilized.',\n    type: 'integer',\n    default: 0,\n  },\n  /*\n   * Undocumented experimental feature\n  {\n    name: 'minimumConfidence',\n    description:\n      'Minimum Merge confidence level to filter by. Requires authentication to work.',\n    type: 'string',\n    allowedValues: ['low', 'neutral', 'high', 'very high'],\n    default: 'low',\n  },\n  */\n  {\n    name: 'internalChecksFilter',\n    description: 'When/how to filter based on internal checks.',\n    type: 'string',\n    allowedValues: ['strict', 'flexible', 'none'],\n    default: 'none',\n  },\n  {\n    name: 'prCreation',\n    description: 'When to create the PR for a branch.',\n    type: 'string',\n    allowedValues: ['immediate', 'not-pending', 'status-success', 'approval'],\n    default: 'immediate',\n  },\n  {\n    name: 'prNotPendingHours',\n    description: 'Timeout in hours for when prCreation=not-pending.',\n    type: 'integer',\n    default: 25,\n  },\n  {\n    name: 'prHourlyLimit',\n    description:\n      'Rate limit PRs to maximum x created per hour. 0 (default) means no limit.',\n    type: 'integer',\n    default: 0, // no limit\n  },\n  {\n    name: 'prConcurrentLimit',\n    description:\n      'Limit to a maximum of x concurrent branches/PRs. 0 (default) means no limit.',\n    type: 'integer',\n    default: 0, // no limit\n  },\n  {\n    name: 'branchConcurrentLimit',\n    description:\n      'Limit to a maximum of x concurrent branches. 0 means no limit, `null` (default) inherits value from `prConcurrentLimit`.',\n    type: 'integer',\n    default: null, // inherit prConcurrentLimit\n  },\n  {\n    name: 'prPriority',\n    description:\n      'Set sorting priority for PR creation. PRs with higher priority are created first, negative priority last.',\n    type: 'integer',\n    default: 0,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'bbUseDefaultReviewers',\n    description: 'Use the default reviewers (Bitbucket only).',\n    type: 'boolean',\n    default: true,\n    supportedPlatforms: ['bitbucket'],\n  },\n  // Automatic merging\n  {\n    name: 'automerge',\n    description:\n      'Whether to automerge branches/PRs automatically, without human intervention.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'automergeType',\n    description: 'How to automerge, if enabled.',\n    type: 'string',\n    allowedValues: ['branch', 'pr', 'pr-comment'],\n    default: 'pr',\n  },\n  {\n    name: 'automergeStrategy',\n    description:\n      'The merge strategy to use when automerging PRs. Used only if `automergeType=pr`.',\n    type: 'string',\n    allowedValues: ['auto', 'fast-forward', 'merge-commit', 'rebase', 'squash'],\n    default: 'auto',\n    supportedPlatforms: ['bitbucket'],\n  },\n  {\n    name: 'automergeComment',\n    description:\n      'PR comment to add to trigger automerge. Used only if automergeType=pr-comment.',\n    type: 'string',\n    default: 'automergeComment',\n  },\n  {\n    name: 'ignoreTests',\n    description: 'Set to true to enable automerging without tests.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'transitiveRemediation',\n    description: 'Enable remediation of transitive dependencies.',\n    type: 'boolean',\n    default: false,\n    supportedManagers: ['npm'],\n    supportedPlatforms: ['github'],\n  },\n  {\n    name: 'vulnerabilityAlerts',\n    description:\n      'Config to apply when a PR is necessary due to vulnerability of existing package version.',\n    type: 'object',\n    default: {\n      groupName: null,\n      schedule: [],\n      dependencyDashboardApproval: false,\n      rangeStrategy: 'update-lockfile',\n      commitMessageSuffix: '[SECURITY]',\n      branchTopic: `{{{datasource}}}-{{{depName}}}-vulnerability`,\n      prCreation: 'immediate',\n    },\n    mergeable: true,\n    cli: false,\n    env: false,\n    supportedPlatforms: ['github'],\n  },\n  // Default templates\n  {\n    name: 'branchName',\n    description: 'Branch name template.',\n    type: 'string',\n    default: '{{{branchPrefix}}}{{{additionalBranchPrefix}}}{{{branchTopic}}}',\n    cli: false,\n  },\n  {\n    name: 'additionalBranchPrefix',\n    description: 'Additional string value to be appended to branchPrefix.',\n    type: 'string',\n    default: '',\n    cli: false,\n  },\n  {\n    name: 'branchTopic',\n    description: 'Branch topic.',\n    type: 'string',\n    default:\n      '{{{depNameSanitized}}}-{{{newMajor}}}{{#if separateMinorPatch}}{{#if isPatch}}.{{{newMinor}}}{{/if}}{{/if}}.x{{#if isLockfileUpdate}}-lockfile{{/if}}',\n    cli: false,\n  },\n  {\n    name: 'commitMessage',\n    description: 'Message to use for commit messages and pull request titles.',\n    type: 'string',\n    default:\n      '{{{commitMessagePrefix}}} {{{commitMessageAction}}} {{{commitMessageTopic}}} {{{commitMessageExtra}}} {{{commitMessageSuffix}}}',\n    cli: false,\n  },\n  {\n    name: 'commitBody',\n    description:\n      'Commit message body template. Will be appended to commit message, separated by two line returns.',\n    type: 'string',\n    cli: false,\n  },\n  {\n    name: 'commitBodyTable',\n    description:\n      'If enabled, append a table in the commit message body describing all updates in the commit.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'commitMessagePrefix',\n    description:\n      'Prefix to add to start of commit messages and PR titles. Uses a semantic prefix if semanticCommits enabled.',\n    type: 'string',\n    cli: false,\n  },\n  {\n    name: 'commitMessageAction',\n    description: 'Action verb to use in commit messages and PR titles.',\n    type: 'string',\n    default: 'Update',\n    cli: false,\n  },\n  {\n    name: 'commitMessageTopic',\n    description:\n      'The upgrade topic/noun used in commit messages and PR titles.',\n    type: 'string',\n    default: 'dependency {{depName}}',\n    cli: false,\n  },\n  {\n    name: 'commitMessageExtra',\n    description:\n      'Extra description used after the commit message topic - typically the version.',\n    type: 'string',\n    default:\n      'to {{#if isMajor}}v{{{newMajor}}}{{else}}{{#if isSingleVersion}}v{{{newVersion}}}{{else}}{{{newValue}}}{{/if}}{{/if}}',\n    cli: false,\n  },\n  {\n    name: 'commitMessageSuffix',\n    description: 'Suffix to add to end of commit messages and PR titles.',\n    type: 'string',\n    cli: false,\n  },\n  {\n    name: 'prBodyTemplate',\n    description:\n      'Pull Request body template. Controls which sections are rendered in the body.',\n    type: 'string',\n    default:\n      '{{{header}}}{{{table}}}{{{notes}}}{{{changelogs}}}{{{configDescription}}}{{{controls}}}{{{footer}}}',\n    cli: false,\n  },\n  {\n    name: 'prTitle',\n    description:\n      'Pull Request title template (deprecated). Now uses commitMessage.',\n    type: 'string',\n    default: null,\n    cli: false,\n  },\n  {\n    name: 'prHeader',\n    description: 'Any text added here will be placed first in the PR body.',\n    type: 'string',\n  },\n  {\n    name: 'prFooter',\n    description:\n      'Any text added here will be placed last in the PR body, with a divider separator before it.',\n    type: 'string',\n    default: `This PR has been generated by [Renovate Bot](https://github.com/renovatebot/renovate).`,\n  },\n  {\n    name: 'lockFileMaintenance',\n    description: 'Configuration for lock file maintenance.',\n    stage: 'branch',\n    type: 'object',\n    default: {\n      enabled: false,\n      recreateClosed: true,\n      rebaseStalePrs: true,\n      branchTopic: 'lock-file-maintenance',\n      commitMessageAction: 'Lock file maintenance',\n      commitMessageTopic: null,\n      commitMessageExtra: null,\n      schedule: ['before 5am on monday'],\n      groupName: null,\n      prBodyDefinitions: {\n        Change: 'All locks refreshed',\n      },\n    },\n    cli: false,\n    mergeable: true,\n  },\n  {\n    name: 'hashedBranchLength',\n    description:\n      'If enabled, branch names will use a hashing function to ensure each branch has that length.',\n    type: 'integer',\n    default: null,\n    cli: false,\n  },\n  // Dependency Groups\n  {\n    name: 'groupName',\n    description: 'Human understandable name for the dependency group.',\n    type: 'string',\n    default: null,\n  },\n  {\n    name: 'groupSlug',\n    description:\n      'Slug to use for group (e.g. in branch name). Will be calculated from groupName if null.',\n    type: 'string',\n    default: null,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'group',\n    description: 'Config if groupName is enabled.',\n    type: 'object',\n    default: {\n      branchTopic: '{{{groupSlug}}}',\n      commitMessageTopic: '{{{groupName}}}',\n    },\n    cli: false,\n    env: false,\n    mergeable: true,\n  },\n  // Pull Request options\n  {\n    name: 'labels',\n    description: 'Labels to set in Pull Request.',\n    type: 'array',\n    subType: 'string',\n  },\n  {\n    name: 'addLabels',\n    description: 'Labels to add to Pull Request.',\n    type: 'array',\n    subType: 'string',\n    mergeable: true,\n  },\n  {\n    name: 'assignees',\n    description:\n      'Assignees for Pull Request (either username or email address depending on the platform).',\n    type: 'array',\n    subType: 'string',\n  },\n  {\n    name: 'assigneesFromCodeOwners',\n    description:\n      'Determine assignees based on configured code owners and changes in PR.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'assigneesSampleSize',\n    description: 'Take a random sample of given size from assignees.',\n    type: 'integer',\n    default: null,\n  },\n  {\n    name: 'assignAutomerge',\n    description:\n      'Assign reviewers and assignees even if the PR is to be automerged.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'reviewers',\n    description:\n      'Requested reviewers for Pull Requests (either username or email address depending on the platform).',\n    type: 'array',\n    subType: 'string',\n  },\n  {\n    name: 'reviewersFromCodeOwners',\n    description:\n      'Determine reviewers based on configured code owners and changes in PR.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'filterUnavailableUsers',\n    description: 'Filter reviewers and assignees based on their availability.',\n    type: 'boolean',\n    default: false,\n    supportedPlatforms: ['gitlab'],\n  },\n  {\n    name: 'confidential',\n    description:\n      'If enabled, issues created by Renovate are set as confidential.',\n    type: 'boolean',\n    default: false,\n    supportedPlatforms: ['gitlab'],\n  },\n  {\n    name: 'reviewersSampleSize',\n    description: 'Take a random sample of given size from reviewers.',\n    type: 'integer',\n    default: null,\n  },\n  {\n    name: 'additionalReviewers',\n    description:\n      'Additional reviewers for Pull Requests (in contrast to `reviewers`, this option adds to the existing reviewer list, rather than replacing it).',\n    type: 'array',\n    subType: 'string',\n    mergeable: true,\n  },\n  {\n    name: 'fileMatch',\n    description: 'RegEx (re2) pattern for matching manager files.',\n    type: 'array',\n    subType: 'string',\n    format: 'regex',\n    stage: 'repository',\n    allowString: true,\n    mergeable: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'js',\n    description: 'Configuration object for JavaScript language.',\n    stage: 'package',\n    type: 'object',\n    default: {},\n    mergeable: true,\n  },\n  {\n    name: 'golang',\n    description: 'Configuration object for Go language.',\n    stage: 'package',\n    type: 'object',\n    default: {\n      commitMessageTopic: 'module {{depName}}',\n    },\n    mergeable: true,\n    cli: false,\n  },\n  {\n    name: 'postUpdateOptions',\n    description:\n      'Enable post-update options to be run after package/artifact updating.',\n    type: 'array',\n    default: [],\n    allowedValues: [\n      'gomodUpdateImportPaths',\n      'gomodTidy',\n      'npmDedupe',\n      'yarnDedupeFewer',\n      'yarnDedupeHighest',\n    ],\n    cli: false,\n    env: false,\n    mergeable: true,\n  },\n  {\n    name: 'ruby',\n    description: 'Configuration object for Ruby language.',\n    stage: 'package',\n    type: 'object',\n    default: {},\n    mergeable: true,\n    cli: false,\n  },\n  {\n    name: 'rust',\n    description: 'Configuration option for Rust package management.',\n    stage: 'package',\n    type: 'object',\n    default: {},\n    mergeable: true,\n    cli: false,\n  },\n  {\n    name: 'node',\n    description: 'Configuration object for Node version renovation.',\n    stage: 'package',\n    type: 'object',\n    default: {\n      commitMessageTopic: 'Node.js',\n    },\n    mergeable: true,\n    cli: false,\n  },\n  {\n    name: 'docker',\n    description: 'Configuration object for Docker language.',\n    stage: 'package',\n    type: 'object',\n    default: {\n      versioning: dockerVersioning.id,\n    },\n    mergeable: true,\n    cli: false,\n  },\n  {\n    name: 'php',\n    description: 'Configuration object for PHP.',\n    stage: 'package',\n    type: 'object',\n    default: {},\n    mergeable: true,\n    cli: false,\n  },\n  {\n    name: 'python',\n    description: 'Configuration object for Python.',\n    stage: 'package',\n    type: 'object',\n    default: {\n      versioning: pep440Versioning.id,\n    },\n    mergeable: true,\n    cli: false,\n  },\n  {\n    name: 'constraints',\n    description:\n      'Configuration object to define language or manager version constraints.',\n    type: 'object',\n    default: {},\n    mergeable: true,\n    cli: false,\n    supportedManagers: [\n      'bundler',\n      'composer',\n      'gomod',\n      'npm',\n      'pipenv',\n      'poetry',\n    ],\n  },\n  {\n    name: 'java',\n    description: 'Configuration object for all Java package managers.',\n    stage: 'package',\n    type: 'object',\n    default: {},\n    mergeable: true,\n    cli: false,\n  },\n  {\n    name: 'dotnet',\n    description: 'Configuration object for .NET language.',\n    stage: 'package',\n    type: 'object',\n    default: {},\n    mergeable: true,\n    cli: false,\n  },\n  {\n    name: 'hostRules',\n    description: 'Host rules/configuration including credentials.',\n    type: 'array',\n    subType: 'object',\n    default: [\n      {\n        timeout: 60000,\n      },\n    ],\n    stage: 'repository',\n    cli: true,\n    mergeable: true,\n  },\n  {\n    name: 'hostType',\n    description:\n      'hostType for a package rule. Can be a platform name or a datasource name.',\n    type: 'string',\n    stage: 'repository',\n    parent: 'hostRules',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchHost',\n    description: 'A domain name, host name or base URL to match against',\n    type: 'string',\n    stage: 'repository',\n    parent: 'hostRules',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'timeout',\n    description: 'Timeout (in milliseconds) for queries to external endpoints.',\n    type: 'integer',\n    stage: 'repository',\n    parent: 'hostRules',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'insecureRegistry',\n    description: 'Explicitly turn on insecure Docker registry access (HTTP).',\n    type: 'boolean',\n    stage: 'repository',\n    parent: 'hostRules',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'abortOnError',\n    description:\n      'If enabled, Renovate will abort its run when HTTP request errors occur.',\n    type: 'boolean',\n    stage: 'repository',\n    parent: 'hostRules',\n    default: false,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'abortIgnoreStatusCodes',\n    description:\n      'A list of HTTP status codes to ignore and *not* abort the run because of when abortOnError=true.',\n    type: 'array',\n    subType: 'number',\n    stage: 'repository',\n    parent: 'hostRules',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'enableHttp2',\n    description: 'Enable got HTTP/2 support.',\n    type: 'boolean',\n    stage: 'repository',\n    parent: 'hostRules',\n    default: false,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'concurrentRequestLimit',\n    description: 'Limit concurrent requests per host.',\n    type: 'integer',\n    stage: 'repository',\n    parent: 'hostRules',\n    default: null,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'authType',\n    description:\n      'Authentication type for http header. e.g. \"Bearer\" or \"Basic\". Use \"Token-Only\" to use only the token without an authorization type.',\n    type: 'string',\n    stage: 'repository',\n    parent: 'hostRules',\n    default: 'Bearer',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'prBodyDefinitions',\n    description: 'Table column definitions for use in PR tables.',\n    type: 'object',\n    freeChoice: true,\n    mergeable: true,\n    default: {\n      Package: '{{{depNameLinked}}}',\n      Type: '{{{depType}}}',\n      Update: '{{{updateType}}}',\n      'Current value': '{{{currentValue}}}',\n      'New value': '{{{newValue}}}',\n      Change: '`{{{displayFrom}}}` -> `{{{displayTo}}}`',\n      References: '{{{references}}}',\n      'Package file': '{{{packageFile}}}',\n    },\n  },\n  {\n    name: 'prBodyColumns',\n    description: 'List of columns to use in PR bodies.',\n    type: 'array',\n    subType: 'string',\n    default: ['Package', 'Type', 'Update', 'Change'],\n  },\n  {\n    name: 'prBodyNotes',\n    description:\n      'List of additional notes/templates to be included in the Pull Request bodies.',\n    type: 'array',\n    subType: 'string',\n    default: [],\n    allowString: true,\n    mergeable: true,\n  },\n  {\n    name: 'suppressNotifications',\n    description:\n      'Options to suppress various types of warnings and other notifications.',\n    type: 'array',\n    subType: 'string',\n    default: ['deprecationWarningIssues'],\n    allowedValues: [\n      'prIgnoreNotification',\n      'branchAutomergeFailure',\n      'lockFileErrors',\n      'artifactErrors',\n      'deprecationWarningIssues',\n      'onboardingClose',\n    ],\n    cli: false,\n    env: false,\n    mergeable: true,\n  },\n  {\n    name: 'pruneStaleBranches',\n    description: `Enable or disable pruning of stale branches.`,\n    type: 'boolean',\n    default: true,\n  },\n  {\n    name: 'unicodeEmoji',\n    description: 'Enable or disable Unicode emoji.',\n    type: 'boolean',\n    default: true,\n  },\n  {\n    name: 'gitLabIgnoreApprovals',\n    description: `Ignore approval rules for MRs created by Renovate, which is useful for automerge.`,\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'regexManagers',\n    description: 'Custom managers using regex matching.',\n    type: 'array',\n    subType: 'object',\n    default: [],\n    stage: 'package',\n    cli: true,\n    mergeable: true,\n  },\n  {\n    name: 'matchStrings',\n    description:\n      'Regex capture rule to use. Valid only within a `regexManagers` object.',\n    type: 'array',\n    subType: 'string',\n    format: 'regex',\n    parent: 'regexManagers',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'matchStringsStrategy',\n    description: 'Strategy how to interpret matchStrings.',\n    type: 'string',\n    default: 'any',\n    allowedValues: ['any', 'recursive', 'combination'],\n    parent: 'regexManagers',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'depNameTemplate',\n    description:\n      'Optional depName for extracted dependencies. Valid only within a `regexManagers` object.',\n    type: 'string',\n    parent: 'regexManagers',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'lookupNameTemplate',\n    description:\n      'Optional lookupName for extracted dependencies, else defaults to depName value. Valid only within a `regexManagers` object.',\n    type: 'string',\n    parent: 'regexManagers',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'datasourceTemplate',\n    description:\n      'Optional datasource for extracted dependencies. Valid only within a `regexManagers` object.',\n    type: 'string',\n    parent: 'regexManagers',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'depTypeTemplate',\n    description:\n      'Optional depType for extracted dependencies. Valid only within a `regexManagers` object.',\n    type: 'string',\n    parent: 'regexManagers',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'currentValueTemplate',\n    description:\n      'Optional currentValue for extracted dependencies. Valid only within a `regexManagers` object.',\n    type: 'string',\n    parent: 'regexManagers',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'versioningTemplate',\n    description:\n      'Optional versioning for extracted dependencies. Valid only within a `regexManagers` object.',\n    type: 'string',\n    parent: 'regexManagers',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'registryUrlTemplate',\n    description:\n      'Optional registry URL for extracted dependencies. Valid only within a `regexManagers` object.',\n    type: 'string',\n    parent: 'regexManagers',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'extractVersionTemplate',\n    description:\n      'Optional extractVersion for extracted dependencies. Valid only within a `regexManagers` object.',\n    type: 'string',\n    parent: 'regexManagers',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'autoReplaceStringTemplate',\n    description:\n      'Optional extractVersion for extracted dependencies. Valid only within a `regexManagers` object.',\n    type: 'string',\n    parent: 'regexManagers',\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'fetchReleaseNotes',\n    description: 'Allow to disable release notes fetching.',\n    type: 'boolean',\n    default: true,\n    cli: false,\n    env: false,\n  },\n  {\n    name: 'cloneSubmodules',\n    description:\n      'Set to true to enable initialization of submodules during repository clone.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'ignorePrAuthor',\n    description:\n      'Set to true to fetch the entire list of PRs instead of only those authored by the Renovate user.',\n    type: 'boolean',\n    default: false,\n  },\n  {\n    name: 'gitNoVerify',\n    description:\n      'Which git commands will be run with the `--no-verify` option.',\n    type: 'array',\n    subType: 'string',\n    allowString: true,\n    allowedValues: ['commit', 'push'],\n    default: ['commit', 'push'],\n    stage: 'global',\n    globalOnly: true,\n  },\n  {\n    name: 'updatePinnedDependencies',\n    description:\n      'Whether to update pinned (single version) dependencies or not.',\n    type: 'boolean',\n    default: true,\n  },\n  {\n    name: 'gitUrl',\n    description:\n      'Overrides the default resolution for git remote, e.g. to switch GitLab from HTTPS to SSH-based.',\n    type: 'string',\n    allowedValues: ['default', 'ssh', 'endpoint'],\n    default: 'default',\n    stage: 'repository',\n    globalOnly: true,\n  },\n  {\n    name: 'writeDiscoveredRepos',\n    description: 'Writes discovered repositories to a JSON file and then exit.',\n    type: 'string',\n    globalOnly: true,\n    env: false,\n  },\n  {\n    name: 'platformAutomerge',\n    description: `Enable or disable usage of platform-native auto-merge capabilities when available.`,\n    type: 'boolean',\n    default: false,\n  },\n];\n\nexport function getOptions(): RenovateOptions[] {\n  return options;\n}\n\nfunction loadManagerOptions(): void {\n  for (const [name, config] of getManagers().entries()) {\n    if (config.defaultConfig) {\n      const managerConfig: RenovateOptions = {\n        name,\n        description: `Configuration object for the ${name} manager`,\n        stage: 'package',\n        type: 'object',\n        default: config.defaultConfig,\n        mergeable: true,\n        cli: false,\n        autogenerated: true,\n      };\n      options.push(managerConfig);\n    }\n  }\n}\n\nloadManagerOptions();\n"]}