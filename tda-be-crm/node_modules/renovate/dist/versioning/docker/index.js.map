{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/versioning/docker/index.ts"],"names":[],"mappings":";;;;AAAA,4CAAyC;AACzC,uEAA4C;AAG/B,QAAA,EAAE,GAAG,QAAQ,CAAC;AACd,QAAA,WAAW,GAAG,QAAQ,CAAC;AACvB,QAAA,IAAI,GAAG;IAClB,2DAA2D;CAC5D,CAAC;AACW,QAAA,cAAc,GAAG,KAAK,CAAC;AAEpC,MAAM,cAAc,GAAG,IAAA,aAAK,EAAC,8CAA8C,CAAC,CAAC;AAC7E,MAAM,iBAAiB,GAAG,IAAA,aAAK,EAAC,kBAAkB,CAAC,CAAC;AACpD,MAAM,cAAc,GAAG,IAAA,aAAK,EAAC,UAAU,CAAC,CAAC;AAEzC,SAAS,KAAK,CAAC,OAAe;IAC5B,IAAI,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;QACpE,OAAO,IAAI,CAAC;KACb;IACD,MAAM,aAAa,GAAG,OAAO,CAAC,OAAO,CAAC,IAAA,aAAK,EAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAClE,MAAM,MAAM,GAAG,aAAa,CAAC,KAAK,EAAE,CAAC;IACrC,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACvC,MAAM,CAAC,GAAG,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,IAAI,CAAC,CAAA,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,MAAM,CAAA,EAAE;QACd,OAAO,IAAI,CAAC;KACb;IAED,MAAM,EAAE,OAAO,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC;IAC9C,MAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC3C,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;AACzC,CAAC;AAED,SAAS,cAAc,CAAC,KAAa;IACnC,8CAA8C;IAC9C,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AAC7C,CAAC;AAED,SAAS,OAAO,CAAC,QAAgB,EAAE,QAAgB;IACjD,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;IAChC,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;IAChC,qBAAqB;IACrB,IAAI,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,EAAE;QACzB,OAAO,CAAC,CAAC;KACV;IACD,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACxE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QAClC,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACjC,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACjC,gCAAgC;QAChC,IAAI,KAAK,KAAK,SAAS,EAAE;YACvB,OAAO,CAAC,CAAC;SACV;QACD,IAAI,KAAK,KAAK,SAAS,EAAE;YACvB,OAAO,CAAC,CAAC,CAAC;SACX;QACD,IAAI,KAAK,KAAK,KAAK,EAAE;YACnB,OAAO,KAAK,GAAG,KAAK,CAAC;SACtB;KACF;IACD,IAAI,OAAO,CAAC,UAAU,KAAK,OAAO,CAAC,UAAU,EAAE;QAC7C,oBAAoB;QACpB,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,UAAU,EAAE;YAC7C,OAAO,CAAC,CAAC;SACV;QACD,IAAI,OAAO,CAAC,UAAU,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;YAC7C,OAAO,CAAC,CAAC,CAAC;SACX;QACD,mBAAmB;QACnB,OAAO,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;KAC7D;IACD,SAAS;IACT,OAAO,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACtD,CAAC;AAED,SAAS,YAAY,CAAC,OAAe,EAAE,KAAa;IAClD,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;IAC/B,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;IAC7B,OAAO,CACL,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM;QACjC,OAAO,CAAC,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,OAAO,CAAC,MAAM,CAClD,CAAC;AACJ,CAAC;AAEY,QAAA,GAAG,GAAkB;IAChC,GAAG,OAAO,CAAC,MAAM,CAAC;QAChB,KAAK;QACL,OAAO;KACR,CAAC;IACF,YAAY;IACZ,cAAc;CACf,CAAC;AAEF,kBAAe,WAAG,CAAC","sourcesContent":["import { regEx } from '../../util/regex';\nimport * as generic from '../loose/generic';\nimport type { VersioningApi } from '../types';\n\nexport const id = 'docker';\nexport const displayName = 'Docker';\nexport const urls = [\n  'https://docs.docker.com/engine/reference/commandline/tag/',\n];\nexport const supportsRanges = false;\n\nconst versionPattern = regEx(/^(?<version>\\d+(?:\\.\\d+)*)(?<prerelease>.*)$/);\nconst commitHashPattern = regEx(/^[a-f0-9]{7,40}$/);\nconst numericPattern = regEx(/^[0-9]+$/);\n\nfunction parse(version: string): generic.GenericVersion {\n  if (commitHashPattern.test(version) && !numericPattern.test(version)) {\n    return null;\n  }\n  const versionPieces = version.replace(regEx(/^v/), '').split('-');\n  const prefix = versionPieces.shift();\n  const suffix = versionPieces.join('-');\n  const m = versionPattern.exec(prefix);\n  if (!m?.groups) {\n    return null;\n  }\n\n  const { version: ver, prerelease } = m.groups;\n  const release = ver.split('.').map(Number);\n  return { release, suffix, prerelease };\n}\n\nfunction valueToVersion(value: string): string {\n  // Remove any suffix after '-', e.g. '-alpine'\n  return value ? value.split('-')[0] : value;\n}\n\nfunction compare(version1: string, version2: string): number {\n  const parsed1 = parse(version1);\n  const parsed2 = parse(version2);\n  // istanbul ignore if\n  if (!(parsed1 && parsed2)) {\n    return 1;\n  }\n  const length = Math.max(parsed1.release.length, parsed2.release.length);\n  for (let i = 0; i < length; i += 1) {\n    const part1 = parsed1.release[i];\n    const part2 = parsed2.release[i];\n    // shorter is bigger 2.1 > 2.1.1\n    if (part1 === undefined) {\n      return 1;\n    }\n    if (part2 === undefined) {\n      return -1;\n    }\n    if (part1 !== part2) {\n      return part1 - part2;\n    }\n  }\n  if (parsed1.prerelease !== parsed2.prerelease) {\n    // unstable is lower\n    if (!parsed1.prerelease && parsed2.prerelease) {\n      return 1;\n    }\n    if (parsed1.prerelease && !parsed2.prerelease) {\n      return -1;\n    }\n    // alphabetic order\n    return parsed1.prerelease.localeCompare(parsed2.prerelease);\n  }\n  // equals\n  return parsed2.suffix.localeCompare(parsed1.suffix);\n}\n\nfunction isCompatible(version: string, range: string): boolean {\n  const parsed1 = parse(version);\n  const parsed2 = parse(range);\n  return (\n    parsed1.suffix === parsed2.suffix &&\n    parsed1.release.length === parsed2.release.length\n  );\n}\n\nexport const api: VersioningApi = {\n  ...generic.create({\n    parse,\n    compare,\n  }),\n  isCompatible,\n  valueToVersion,\n};\n\nexport default api;\n"]}