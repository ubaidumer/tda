{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/versioning/poetry/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { parseRange } from 'semver-utils';\nimport { logger } from '../../logger';\nimport { api as npm } from '../npm';\nimport type { NewValueConfig, VersioningApi } from '../types';\nimport { VERSION_PATTERN } from './patterns';\nimport {\n  npm2poetry,\n  poetry2npm,\n  poetry2semver,\n  semver2poetry,\n} from './transform';\n\nexport const id = 'poetry';\nexport const displayName = 'Poetry';\nexport const urls = ['https://python-poetry.org/docs/versions/'];\nexport const supportsRanges = true;\nexport const supportedRangeStrategies = ['bump', 'extend', 'pin', 'replace'];\n\nfunction equals(a: string, b: string): boolean {\n  return npm.equals(poetry2semver(a), poetry2semver(b));\n}\n\nfunction getMajor(version: string): number {\n  return npm.getMajor(poetry2semver(version));\n}\n\nfunction getMinor(version: string): number {\n  return npm.getMinor(poetry2semver(version));\n}\n\nfunction getPatch(version: string): number {\n  return npm.getPatch(poetry2semver(version));\n}\n\nfunction isVersion(input: string): boolean {\n  return VERSION_PATTERN.test(input);\n}\n\nfunction isGreaterThan(a: string, b: string): boolean {\n  return npm.isGreaterThan(poetry2semver(a), poetry2semver(b));\n}\n\nfunction isLessThanRange(version: string, range: string): boolean {\n  return (\n    isVersion(version) &&\n    npm.isLessThanRange(poetry2semver(version), poetry2npm(range))\n  );\n}\n\nexport function isValid(input: string): string | boolean {\n  return npm.isValid(poetry2npm(input));\n}\n\nfunction isStable(version: string): boolean {\n  return npm.isStable(poetry2semver(version));\n}\n\nfunction matches(version: string, range: string): boolean {\n  return (\n    isVersion(version) && npm.matches(poetry2semver(version), poetry2npm(range))\n  );\n}\n\nfunction getSatisfyingVersion(versions: string[], range: string): string {\n  return semver2poetry(\n    npm.getSatisfyingVersion(\n      versions.map((version) => poetry2semver(version)),\n      poetry2npm(range)\n    )\n  );\n}\n\nfunction minSatisfyingVersion(versions: string[], range: string): string {\n  return semver2poetry(\n    npm.minSatisfyingVersion(\n      versions.map((version) => poetry2semver(version)),\n      poetry2npm(range)\n    )\n  );\n}\n\nfunction isSingleVersion(constraint: string): string | boolean {\n  return (\n    (constraint.trim().startsWith('=') &&\n      isVersion(constraint.trim().substring(1).trim())) ||\n    isVersion(constraint.trim())\n  );\n}\n\nfunction handleShort(\n  operator: string,\n  currentValue: string,\n  newVersion: string\n): string {\n  const toVersionMajor = getMajor(newVersion);\n  const toVersionMinor = getMinor(newVersion);\n  const split = currentValue.split('.');\n  if (split.length === 1) {\n    // [^,~]4\n    return `${operator}${toVersionMajor}`;\n  }\n  if (split.length === 2) {\n    // [^,~]4.1\n    return `${operator}${toVersionMajor}.${toVersionMinor}`;\n  }\n  return null;\n}\n\nfunction getNewValue({\n  currentValue,\n  rangeStrategy,\n  currentVersion,\n  newVersion,\n}: NewValueConfig): string {\n  if (rangeStrategy === 'replace') {\n    const npmCurrentValue = poetry2npm(currentValue);\n    try {\n      const massagedNewVersion = poetry2semver(newVersion);\n      if (\n        isVersion(massagedNewVersion) &&\n        npm.matches(massagedNewVersion, npmCurrentValue)\n      ) {\n        return currentValue;\n      }\n    } catch (err) /* istanbul ignore next */ {\n      logger.info(\n        { err },\n        'Poetry versioning: Error caught checking if newVersion satisfies currentValue'\n      );\n    }\n    const parsedRange = parseRange(npmCurrentValue);\n    const element = parsedRange[parsedRange.length - 1];\n    if (parsedRange.length === 1 && element.operator) {\n      if (element.operator === '^') {\n        const version = handleShort('^', npmCurrentValue, newVersion);\n        if (version) {\n          return npm2poetry(version);\n        }\n      }\n      if (element.operator === '~') {\n        const version = handleShort('~', npmCurrentValue, newVersion);\n        if (version) {\n          return npm2poetry(version);\n        }\n      }\n    }\n  }\n\n  // Explicitly check whether this is a fully-qualified version\n  if (\n    (VERSION_PATTERN.exec(newVersion)?.groups?.release || '').split('.')\n      .length !== 3\n  ) {\n    logger.debug(\n      'Cannot massage python version to npm - returning currentValue'\n    );\n    return currentValue;\n  }\n  try {\n    const newSemver = npm.getNewValue({\n      currentValue: poetry2npm(currentValue),\n      rangeStrategy,\n      currentVersion: poetry2semver(currentVersion),\n      newVersion: poetry2semver(newVersion),\n    });\n    const newPoetry = npm2poetry(newSemver);\n    return newPoetry;\n  } catch (err) /* istanbul ignore next */ {\n    logger.debug(\n      { currentValue, rangeStrategy, currentVersion, newVersion, err },\n      'Could not generate new value using npm.getNewValue()'\n    );\n    return currentValue;\n  }\n}\n\nfunction sortVersions(a: string, b: string): number {\n  return npm.sortVersions(poetry2semver(a), poetry2semver(b));\n}\n\nexport const api: VersioningApi = {\n  equals,\n  getMajor,\n  getMinor,\n  getPatch,\n  getNewValue,\n  getSatisfyingVersion,\n  isCompatible: isVersion,\n  isGreaterThan,\n  isLessThanRange,\n  isSingleVersion,\n  isStable,\n  isValid,\n  isVersion,\n  matches,\n  minSatisfyingVersion,\n  sortVersions,\n};\nexport default api;\n"]}