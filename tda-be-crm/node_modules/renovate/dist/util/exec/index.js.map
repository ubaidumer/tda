{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/util/exec/index.ts"],"names":[],"mappings":";;;AACA,iCAAsC;AACtC,gDAAmD;AACnD,mEAAiE;AACjE,yCAAsC;AACtC,2CAAsD;AACtD,qCAMkB;AAClB,qCAAwE;AACxE,+BAA2C;AAY3C,SAAS,WAAW,CAAC,EACnB,QAAQ,GAAG,EAAE,EACb,GAAG,EAAE,SAAS,GAAG,EAAE,GACP;IACZ,MAAM,eAAe,GAAG,qBAAY,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;IAE/D,MAAM,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CACnD,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,CAClB,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,EACzD,EAAE,CACH,CAAC;IACF,MAAM,SAAS,GAAG,IAAA,wBAAkB,EAAC,aAAa,CAAC,CAAC;IACpD,MAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,GAAG,QAAQ;QACX,GAAG,SAAS;QACZ,GAAG,eAAe;QAClB,GAAG,SAAS;KACb,CAAC,CAAC,MAAM,CACP,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,CAClB,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS;QAC/B,CAAC,CAAC,GAAG;QACL,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,QAAQ,EAAE,EAAE,EACvC,EAAE,CACH,CAAC;IACF,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,SAAS,aAAa,CACpB,QAAkB,EAClB,QAA0B;IAE1B,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC;IACjD,OAAO,YAAY,CAAC,MAAM,CACxB,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,QAAQ,CAAC,GAAG,CAAC,KAAK,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CACvE,CAAC;AACJ,CAAC;AAED,SAAS,MAAM,CAAC,EAAE,GAAG,EAAE,OAAO,EAAe;IAC3C,MAAM,UAAU,GAAG,qBAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAChD,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,IAAA,YAAI,EAAC,UAAU,EAAE,IAAA,eAAO,EAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IACpE,OAAO,QAAQ,IAAI,UAAU,CAAC;AAChC,CAAC;AAED,SAAS,iBAAiB,CAAC,IAAiB;IAC1C,MAAM,uBAAuB,GAAG,qBAAY,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;IACrE,MAAM,WAAW,GAAgB,EAAE,GAAG,IAAI,EAAE,CAAC;IAC7C,OAAO,WAAW,CAAC,QAAQ,CAAC;IAC5B,OAAO,WAAW,CAAC,MAAM,CAAC;IAC1B,OAAO,WAAW,CAAC,OAAO,CAAC;IAC3B,OAAO,WAAW,CAAC,eAAe,CAAC;IAEnC,MAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;IACnC,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IACzB,MAAM,cAAc,GAAmB;QACrC,QAAQ,EAAE,OAAO;QACjB,GAAG,WAAW;QACd,GAAG,EAAE,QAAQ;QACb,GAAG;KACJ,CAAC;IACF,mFAAmF;IACnF,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;QAC3B,IAAI,uBAAuB,EAAE;YAC3B,cAAc,CAAC,OAAO,GAAG,uBAAuB,GAAG,EAAE,GAAG,IAAI,CAAC;SAC9D;aAAM;YACL,cAAc,CAAC,OAAO,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;SACzC;KACF;IAED,sCAAsC;IACtC,cAAc,CAAC,SAAS,GAAG,cAAc,CAAC,SAAS,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC;IACxE,OAAO,cAAc,CAAC;AACxB,CAAC;AAED,SAAS,QAAQ,CAAC,EAAE,MAAM,EAAe;IACvC,MAAM,EAAE,YAAY,EAAE,GAAG,qBAAY,CAAC,GAAG,EAAE,CAAC;IAC5C,OAAO,YAAY,KAAK,QAAQ,IAAI,CAAC,CAAC,MAAM,CAAC;AAC/C,CAAC;AAOD,KAAK,UAAU,cAAc,CAC3B,GAAsB,EACtB,OAAoB,EAAE;IAEtB,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;IACxB,MAAM,EAAE,kBAAkB,EAAE,GAAG,qBAAY,CAAC,GAAG,EAAE,CAAC;IAElD,MAAM,UAAU,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAE3C,IAAI,WAAW,GAAG,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IAExD,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;QAClB,eAAM,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;QACxC,MAAM,QAAQ,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,kBAAkB,EAAE,CAAC;QAC7D,MAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;QACnC,MAAM,OAAO,GAAG,aAAa,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAClD,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QACzB,MAAM,aAAa,GAAkB,EAAE,GAAG,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC;QACjE,aAAa,CAAC,WAAW,GAAG;YAC1B,GAAG,CAAC,MAAM,IAAA,mCAAuB,EAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACxD,GAAG,CAAC,aAAa,CAAC,WAAW,IAAI,EAAE,CAAC;SACrC,CAAC;QACF,MAAM,aAAa,GAAG,MAAM,IAAA,8BAAqB,EAC/C,WAAW,EACX,aAAa,CACd,CAAC;QACF,WAAW,GAAG,CAAC,aAAa,CAAC,CAAC;KAC/B;IAED,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC;AACrC,CAAC;AAEM,KAAK,UAAU,IAAI,CACxB,GAAsB,EACtB,OAAoB,EAAE;IAEtB,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;IACxB,MAAM,EAAE,iBAAiB,EAAE,GAAG,qBAAY,CAAC,GAAG,EAAE,CAAC;IAEjD,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG,MAAM,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACpE,MAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;IAEjC,IAAI,GAAG,GAAsB,IAAI,CAAC;IAClC,KAAK,MAAM,MAAM,IAAI,WAAW,EAAE;QAChC,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC7B,IAAI,SAAS,EAAE;YACb,MAAM,IAAA,8BAAqB,EAAC,MAAM,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC;SAC9D;QACD,eAAM,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,EAAE,mBAAmB,CAAC,CAAC;QAC5D,eAAM,CAAC,KAAK,CAAC,EAAE,cAAc,EAAE,UAAU,EAAE,EAAE,iBAAiB,CAAC,CAAC;QAChE,IAAI;YACF,GAAG,GAAG,MAAM,IAAA,gBAAO,EAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SACzC;QAAC,OAAO,GAAG,EAAE;YACZ,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,aAAa,CAAC,CAAC;YACrC,IAAI,SAAS,EAAE;gBACb,MAAM,IAAA,8BAAqB,EAAC,MAAM,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC,KAAK,CAChE,CAAC,SAAgB,EAAE,EAAE;oBACnB,MAAM,OAAO,GAAW,GAAG,CAAC,OAAO,CAAC;oBACpC,MAAM,IAAI,KAAK,CACb,WAAW,SAAS,CAAC,OAAO,wBAAwB,OAAO,GAAG,CAC/D,CAAC;gBACJ,CAAC,CACF,CAAC;aACH;YACD,IAAI,GAAG,CAAC,MAAM,KAAK,SAAS,EAAE;gBAC5B,eAAM,CAAC,KAAK,CACV,EAAE,GAAG,EAAE,EACP,uDAAuD,CACxD,CAAC;gBACF,MAAM,IAAI,KAAK,CAAC,gCAAe,CAAC,CAAC;aAClC;YACD,MAAM,GAAG,CAAC;SACX;QACD,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC;QACtD,IAAI,GAAG,EAAE;YACP,eAAM,CAAC,KAAK,CACV;gBACE,GAAG,EAAE,MAAM;gBACX,UAAU;gBACV,MAAM,EAAE,GAAG,CAAC,MAAM;gBAClB,MAAM,EAAE,GAAG,CAAC,MAAM;aACnB,EACD,gBAAgB,CACjB,CAAC;SACH;KACF;IAED,OAAO,GAAG,CAAC;AACb,CAAC;AAxDD,oBAwDC","sourcesContent":["import type { ExecOptions as ChildProcessExecOptions } from 'child_process';\nimport { dirname, join } from 'upath';\nimport { GlobalConfig } from '../../config/global';\nimport { TEMPORARY_ERROR } from '../../constants/error-messages';\nimport { logger } from '../../logger';\nimport { generateInstallCommands } from './buildpack';\nimport {\n  DockerOptions,\n  ExecResult,\n  Opt,\n  RawExecOptions,\n  rawExec,\n} from './common';\nimport { generateDockerCommand, removeDockerContainer } from './docker';\nimport { getChildProcessEnv } from './env';\nimport type { ToolConstraint } from './types';\n\ntype ExtraEnv<T = unknown> = Record<string, T>;\n\nexport interface ExecOptions extends ChildProcessExecOptions {\n  cwdFile?: string;\n  extraEnv?: Opt<ExtraEnv>;\n  docker?: Opt<DockerOptions>;\n  toolConstraints?: Opt<ToolConstraint[]>;\n}\n\nfunction getChildEnv({\n  extraEnv = {},\n  env: forcedEnv = {},\n}: ExecOptions): ExtraEnv<string> {\n  const globalConfigEnv = GlobalConfig.get('customEnvVariables');\n\n  const inheritedKeys = Object.entries(extraEnv).reduce(\n    (acc, [key, val]) =>\n      val === null || val === undefined ? acc : [...acc, key],\n    []\n  );\n  const parentEnv = getChildProcessEnv(inheritedKeys);\n  const childEnv = Object.entries({\n    ...extraEnv,\n    ...parentEnv,\n    ...globalConfigEnv,\n    ...forcedEnv,\n  }).reduce(\n    (acc, [key, val]) =>\n      val === null || val === undefined\n        ? acc\n        : { ...acc, [key]: val.toString() },\n    {}\n  );\n  return childEnv;\n}\n\nfunction dockerEnvVars(\n  extraEnv: ExtraEnv,\n  childEnv: ExtraEnv<string>\n): string[] {\n  const extraEnvKeys = Object.keys(extraEnv || {});\n  return extraEnvKeys.filter(\n    (key) => typeof childEnv[key] === 'string' && childEnv[key].length > 0\n  );\n}\n\nfunction getCwd({ cwd, cwdFile }: ExecOptions): string {\n  const defaultCwd = GlobalConfig.get('localDir');\n  const paramCwd = cwdFile ? join(defaultCwd, dirname(cwdFile)) : cwd;\n  return paramCwd || defaultCwd;\n}\n\nfunction getRawExecOptions(opts: ExecOptions): RawExecOptions {\n  const defaultExecutionTimeout = GlobalConfig.get('executionTimeout');\n  const execOptions: ExecOptions = { ...opts };\n  delete execOptions.extraEnv;\n  delete execOptions.docker;\n  delete execOptions.cwdFile;\n  delete execOptions.toolConstraints;\n\n  const childEnv = getChildEnv(opts);\n  const cwd = getCwd(opts);\n  const rawExecOptions: RawExecOptions = {\n    encoding: 'utf-8',\n    ...execOptions,\n    env: childEnv,\n    cwd,\n  };\n  // Set default timeout config.executionTimeout if specified; othrwise to 15 minutes\n  if (!rawExecOptions.timeout) {\n    if (defaultExecutionTimeout) {\n      rawExecOptions.timeout = defaultExecutionTimeout * 60 * 1000;\n    } else {\n      rawExecOptions.timeout = 15 * 60 * 1000;\n    }\n  }\n\n  // Set default max buffer size to 10MB\n  rawExecOptions.maxBuffer = rawExecOptions.maxBuffer || 10 * 1024 * 1024;\n  return rawExecOptions;\n}\n\nfunction isDocker({ docker }: ExecOptions): boolean {\n  const { binarySource } = GlobalConfig.get();\n  return binarySource === 'docker' && !!docker;\n}\n\ninterface RawExecArguments {\n  rawCommands: string[];\n  rawOptions: RawExecOptions;\n}\n\nasync function prepareRawExec(\n  cmd: string | string[],\n  opts: ExecOptions = {}\n): Promise<RawExecArguments> {\n  const { docker } = opts;\n  const { customEnvVariables } = GlobalConfig.get();\n\n  const rawOptions = getRawExecOptions(opts);\n\n  let rawCommands = typeof cmd === 'string' ? [cmd] : cmd;\n\n  if (isDocker(opts)) {\n    logger.debug('Using docker to execute');\n    const extraEnv = { ...opts.extraEnv, ...customEnvVariables };\n    const childEnv = getChildEnv(opts);\n    const envVars = dockerEnvVars(extraEnv, childEnv);\n    const cwd = getCwd(opts);\n    const dockerOptions: DockerOptions = { ...docker, cwd, envVars };\n    dockerOptions.preCommands = [\n      ...(await generateInstallCommands(opts.toolConstraints)),\n      ...(dockerOptions.preCommands || []),\n    ];\n    const dockerCommand = await generateDockerCommand(\n      rawCommands,\n      dockerOptions\n    );\n    rawCommands = [dockerCommand];\n  }\n\n  return { rawCommands, rawOptions };\n}\n\nexport async function exec(\n  cmd: string | string[],\n  opts: ExecOptions = {}\n): Promise<ExecResult> {\n  const { docker } = opts;\n  const { dockerChildPrefix } = GlobalConfig.get();\n\n  const { rawCommands, rawOptions } = await prepareRawExec(cmd, opts);\n  const useDocker = isDocker(opts);\n\n  let res: ExecResult | null = null;\n  for (const rawCmd of rawCommands) {\n    const startTime = Date.now();\n    if (useDocker) {\n      await removeDockerContainer(docker.image, dockerChildPrefix);\n    }\n    logger.debug({ command: rawCommands }, 'Executing command');\n    logger.trace({ commandOptions: rawOptions }, 'Command options');\n    try {\n      res = await rawExec(rawCmd, rawOptions);\n    } catch (err) {\n      logger.debug({ err }, 'rawExec err');\n      if (useDocker) {\n        await removeDockerContainer(docker.image, dockerChildPrefix).catch(\n          (removeErr: Error) => {\n            const message: string = err.message;\n            throw new Error(\n              `Error: \"${removeErr.message}\" - Original Error: \"${message}\"`\n            );\n          }\n        );\n      }\n      if (err.signal === `SIGTERM`) {\n        logger.debug(\n          { err },\n          'exec interrupted by SIGTERM - run needs to be aborted'\n        );\n        throw new Error(TEMPORARY_ERROR);\n      }\n      throw err;\n    }\n    const durationMs = Math.round(Date.now() - startTime);\n    if (res) {\n      logger.debug(\n        {\n          cmd: rawCmd,\n          durationMs,\n          stdout: res.stdout,\n          stderr: res.stderr,\n        },\n        'exec completed'\n      );\n    }\n  }\n\n  return res;\n}\n"]}