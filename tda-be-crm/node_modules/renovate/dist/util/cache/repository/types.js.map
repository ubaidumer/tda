{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../lib/util/cache/repository/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { PackageFile } from '../../../manager/types';\nimport type { RepoInitConfig } from '../../../workers/repository/init/types';\n\nexport interface BaseBranchCache {\n  sha: string; // branch commit sha\n  configHash: string; // object hash of config\n  packageFiles: Record<string, PackageFile[]>; // extract result\n}\n\nexport interface BranchUpgradeCache {\n  currentDigest?: string;\n  currentValue?: string;\n  datasource?: string;\n  depName?: string;\n  fixedVersion?: string;\n  currentVersion?: string;\n  lookupName?: string;\n  newDigest?: string;\n  newValue?: string;\n  newVersion?: string;\n  sourceUrl?: string;\n}\n\nexport interface BranchCache {\n  automerge: boolean;\n  branchName: string;\n  isModified: boolean;\n  prNo: number | null;\n  sha: string | null;\n  parentSha: string | null;\n  upgrades: BranchUpgradeCache[];\n}\n\nexport interface Cache {\n  configFileName?: string;\n  semanticCommits?: 'enabled' | 'disabled';\n  branches?: BranchCache[];\n  repository?: string;\n  revision?: number;\n  init?: RepoInitConfig;\n  scan?: Record<string, BaseBranchCache>;\n  lastPlatformAutomergeFailure?: string;\n}\n"]}