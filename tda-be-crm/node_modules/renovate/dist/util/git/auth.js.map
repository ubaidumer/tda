{"version":3,"file":"auth.js","sourceRoot":"","sources":["../../../lib/util/git/auth.ts"],"names":[],"mappings":";;;AAAA,yCAAsC;AACtC,+BAAmC;AAEnC;;;GAGG;AACH,SAAgB,uCAAuC,CACrD,MAAc,EACd,KAAa,EACb,oBAAwC;IAExC,iGAAiG;IACjG,MAAM,yBAAyB,GAC7B,CAAA,oBAAoB,aAApB,oBAAoB,uBAApB,oBAAoB,CAAE,gBAAgB,KAAI,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;IACzE,IAAI,cAAc,GAAG,CAAC,CAAC;IACvB,IAAI,yBAAyB,EAAE;QAC7B,mGAAmG;QACnG,cAAc,GAAG,QAAQ,CAAC,yBAAyB,EAAE,EAAE,CAAC,CAAC;QACzD,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE;YAChC,eAAM,CAAC,IAAI,CACT,oFAAoF,OAAO,CAAC,GAAG,CAAC,gBAAgB,gBAAgB,CACjI,CAAC;YACF,cAAc,GAAG,CAAC,CAAC;SACpB;KACF;IAED,MAAM,eAAe,GAAG,IAAA,gBAAU,EAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAElD,0GAA0G;IAC1G,gFAAgF;IAChF,4DAA4D;IAC5D,MAAM,0BAA0B,GAAG;QACjC,GAAG,oBAAoB;QACvB,CAAC,kBAAkB,cAAc,EAAE,CAAC,EAAE,OAAO,eAAe,YAAY;QACxE,CAAC,oBAAoB,cAAc,EAAE,CAAC,EAAE,MAAM;QAC9C,gBAAgB,EAAE,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE;KAClD,CAAC;IAEF,OAAO,0BAA0B,CAAC;AACpC,CAAC;AAjCD,0FAiCC","sourcesContent":["import { logger } from '../../logger';\nimport { getHttpUrl } from './url';\n\n/**\n * Add authorization to a Git Url and returns a new environment variables object\n * @returns a new NodeJS.ProcessEnv object without modifying any input parameters\n */\nexport function getGitAuthenticatedEnvironmentVariables(\n  gitUrl: string,\n  token: string,\n  environmentVariables?: NodeJS.ProcessEnv\n): NodeJS.ProcessEnv {\n  // check if the environmentVariables already contain a GIT_CONFIG_COUNT or if the process has one\n  const gitConfigCountEnvVariable =\n    environmentVariables?.GIT_CONFIG_COUNT || process.env.GIT_CONFIG_COUNT;\n  let gitConfigCount = 0;\n  if (gitConfigCountEnvVariable) {\n    // passthrough the gitConfigCountEnvVariable environment variable as start value of the index count\n    gitConfigCount = parseInt(gitConfigCountEnvVariable, 10);\n    if (Number.isNaN(gitConfigCount)) {\n      logger.warn(\n        `Found GIT_CONFIG_COUNT env variable, but couldn't parse the value to an integer: ${process.env.GIT_CONFIG_COUNT}. Ignoring it.`\n      );\n      gitConfigCount = 0;\n    }\n  }\n\n  const gitUrlWithToken = getHttpUrl(gitUrl, token);\n\n  // create a shallow copy of the environmentVariables as base so we don't modify the input parameter object\n  // add the two new config key and value to the returnEnvironmentVariables object\n  // increase the CONFIG_COUNT by one and add it to the object\n  const returnEnvironmentVariables = {\n    ...environmentVariables,\n    [`GIT_CONFIG_KEY_${gitConfigCount}`]: `url.${gitUrlWithToken}.insteadOf`,\n    [`GIT_CONFIG_VALUE_${gitConfigCount}`]: gitUrl,\n    GIT_CONFIG_COUNT: (gitConfigCount + 1).toString(),\n  };\n\n  return returnEnvironmentVariables;\n}\n"]}