{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../lib/util/git/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { GitOptions } from '../../types/git';\n\nexport type { DiffResult, StatusResult } from 'simple-git';\n\nexport interface GitAuthor {\n  name?: string;\n  address?: string;\n}\n\nexport type GitNoVerifyOption = 'commit' | 'push';\n\nexport type CommitSha = string;\n\nexport interface StorageConfig {\n  currentBranch?: string;\n  url: string;\n  extraCloneOpts?: GitOptions;\n  cloneSubmodules?: boolean;\n  fullClone?: boolean;\n}\n\nexport interface LocalConfig extends StorageConfig {\n  additionalBranches: string[];\n  currentBranch: string;\n  currentBranchSha: string;\n  branchCommits: Record<string, CommitSha>;\n  branchIsModified: Record<string, boolean>;\n  ignoredAuthors: string[];\n  gitAuthorName?: string;\n  gitAuthorEmail?: string;\n}\n\n/**\n * File to commit\n */\nexport interface File {\n  /**\n   * Relative file path\n   */\n  name: string;\n\n  /**\n   * file contents\n   */\n  contents: string | Buffer;\n\n  /**\n   * the executable bit\n   */\n  executable?: boolean;\n}\n\nexport type CommitFilesConfig = {\n  branchName: string;\n  files: File[];\n  message: string;\n  force?: boolean;\n};\n"]}