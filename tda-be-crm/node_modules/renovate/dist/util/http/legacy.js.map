{"version":3,"file":"legacy.js","sourceRoot":"","sources":["../../../lib/util/http/legacy.ts"],"names":[],"mappings":";;AAAA,uBAAuB;AACvB,gCAAkC;AAClC,mCAAoC;AAEpC,+CAA+C;AAE/C,MAAM,CAAC,cAAc,CAAC,iBAAS,CAAC,SAAS,EAAE,YAAY,EAAE;IACvD,GAAG,EAAE,SAAS,UAAU;;QACtB,OAAO,MAAA,IAAI,CAAC,QAAQ,0CAAE,UAAU,CAAC;IACnC,CAAC;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,cAAc,CAAC,iBAAS,CAAC,SAAS,EAAE,MAAM,EAAE;IACjD,GAAG,EAAE,SAAS,IAAI;;QAChB,OAAO,MAAA,IAAI,CAAC,QAAQ,0CAAE,IAAI,CAAC;IAC7B,CAAC;IACD,GAAG,EAAE,SAAS,IAAI,CAAkB,KAAc;QAChD,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,KAAK,CAAC;SAC5B;IACH,CAAC;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,cAAc,CAAC,iBAAS,CAAC,SAAS,EAAE,SAAS,EAAE;IACpD,GAAG,EAAE,SAAS,OAAO;;QACnB,OAAO,MAAA,IAAI,CAAC,QAAQ,0CAAE,OAAO,CAAC;IAChC,CAAC;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,cAAc,CAAC,iBAAS,CAAC,SAAS,EAAE,KAAK,EAAE;IAChD,GAAG,EAAE,SAAS,GAAG;;QACf,OAAO,MAAA,IAAI,CAAC,QAAQ,0CAAE,GAAG,CAAC;IAC5B,CAAC;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,cAAc,CAAC,iBAAS,CAAC,SAAS,EAAE,MAAM,EAAE;IACjD,GAAG,EAAE,SAAS,GAAG;;QACf,MAAM,EAAE,IAAI,EAAE,GAAG,MAAA,IAAA,cAAQ,EAAC,MAAA,IAAI,CAAC,QAAQ,0CAAE,GAAG,CAAC,mCAAI,EAAE,CAAC;QACpD,OAAO,IAAI,CAAC;IACd,CAAC;CACF,CAAC,CAAC","sourcesContent":["// istanbul ignore file\nimport { parseUrl } from '../url';\nimport { HttpError } from './types';\n\n// TODO: remove when code is refactored (#9651)\n\nObject.defineProperty(HttpError.prototype, 'statusCode', {\n  get: function statusCode(this: HttpError) {\n    return this.response?.statusCode;\n  },\n});\n\nObject.defineProperty(HttpError.prototype, 'body', {\n  get: function body(this: HttpError): unknown {\n    return this.response?.body;\n  },\n  set: function body(this: HttpError, value: unknown): void {\n    if (this.response) {\n      this.response.body = value;\n    }\n  },\n});\n\nObject.defineProperty(HttpError.prototype, 'headers', {\n  get: function headers(this: HttpError) {\n    return this.response?.headers;\n  },\n});\n\nObject.defineProperty(HttpError.prototype, 'url', {\n  get: function url(this: HttpError) {\n    return this.response?.url;\n  },\n});\n\nObject.defineProperty(HttpError.prototype, 'host', {\n  get: function url(this: HttpError) {\n    const { host } = parseUrl(this.response?.url) ?? {};\n    return host;\n  },\n});\n\nexport type GotLegacyError<E = unknown, T = unknown> = HttpError & {\n  statusCode?: number;\n  body: {\n    message?: string;\n    errors?: E[];\n  };\n  headers?: Record<string, T>;\n};\n"]}