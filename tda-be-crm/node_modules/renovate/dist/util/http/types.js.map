{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../lib/util/http/types.ts"],"names":[],"mappings":";;;AAAA,6BAIa;AAsBa,0FAvBR,kBAAa,OAuBI","sourcesContent":["import {\n  OptionsOfBufferResponseBody,\n  OptionsOfJSONResponseBody,\n  RequestError as RequestError_,\n} from 'got';\n\nexport type GotContextOptions = {\n  authType?: string;\n} & Record<string, unknown>;\n\n// TODO: Move options to context\nexport type GotOptions = GotBufferOptions | GotJSONOptions;\nexport type GotBufferOptions = OptionsOfBufferResponseBody & GotExtraOptions;\nexport type GotJSONOptions = OptionsOfJSONResponseBody & GotExtraOptions;\n\nexport type GotExtraOptions = {\n  abortOnError?: boolean;\n  abortIgnoreStatusCodes?: number[];\n  token?: string;\n  hostType?: string;\n  enabled?: boolean;\n  useCache?: boolean;\n  noAuth?: boolean;\n  context?: GotContextOptions;\n};\n\nexport { RequestError_ as HttpError };\n\nexport interface RequestStats {\n  method: string;\n  url: string;\n  duration: number;\n  queueDuration: number;\n}\n\nexport type OutgoingHttpHeaders = Record<string, string | string[] | undefined>;\n"]}