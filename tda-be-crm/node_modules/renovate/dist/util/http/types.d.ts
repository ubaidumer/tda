import { OptionsOfBufferResponseBody, OptionsOfJSONResponseBody, RequestError as RequestError_ } from 'got';
export declare type GotContextOptions = {
    authType?: string;
} & Record<string, unknown>;
export declare type GotOptions = GotBufferOptions | GotJSONOptions;
export declare type GotBufferOptions = OptionsOfBufferResponseBody & GotExtraOptions;
export declare type GotJSONOptions = OptionsOfJSONResponseBody & GotExtraOptions;
export declare type GotExtraOptions = {
    abortOnError?: boolean;
    abortIgnoreStatusCodes?: number[];
    token?: string;
    hostType?: string;
    enabled?: boolean;
    useCache?: boolean;
    noAuth?: boolean;
    context?: GotContextOptions;
};
export { RequestError_ as HttpError };
export interface RequestStats {
    method: string;
    url: string;
    duration: number;
    queueDuration: number;
}
export declare type OutgoingHttpHeaders = Record<string, string | string[] | undefined>;
