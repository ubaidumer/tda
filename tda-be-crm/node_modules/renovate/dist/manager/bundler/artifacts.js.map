{"version":3,"file":"artifacts.js","sourceRoot":"","sources":["../../../lib/manager/bundler/artifacts.ts"],"names":[],"mappings":";;;;AAAA,0DAA8C;AAC9C,iCAA8B;AAC9B,mEAGwC;AACxC,yCAAsC;AAEtC,+EAAoD;AACpD,0CAAoD;AACpD,sCAMuB;AACvB,wCAA+C;AAC/C,4CAAyC;AACzC,kDAA0C;AAC1C,gDAAgD;AAEhD,6CAGsB;AAEtB,MAAM,wBAAwB,GAAG,SAAS,CAAC;AAE3C,KAAK,UAAU,iBAAiB,CAC9B,cAA8B;IAE9B,MAAM,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,cAAc,CAAC;IACnD,MAAM,EAAE,WAAW,GAAG,EAAE,EAAE,GAAG,MAAM,CAAC;IACpC,MAAM,EAAE,IAAI,EAAE,GAAG,WAAW,CAAC;IAE7B,IAAI,cAAsB,CAAC;IAC3B,IAAI,IAAI,EAAE;QACR,eAAM,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;QACjD,cAAc,GAAG,IAAI,CAAC;KACvB;SAAM;QACL,MAAM,eAAe,GAAG,IAAA,uBAAkB,EACxC,eAAe,EACf,eAAe,CAChB,CAAC;QACF,MAAM,sBAAsB,GAAG,MAAM,IAAA,kBAAa,EAAC,eAAe,EAAE,MAAM,CAAC,CAAC;QAC5E,IAAI,sBAAsB,EAAE;YAC1B,eAAM,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;YAC9D,cAAc,GAAG,sBAAsB;iBACpC,OAAO,CAAC,IAAA,aAAK,EAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;iBAC5B,OAAO,CAAC,IAAA,aAAK,EAAC,KAAK,CAAC,EAAE,EAAE,CAAC;iBACzB,IAAI,EAAE,CAAC;SACX;KACF;IACD,OAAO,cAAc,CAAC;AACxB,CAAC;AAED,SAAS,uBAAuB,CAAC,QAAkB;IACjD,IAAI,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QACvC,OAAO,EAAE,CAAC;KACX;IACD,MAAM,OAAO,GAAG,wBAAwB,CAAC,MAAM,CAC7C,QAAQ,CAAC,YAAY;SAClB,KAAK,CAAC,GAAG,CAAC;SACV,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;SACjC,IAAI,CAAC,IAAI,CAAC,CACd,CAAC;IACF,OAAO;QACL,CAAC,OAAO,CAAC,EAAE,GAAG,IAAA,yCAA4B,EAAC,QAAQ,CAAC,EAAE;KACvD,CAAC;AACJ,CAAC;AAEM,KAAK,UAAU,eAAe,CACnC,cAA8B;;IAE9B,MAAM,EAAE,eAAe,EAAE,WAAW,EAAE,qBAAqB,EAAE,MAAM,EAAE,GACnE,cAAc,CAAC;IACjB,MAAM,EAAE,WAAW,GAAG,EAAE,EAAE,GAAG,MAAM,CAAC;IACpC,eAAM,CAAC,KAAK,CAAC,2BAA2B,eAAe,GAAG,CAAC,CAAC;IAC5D,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAS,uBAAuB,CAAC,CAAC;IACpE,qBAAqB;IACrB,IAAI,aAAa,EAAE;QACjB,eAAM,CAAC,KAAK,CAAC,2DAA2D,CAAC,CAAC;QAC1E,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;KAChC;IACD,MAAM,YAAY,GAAG,GAAG,eAAe,OAAO,CAAC;IAC/C,MAAM,uBAAuB,GAAG,MAAM,IAAA,kBAAa,EAAC,YAAY,EAAE,MAAM,CAAC,CAAC;IAC1E,IAAI,CAAC,uBAAuB,EAAE;QAC5B,eAAM,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;QACtC,OAAO,IAAI,CAAC;KACb;IAED,IAAI,MAAM,CAAC,qBAAqB,EAAE;QAChC,MAAM,IAAA,oBAAe,EAAC,YAAY,CAAC,CAAC;KACrC;IAED,IAAI;QACF,MAAM,IAAA,mBAAc,EAAC,eAAe,EAAE,qBAAqB,CAAC,CAAC;QAE7D,IAAI,GAAG,CAAC;QAER,IAAI,MAAM,CAAC,qBAAqB,EAAE;YAChC,GAAG,GAAG,aAAa,CAAC;SACrB;aAAM;YACL,GAAG,GAAG,wBAAwB,WAAW;iBACtC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC;iBACzB,GAAG,CAAC,aAAK,CAAC;iBACV,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;SAChB;QAED,IAAI,cAAc,GAAG,EAAE,CAAC;QACxB,MAAM,EAAE,OAAO,EAAE,GAAG,WAAW,CAAC;QAChC,IAAI,OAAO,EAAE;YACX,IAAI,IAAA,cAAO,EAAC,OAAO,CAAC,EAAE;gBACpB,eAAM,CAAC,KAAK,CAAC,EAAE,cAAc,EAAE,OAAO,EAAE,EAAE,uBAAuB,CAAC,CAAC;gBACnE,cAAc,GAAG,OAAO,IAAA,aAAK,EAAC,OAAO,CAAC,EAAE,CAAC;aAC1C;iBAAM;gBACL,eAAM,CAAC,IAAI,CAAC,EAAE,cAAc,EAAE,OAAO,EAAE,EAAE,yBAAyB,CAAC,CAAC;aACrE;SACF;aAAM;YACL,eAAM,CAAC,KAAK,CAAC,uDAAuD,CAAC,CAAC;SACvE;QACD,MAAM,WAAW,GAAG;YAClB,gBAAgB;YAChB,sBAAsB,cAAc,EAAE;SACvC,CAAC;QAEF,MAAM,gBAAgB,GAAG,IAAA,mCAAsB,EAAC;YAC9C,QAAQ,EAAE,UAAU;SACrB,CAAC,CAAC;QAEH,MAAM,yBAAyB,GAAG,gBAAgB,CAAC,MAAM,CACvD,CAAC,SAAS,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;YACxB,GAAG,SAAS;YACZ,GAAG,uBAAuB,CAAC,QAAQ,CAAC;SACrC,CAAC,EACF,EAA4B,CAC7B,CAAC;QAEF,6CAA6C;QAC7C,wEAAwE;QACxE,0BAA0B;QAC1B,MAAM,4BAA4B,GAAa,gBAAgB,CAAC,MAAM,CACpE,CAAC,YAAsB,EAAE,QAAQ,EAAE,EAAE;YACnC,IAAI,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;gBACvC,MAAM,KAAK,GAAG,IAAA,yCAA4B,EAAC,QAAQ,CAAC,CAAC;gBACrD,YAAY,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,YAAY,IAAI,KAAK,EAAE,CAAC,CAAC;gBACvD,8BAA8B;gBAC9B,IAAA,cAAG,EAAC,KAAK,CAAC,CAAC;aACZ;YACD,OAAO,YAAY,CAAC;QACtB,CAAC,EACD,EAAE,CACH,CAAC;QAEF,6DAA6D;QAC7D,IACE,4BAA4B;YAC5B,OAAO;YACP,IAAA,cAAO,EAAC,OAAO,CAAC;YAChB,IAAA,gBAAE,EAAC,OAAO,EAAE,GAAG,CAAC,EAChB;YACA,WAAW,CAAC,IAAI,CACd,GAAG,4BAA4B,CAAC,GAAG,CACjC,CAAC,WAAW,EAAE,EAAE,CAAC,0BAA0B,WAAW,EAAE,CACzD,CACF,CAAC;SACH;aAAM,IAAI,4BAA4B,EAAE;YACvC,WAAW,CAAC,IAAI,CACd,GAAG,4BAA4B,CAAC,GAAG,CACjC,CAAC,WAAW,EAAE,EAAE,CAAC,8BAA8B,WAAW,EAAE,CAC7D,CACF,CAAC;SACH;QAED,MAAM,WAAW,GAAgB;YAC/B,OAAO,EAAE,eAAe;YACxB,QAAQ,EAAE;gBACR,GAAG,yBAAyB;gBAC5B,QAAQ,EAAE,MAAM,IAAA,mBAAc,EAAC,SAAS,CAAC;aAC1C;YACD,MAAM,EAAE;gBACN,KAAK,EAAE,MAAM;gBACb,SAAS,EAAE,MAAM;gBACjB,aAAa,EAAE,MAAM,iBAAiB,CAAC,cAAc,CAAC;gBACtD,WAAW;aACZ;SACF,CAAC;QACF,MAAM,IAAA,WAAI,EAAC,GAAG,EAAE,WAAW,CAAC,CAAC;QAE7B,MAAM,MAAM,GAAG,MAAM,IAAA,mBAAa,GAAE,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;YAC3C,OAAO,IAAI,CAAC;SACb;QACD,eAAM,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;QAC/C,MAAM,eAAe,GAAG,MAAM,IAAA,kBAAa,EAAC,YAAY,CAAC,CAAC;QAC1D,OAAO;YACL;gBACE,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,QAAQ,EAAE,eAAe;iBAC1B;aACF;SACF,CAAC;KACH;IAAC,OAAO,GAAG,EAAE,0BAA0B,CAAC;QACvC,IAAI,GAAG,CAAC,OAAO,KAAK,gCAAe,EAAE;YACnC,MAAM,GAAG,CAAC;SACX;QACD,MAAM,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;QAC9D,IACE,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,+BAA+B,CAAC;YACrD,MAAM,CAAC,QAAQ,CAAC,qCAAqC,CAAC,EACtD;YACA,OAAO;gBACL;oBACE,aAAa,EAAE;wBACb,QAAQ,EAAE,YAAY;wBACtB,MAAM,EAAE,MAAM;qBACf;iBACF;aACF,CAAC;SACH;QACD,IACE,CAAA,MAAA,GAAG,CAAC,MAAM,0CAAE,QAAQ,CAAC,2CAA2C,CAAC;aACjE,MAAA,GAAG,CAAC,MAAM,0CAAE,QAAQ,CAAC,4BAA4B,CAAC,CAAA;aAClD,MAAA,GAAG,CAAC,MAAM,0CAAE,QAAQ,CAClB,qDAAqD,CACtD,CAAA,EACD;YACA,eAAM,CAAC,KAAK,CACV,EAAE,GAAG,EAAE,EACP,yEAAyE,CAC1E,CAAC;YACF,gFAAgF;YAChF,QAAQ,CAAC,GAAG,CAAC,uBAAuB,EAAE,4CAA2B,CAAC,CAAC;YACnE,MAAM,IAAI,KAAK,CAAC,4CAA2B,CAAC,CAAC;SAC9C;QACD,MAAM,cAAc,GAAG,IAAA,aAAK,EAAC,0BAA0B,EAAE,GAAG,CAAC,CAAC;QAC9D,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE;YACjE,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,6BAA6B,CAAC,CAAC;YACrD,MAAM,cAAc,GAAG,EAAE,CAAC;YAC1B,IAAI,YAAY,CAAC;YACjB,GAAG;gBACD,YAAY,GAAG,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC3C,IAAI,YAAY,EAAE;oBAChB,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;iBACzD;aACF,QAAQ,YAAY,EAAE;YACvB,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;gBAChE,eAAM,CAAC,KAAK,CACV,EAAE,cAAc,EAAE,WAAW,EAAE,EAC/B,sDAAsD,CACvD,CAAC;gBACF,MAAM,cAAc,GAAG;oBACrB,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,WAAW,EAAE,GAAG,cAAc,CAAC,CAAC;iBAChD,CAAC;gBACF,OAAO,eAAe,CAAC;oBACrB,eAAe;oBACf,WAAW,EAAE,cAAc;oBAC3B,qBAAqB;oBACrB,MAAM;iBACP,CAAC,CAAC;aACJ;YACD,eAAM,CAAC,KAAK,CACV,EAAE,GAAG,EAAE,EACP,yDAAyD,CAC1D,CAAC;SACH;aAAM;YACL,eAAM,CAAC,IAAI,CACT,EAAE,GAAG,EAAE,EACP,qDAAqD,CACtD,CAAC;SACH;QACD,OAAO;YACL;gBACE,aAAa,EAAE;oBACb,QAAQ,EAAE,YAAY;oBACtB,MAAM,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;iBACvD;aACF;SACF,CAAC;KACH;AACH,CAAC;AAlND,0CAkNC","sourcesContent":["import { lt } from '@renovatebot/ruby-semver';\nimport { quote } from 'shlex';\nimport {\n  BUNDLER_INVALID_CREDENTIALS,\n  TEMPORARY_ERROR,\n} from '../../constants/error-messages';\nimport { logger } from '../../logger';\nimport { HostRule } from '../../types';\nimport * as memCache from '../../util/cache/memory';\nimport { ExecOptions, exec } from '../../util/exec';\nimport {\n  deleteLocalFile,\n  ensureCacheDir,\n  getSiblingFileName,\n  readLocalFile,\n  writeLocalFile,\n} from '../../util/fs';\nimport { getRepoStatus } from '../../util/git';\nimport { regEx } from '../../util/regex';\nimport { add } from '../../util/sanitize';\nimport { isValid } from '../../versioning/ruby';\nimport type { UpdateArtifact, UpdateArtifactsResult } from '../types';\nimport {\n  findAllAuthenticatable,\n  getAuthenticationHeaderValue,\n} from './host-rules';\n\nconst hostConfigVariablePrefix = 'BUNDLE_';\n\nasync function getRubyConstraint(\n  updateArtifact: UpdateArtifact\n): Promise<string> {\n  const { packageFileName, config } = updateArtifact;\n  const { constraints = {} } = config;\n  const { ruby } = constraints;\n\n  let rubyConstraint: string;\n  if (ruby) {\n    logger.debug('Using rubyConstraint from config');\n    rubyConstraint = ruby;\n  } else {\n    const rubyVersionFile = getSiblingFileName(\n      packageFileName,\n      '.ruby-version'\n    );\n    const rubyVersionFileContent = await readLocalFile(rubyVersionFile, 'utf8');\n    if (rubyVersionFileContent) {\n      logger.debug('Using ruby version specified in .ruby-version');\n      rubyConstraint = rubyVersionFileContent\n        .replace(regEx(/^ruby-/), '')\n        .replace(regEx(/\\n/g), '')\n        .trim();\n    }\n  }\n  return rubyConstraint;\n}\n\nfunction buildBundleHostVariable(hostRule: HostRule): Record<string, string> {\n  if (hostRule.resolvedHost.includes('-')) {\n    return {};\n  }\n  const varName = hostConfigVariablePrefix.concat(\n    hostRule.resolvedHost\n      .split('.')\n      .map((term) => term.toUpperCase())\n      .join('__')\n  );\n  return {\n    [varName]: `${getAuthenticationHeaderValue(hostRule)}`,\n  };\n}\n\nexport async function updateArtifacts(\n  updateArtifact: UpdateArtifact\n): Promise<UpdateArtifactsResult[] | null> {\n  const { packageFileName, updatedDeps, newPackageFileContent, config } =\n    updateArtifact;\n  const { constraints = {} } = config;\n  logger.debug(`bundler.updateArtifacts(${packageFileName})`);\n  const existingError = memCache.get<string>('bundlerArtifactsError');\n  // istanbul ignore if\n  if (existingError) {\n    logger.debug('Aborting Bundler artifacts due to previous failed attempt');\n    throw new Error(existingError);\n  }\n  const lockFileName = `${packageFileName}.lock`;\n  const existingLockFileContent = await readLocalFile(lockFileName, 'utf8');\n  if (!existingLockFileContent) {\n    logger.debug('No Gemfile.lock found');\n    return null;\n  }\n\n  if (config.isLockFileMaintenance) {\n    await deleteLocalFile(lockFileName);\n  }\n\n  try {\n    await writeLocalFile(packageFileName, newPackageFileContent);\n\n    let cmd;\n\n    if (config.isLockFileMaintenance) {\n      cmd = 'bundle lock';\n    } else {\n      cmd = `bundle lock --update ${updatedDeps\n        .map((dep) => dep.depName)\n        .map(quote)\n        .join(' ')}`;\n    }\n\n    let bundlerVersion = '';\n    const { bundler } = constraints;\n    if (bundler) {\n      if (isValid(bundler)) {\n        logger.debug({ bundlerVersion: bundler }, 'Found bundler version');\n        bundlerVersion = ` -v ${quote(bundler)}`;\n      } else {\n        logger.warn({ bundlerVersion: bundler }, 'Invalid bundler version');\n      }\n    } else {\n      logger.debug('No bundler version constraint found - will use latest');\n    }\n    const preCommands = [\n      'ruby --version',\n      `gem install bundler${bundlerVersion}`,\n    ];\n\n    const bundlerHostRules = findAllAuthenticatable({\n      hostType: 'rubygems',\n    });\n\n    const bundlerHostRulesVariables = bundlerHostRules.reduce(\n      (variables, hostRule) => ({\n        ...variables,\n        ...buildBundleHostVariable(hostRule),\n      }),\n      {} as Record<string, string>\n    );\n\n    // Detect hosts with a hyphen '-' in the url.\n    // Those cannot be added with environment variables but need to be added\n    // with the bundler config\n    const bundlerHostRulesAuthCommands: string[] = bundlerHostRules.reduce(\n      (authCommands: string[], hostRule) => {\n        if (hostRule.resolvedHost.includes('-')) {\n          const creds = getAuthenticationHeaderValue(hostRule);\n          authCommands.push(`${hostRule.resolvedHost} ${creds}`);\n          // sanitize the authentication\n          add(creds);\n        }\n        return authCommands;\n      },\n      []\n    );\n\n    // Bundler < 2 has a different config option syntax than >= 2\n    if (\n      bundlerHostRulesAuthCommands &&\n      bundler &&\n      isValid(bundler) &&\n      lt(bundler, '2')\n    ) {\n      preCommands.push(\n        ...bundlerHostRulesAuthCommands.map(\n          (authCommand) => `bundler config --local ${authCommand}`\n        )\n      );\n    } else if (bundlerHostRulesAuthCommands) {\n      preCommands.push(\n        ...bundlerHostRulesAuthCommands.map(\n          (authCommand) => `bundler config set --local ${authCommand}`\n        )\n      );\n    }\n\n    const execOptions: ExecOptions = {\n      cwdFile: packageFileName,\n      extraEnv: {\n        ...bundlerHostRulesVariables,\n        GEM_HOME: await ensureCacheDir('bundler'),\n      },\n      docker: {\n        image: 'ruby',\n        tagScheme: 'ruby',\n        tagConstraint: await getRubyConstraint(updateArtifact),\n        preCommands,\n      },\n    };\n    await exec(cmd, execOptions);\n\n    const status = await getRepoStatus();\n    if (!status.modified.includes(lockFileName)) {\n      return null;\n    }\n    logger.debug('Returning updated Gemfile.lock');\n    const lockFileContent = await readLocalFile(lockFileName);\n    return [\n      {\n        file: {\n          name: lockFileName,\n          contents: lockFileContent,\n        },\n      },\n    ];\n  } catch (err) /* istanbul ignore next */ {\n    if (err.message === TEMPORARY_ERROR) {\n      throw err;\n    }\n    const output = `${String(err.stdout)}\\n${String(err.stderr)}`;\n    if (\n      err.message.includes('fatal: Could not parse object') ||\n      output.includes('but that version could not be found')\n    ) {\n      return [\n        {\n          artifactError: {\n            lockFile: lockFileName,\n            stderr: output,\n          },\n        },\n      ];\n    }\n    if (\n      err.stdout?.includes('Please supply credentials for this source') ||\n      err.stderr?.includes('Authentication is required') ||\n      err.stderr?.includes(\n        'Please make sure you have the correct access rights'\n      )\n    ) {\n      logger.debug(\n        { err },\n        'Gemfile.lock update failed due to missing credentials - skipping branch'\n      );\n      // Do not generate these PRs because we don't yet support Bundler authentication\n      memCache.set('bundlerArtifactsError', BUNDLER_INVALID_CREDENTIALS);\n      throw new Error(BUNDLER_INVALID_CREDENTIALS);\n    }\n    const resolveMatchRe = regEx('\\\\s+(.*) was resolved to', 'g');\n    if (output.match(resolveMatchRe) && !config.isLockFileMaintenance) {\n      logger.debug({ err }, 'Bundler has a resolve error');\n      const resolveMatches = [];\n      let resolveMatch;\n      do {\n        resolveMatch = resolveMatchRe.exec(output);\n        if (resolveMatch) {\n          resolveMatches.push(resolveMatch[1].split(' ').shift());\n        }\n      } while (resolveMatch);\n      if (resolveMatches.some((match) => !updatedDeps.includes(match))) {\n        logger.debug(\n          { resolveMatches, updatedDeps },\n          'Found new resolve matches - reattempting recursively'\n        );\n        const newUpdatedDeps = [\n          ...new Set([...updatedDeps, ...resolveMatches]),\n        ];\n        return updateArtifacts({\n          packageFileName,\n          updatedDeps: newUpdatedDeps,\n          newPackageFileContent,\n          config,\n        });\n      }\n      logger.debug(\n        { err },\n        'Gemfile.lock update failed due to incompatible packages'\n      );\n    } else {\n      logger.info(\n        { err },\n        'Gemfile.lock update failed due to an unknown reason'\n      );\n    }\n    return [\n      {\n        artifactError: {\n          lockFile: lockFileName,\n          stderr: `${String(err.stdout)}\\n${String(err.stderr)}`,\n        },\n      },\n    ];\n  }\n}\n"]}