{"version":3,"file":"monorepo.js","sourceRoot":"","sources":["../../../../lib/manager/npm/extract/monorepo.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { logger } from '../../../logger';\nimport { SkipReason } from '../../../types';\nimport { getSiblingFileName, getSubDirectory } from '../../../util/fs';\nimport type { PackageFile } from '../../types';\nimport { detectPnpmWorkspaces } from './pnpm';\nimport { matchesAnyPattern } from './utils';\n\nexport async function detectMonorepos(\n  packageFiles: Partial<PackageFile>[],\n  updateInternalDeps: boolean\n): Promise<void> {\n  await detectPnpmWorkspaces(packageFiles);\n  logger.debug('Detecting Lerna and Yarn Workspaces');\n  for (const p of packageFiles) {\n    const {\n      packageFile,\n      npmLock,\n      yarnLock,\n      npmrc,\n      managerData = {},\n      lernaClient,\n      lernaPackages,\n      yarnWorkspacesPackages,\n      skipInstalls,\n    } = p;\n    const { lernaJsonFile, yarnZeroInstall } = managerData;\n    const packages = yarnWorkspacesPackages || lernaPackages;\n    if (packages?.length) {\n      const internalPackagePatterns = (\n        is.array(packages) ? packages : [packages]\n      ).map((pattern) => getSiblingFileName(packageFile, pattern));\n      const internalPackageFiles = packageFiles.filter((sp) =>\n        matchesAnyPattern(\n          getSubDirectory(sp.packageFile),\n          internalPackagePatterns\n        )\n      );\n      const internalPackageNames = internalPackageFiles\n        .map((sp) => sp.packageJsonName)\n        .filter(Boolean);\n      if (!updateInternalDeps) {\n        p.deps?.forEach((dep) => {\n          if (internalPackageNames.includes(dep.depName)) {\n            dep.skipReason = SkipReason.InternalPackage;\n          }\n        });\n      }\n      for (const subPackage of internalPackageFiles) {\n        subPackage.managerData = subPackage.managerData || {};\n        subPackage.managerData.lernaJsonFile = lernaJsonFile;\n        subPackage.managerData.yarnZeroInstall = yarnZeroInstall;\n        subPackage.lernaClient = lernaClient;\n        subPackage.yarnLock = subPackage.yarnLock || yarnLock;\n        subPackage.npmLock = subPackage.npmLock || npmLock;\n        subPackage.skipInstalls = skipInstalls && subPackage.skipInstalls; // skip if both are true\n        if (subPackage.yarnLock) {\n          subPackage.hasYarnWorkspaces = !!yarnWorkspacesPackages;\n          subPackage.npmrc = subPackage.npmrc || npmrc;\n        }\n        if (!updateInternalDeps) {\n          subPackage.deps?.forEach((dep) => {\n            if (internalPackageNames.includes(dep.depName)) {\n              dep.skipReason = SkipReason.InternalPackage;\n            }\n          });\n        }\n      }\n    }\n  }\n}\n"]}