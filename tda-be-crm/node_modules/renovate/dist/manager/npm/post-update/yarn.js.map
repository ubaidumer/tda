{"version":3,"file":"yarn.js","sourceRoot":"","sources":["../../../../lib/manager/npm/post-update/yarn.ts"],"names":[],"mappings":";;;;AAAA,uEAAkC;AAClC,mCAAqD;AACrD,iCAA8B;AAC9B,iCAA6B;AAC7B,mDAAsD;AACtD,sEAG2C;AAC3C,iDAAsD;AACtD,4CAAyC;AACzC,mFAA8E;AAC9E,6CAAuD;AACvD,yCAAuE;AACvE,+CAA4C;AAE5C,iDAAmD;AAG5C,KAAK,UAAU,WAAW,CAC/B,GAAW;IAEX,IAAI,aAAa,GAAG,KAAK,CAAC;IAC1B,IAAI,QAAQ,GAAW,IAAI,CAAC;IAC5B,IAAI;QACF,MAAM,MAAM,GAAG,MAAM,IAAA,aAAQ,EAAC,GAAG,GAAG,UAAU,EAAE,MAAM,CAAC,CAAC;QACxD,IAAI,YAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YACrB,MAAM,UAAU,GAAG,MAAM;iBACtB,KAAK,CAAC,IAAI,CAAC;iBACX,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC,CAAC;YAC3D,aAAa,GAAG,CAAC,CAAC,UAAU,CAAC;YAC7B,MAAM,QAAQ,GAAG,MAAM;iBACpB,KAAK,CAAC,IAAI,CAAC;iBACX,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;YACjD,IAAI,QAAQ,EAAE;gBACZ,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAA,aAAK,EAAC,yBAAyB,CAAC,EAAE,IAAI,CAAC,CAAC;aACrE;YACD,MAAM,gBAAgB,GAAG,MAAM,IAAA,WAAM,EAAC,QAAQ,CAAC,CAAC;YAChD,IAAI,CAAC,gBAAgB,EAAE;gBACrB,MAAM,cAAc,GAAG,MAAM,CAAC,OAAO,CACnC,IAAA,aAAK,EAAC,yBAAyB,CAAC,EAChC,EAAE,CACH,CAAC;gBACF,MAAM,IAAA,cAAS,EAAC,GAAG,GAAG,UAAU,EAAE,cAAc,CAAC,CAAC;gBAClD,QAAQ,GAAG,IAAI,CAAC;aACjB;SACF;KACF;IAAC,OAAO,GAAG,EAAE,0BAA0B,CAAC;QACvC,YAAY;KACb;IACD,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,CAAC;AACrC,CAAC;AAhCD,kCAgCC;AAED,SAAgB,kBAAkB,CAChC,QAAQ,GAAG,2DAA2D;IAEtE,OAAO,0CAA0C,IAAA,aAAK,EAAC,QAAQ,CAAC,EAAE,CAAC;AACrE,CAAC;AAJD,gDAIC;AAED,SAAgB,YAAY,CAAC,OAAgB;IAC3C,OAAO,OAAO,CAAC,OAAO,KAAK,gBAAgB,IAAI,OAAO,CAAC,OAAO,KAAK,MAAM,CAAC;AAC5E,CAAC;AAFD,oCAEC;AAEM,KAAK,UAAU,gBAAgB,CACpC,GAAW,EACX,GAAsB,EACtB,SAA2B,EAAE,EAC7B,WAAsB,EAAE;;IAExB,MAAM,YAAY,GAAG,IAAA,YAAI,EAAC,GAAG,EAAE,WAAW,CAAC,CAAC;IAC5C,eAAM,CAAC,KAAK,CAAC,mCAAmC,YAAY,EAAE,CAAC,CAAC;IAChE,IAAI,QAAQ,GAAG,IAAI,CAAC;IACpB,IAAI;QACF,MAAM,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/C,MAAM,iBAAiB,GAAG,UAAU;YAClC,CAAC,CAAC,UAAU,CAAC,QAAQ;YACrB,CAAC,CAAC,MAAA,MAAM,CAAC,WAAW,0CAAE,IAAI,CAAC;QAC7B,MAAM,cAAc,GAClB,IAAA,mBAAU,EAAC,iBAAiB,CAAC,IAAI,IAAA,mBAAU,EAAC,iBAAiB,CAAC,CAAC;QACjE,MAAM,OAAO,GAAG,CAAC,cAAc,IAAI,cAAc,CAAC,KAAK,KAAK,CAAC,CAAC;QAC9D,MAAM,qBAAqB,GACzB,cAAc,IAAI,IAAA,YAAG,EAAC,cAAc,EAAE,OAAO,CAAC,CAAC;QACjD,MAAM,mBAAmB,GAAG,cAAc,IAAI,IAAA,YAAG,EAAC,cAAc,EAAE,OAAO,CAAC,CAAC;QAE3E,IAAI,WAAW,GAAG,eAAe,CAAC;QAClC,IAAI,OAAO,IAAI,cAAc,EAAE;YAC7B,WAAW,IAAI,IAAI,IAAA,aAAK,EAAC,iBAAiB,CAAC,EAAE,CAAC;SAC/C;QAED,MAAM,WAAW,GAAG,CAAC,WAAW,CAAC,CAAC;QAElC,MAAM,QAAQ,GAA4B;YACxC,gBAAgB,EAAE,GAAG,CAAC,gBAAgB;YACtC,gBAAgB,EAAE,GAAG,CAAC,gBAAgB;YACtC,EAAE,EAAE,MAAM;SACX,CAAC;QAEF,MAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,IAAI,UAAU,GAAG,EAAE,CAAC,CAAC,8BAA8B;QACnD,IAAI,MAAM,CAAC,YAAY,KAAK,KAAK,EAAE;YACjC,IAAI,OAAO,EAAE;gBACX,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,MAAM,WAAW,CAAC,GAAG,CAAC,CAAC;gBAC3D,IAAI,CAAC,aAAa,EAAE;oBAClB,eAAM,CAAC,KAAK,CAAC,iDAAiD,CAAC,CAAC;oBAChE,2HAA2H;oBAC3H,WAAW,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;oBACvC,qBAAqB;oBACrB,IAAI,QAAQ,EAAE;wBACZ,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC,CAAC;qBAC7D;iBACF;aACF;iBAAM,IAAI,mBAAmB,EAAE;gBAC9B,yFAAyF;gBACzF,UAAU,IAAI,yBAAyB,CAAC;aACzC;SACF;QAED,IAAI,OAAO,EAAE;YACX,UAAU;gBACR,8DAA8D,CAAC;YACjE,QAAQ,CAAC,iBAAiB,GAAG,GAAG,CAAC,iBAAiB,CAAC;SACpD;aAAM;YACL,QAAQ,CAAC,8BAA8B,GAAG,OAAO,CAAC;YAClD,QAAQ,CAAC,iBAAiB,GAAG,QAAQ,CAAC;YACtC,QAAQ,CAAC,kBAAkB,GAAG,GAAG,CAAC,kBAAkB,CAAC;YACrD,IAAI,CAAC,CAAA,MAAA,MAAM,CAAC,WAAW,0CAAE,eAAe,CAAA,EAAE;gBACxC,eAAM,CAAC,KAAK,CAAC,uDAAuD,CAAC,CAAC;gBACtE,QAAQ,CAAC,wBAAwB,GAAG,GAAG,CAAC;aACzC;SACF;QACD,IAAI,CAAC,qBAAY,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,MAAM,CAAC,aAAa,EAAE;YAC7D,IAAI,OAAO,EAAE;gBACX,UAAU,IAAI,mBAAmB,CAAC;aACnC;iBAAM,IAAI,mBAAmB,EAAE;gBAC9B,IAAI,MAAM,CAAC,YAAY,KAAK,KAAK,EAAE;oBACjC,8BAA8B;oBAC9B,UAAU,IAAI,oBAAoB,CAAC;iBACpC;aACF;iBAAM;gBACL,QAAQ,CAAC,mBAAmB,GAAG,GAAG,CAAC;aACpC;SACF;QACD,MAAM,aAAa,GAAG,MAAM,IAAA,gCAAiB,EAAC,MAAM,CAAC,CAAC;QACtD,MAAM,WAAW,GAAgB;YAC/B,GAAG;YACH,QAAQ;YACR,MAAM,EAAE;gBACN,KAAK,EAAE,MAAM;gBACb,SAAS,EAAE,MAAM;gBACjB,aAAa;gBACb,WAAW;aACZ;SACF,CAAC;QACF,qBAAqB;QACrB,IAAI,qBAAY,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE;YACpC,WAAW,CAAC,QAAQ,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;YAC7C,WAAW,CAAC,QAAQ,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;SAChD;QAED,IAAI,UAAU,IAAI,CAAC,OAAO,EAAE;YAC1B,eAAM,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;YACrC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;SAC1D;QAED,2DAA2D;QAC3D,QAAQ,CAAC,IAAI,CAAC,eAAe,UAAU,EAAE,CAAC,CAAC;QAE3C,kCAAkC;QAClC,MAAM,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;QAC3E,IAAI,WAAW,CAAC,MAAM,EAAE;YACtB,eAAM,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;YACjD,IAAI,OAAO,EAAE;gBACX,kFAAkF;gBAClF,kFAAkF;gBAClF,QAAQ,CAAC,IAAI,CACX,gBAAgB,WAAW;qBACxB,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC;qBAC/B,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,EAAE,CAC5B,CAAC;aACH;iBAAM;gBACL,4EAA4E;gBAC5E,QAAQ,CAAC,IAAI,CACX,WAAW,WAAW;qBACnB,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC;qBACvD,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,EAAE,CAC5B,CAAC;aACH;SACF;QAED,oBAAoB;QACpB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;;YACjC,IACE,MAAA,MAAM,CAAC,iBAAiB,0CAAE,QAAQ,CAChC,aAAa,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CACtD,EACD;gBACA,eAAM,CAAC,KAAK,CAAC,0BAA0B,CAAC,EAAE,CAAC,CAAC;gBAC5C,IAAI,OAAO,EAAE;oBACX,QAAQ,CAAC,IAAI,CAAC,mCAAmC,CAAC,EAAE,CAAC,CAAC;oBACtD,mDAAmD;oBACnD,QAAQ,CAAC,IAAI,CAAC,eAAe,UAAU,EAAE,CAAC,CAAC;iBAC5C;qBAAM,IAAI,qBAAqB,IAAI,CAAC,KAAK,SAAS,EAAE;oBACnD,QAAQ,CAAC,IAAI,CAAC,0BAA0B,CAAC,GAAG,UAAU,EAAE,CAAC,CAAC;iBAC3D;qBAAM;oBACL,eAAM,CAAC,KAAK,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;iBAChD;aACF;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,qBAAqB,CAAC,EAAE;YAC7D,eAAM,CAAC,KAAK,CACV,YAAY,YAAY,6CAA6C,CACtE,CAAC;YACF,IAAI;gBACF,MAAM,IAAA,WAAM,EAAC,YAAY,CAAC,CAAC;aAC5B;YAAC,OAAO,GAAG,EAAE,0BAA0B,CAAC;gBACvC,eAAM,CAAC,KAAK,CACV,EAAE,GAAG,EAAE,YAAY,EAAE,EACrB,oDAAoD,CACrD,CAAC;aACH;SACF;QAED,mBAAmB;QACnB,MAAM,IAAA,WAAI,EAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QAElC,kBAAkB;QAClB,QAAQ,GAAG,MAAM,IAAA,aAAQ,EAAC,YAAY,EAAE,MAAM,CAAC,CAAC;KACjD;IAAC,OAAO,GAAG,EAAE,0BAA0B,CAAC;QACvC,IAAI,GAAG,CAAC,OAAO,KAAK,gCAAe,EAAE;YACnC,MAAM,GAAG,CAAC;SACX;QACD,eAAM,CAAC,KAAK,CACV;YACE,GAAG;YACH,IAAI,EAAE,MAAM;SACb,EACD,iBAAiB,CAClB,CAAC;QACF,IAAI,GAAG,CAAC,MAAM,EAAE;YACd,IAAI,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,iCAAiC,CAAC,EAAE;gBAC1D,MAAM,IAAI,KAAK,CAAC,+CAA8B,CAAC,CAAC;aACjD;YACD,IACE,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,2BAA2B,CAAC;gBAChD,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,4CAA4C,CAAC;gBACjE,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,0CAA0C,CAAC,EAC/D;gBACA,MAAM,IAAI,uCAAiB,CAAC,GAAG,EAAE,QAAK,CAAC,CAAC;aACzC;SACF;QACD,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC;KAChE;IACD,OAAO,EAAE,QAAQ,EAAE,CAAC;AACtB,CAAC;AA/LD,4CA+LC","sourcesContent":["import is from '@sindresorhus/is';\nimport { gte, minVersion, validRange } from 'semver';\nimport { quote } from 'shlex';\nimport { join } from 'upath';\nimport { GlobalConfig } from '../../../config/global';\nimport {\n  SYSTEM_INSUFFICIENT_DISK_SPACE,\n  TEMPORARY_ERROR,\n} from '../../../constants/error-messages';\nimport { id as npmId } from '../../../datasource/npm';\nimport { logger } from '../../../logger';\nimport { ExternalHostError } from '../../../types/errors/external-host-error';\nimport { ExecOptions, exec } from '../../../util/exec';\nimport { exists, readFile, remove, writeFile } from '../../../util/fs';\nimport { regEx } from '../../../util/regex';\nimport type { PostUpdateConfig, Upgrade } from '../../types';\nimport { getNodeConstraint } from './node-version';\nimport { GenerateLockFileResult } from './types';\n\nexport async function checkYarnrc(\n  cwd: string\n): Promise<{ offlineMirror: boolean; yarnPath: string | null }> {\n  let offlineMirror = false;\n  let yarnPath: string = null;\n  try {\n    const yarnrc = await readFile(`${cwd}/.yarnrc`, 'utf8');\n    if (is.string(yarnrc)) {\n      const mirrorLine = yarnrc\n        .split('\\n')\n        .find((line) => line.startsWith('yarn-offline-mirror '));\n      offlineMirror = !!mirrorLine;\n      const pathLine = yarnrc\n        .split('\\n')\n        .find((line) => line.startsWith('yarn-path '));\n      if (pathLine) {\n        yarnPath = pathLine.replace(regEx(/^yarn-path\\s+\"?(.+?)\"?$/), '$1');\n      }\n      const yarnBinaryExists = await exists(yarnPath);\n      if (!yarnBinaryExists) {\n        const scrubbedYarnrc = yarnrc.replace(\n          regEx(/^yarn-path\\s+\"?.+?\"?$/gm),\n          ''\n        );\n        await writeFile(`${cwd}/.yarnrc`, scrubbedYarnrc);\n        yarnPath = null;\n      }\n    }\n  } catch (err) /* istanbul ignore next */ {\n    // not found\n  }\n  return { offlineMirror, yarnPath };\n}\n\nexport function getOptimizeCommand(\n  fileName = '/home/ubuntu/.npm-global/lib/node_modules/yarn/lib/cli.js'\n): string {\n  return `sed -i 's/ steps,/ steps.slice(0,1),/' ${quote(fileName)}`;\n}\n\nexport function isYarnUpdate(upgrade: Upgrade): boolean {\n  return upgrade.depType === 'packageManager' && upgrade.depName === 'yarn';\n}\n\nexport async function generateLockFile(\n  cwd: string,\n  env: NodeJS.ProcessEnv,\n  config: PostUpdateConfig = {},\n  upgrades: Upgrade[] = []\n): Promise<GenerateLockFileResult> {\n  const lockFileName = join(cwd, 'yarn.lock');\n  logger.debug(`Spawning yarn install to create ${lockFileName}`);\n  let lockFile = null;\n  try {\n    const yarnUpdate = upgrades.find(isYarnUpdate);\n    const yarnCompatibility = yarnUpdate\n      ? yarnUpdate.newValue\n      : config.constraints?.yarn;\n    const minYarnVersion =\n      validRange(yarnCompatibility) && minVersion(yarnCompatibility);\n    const isYarn1 = !minYarnVersion || minYarnVersion.major === 1;\n    const isYarnDedupeAvailable =\n      minYarnVersion && gte(minYarnVersion, '2.2.0');\n    const isYarnModeAvailable = minYarnVersion && gte(minYarnVersion, '3.0.0');\n\n    let installYarn = 'npm i -g yarn';\n    if (isYarn1 && minYarnVersion) {\n      installYarn += `@${quote(yarnCompatibility)}`;\n    }\n\n    const preCommands = [installYarn];\n\n    const extraEnv: ExecOptions['extraEnv'] = {\n      NPM_CONFIG_CACHE: env.NPM_CONFIG_CACHE,\n      npm_config_store: env.npm_config_store,\n      CI: 'true',\n    };\n\n    const commands = [];\n    let cmdOptions = ''; // should have a leading space\n    if (config.skipInstalls !== false) {\n      if (isYarn1) {\n        const { offlineMirror, yarnPath } = await checkYarnrc(cwd);\n        if (!offlineMirror) {\n          logger.debug('Updating yarn.lock only - skipping node_modules');\n          // The following change causes Yarn 1.x to exit gracefully after updating the lock file but without installing node_modules\n          preCommands.push(getOptimizeCommand());\n          // istanbul ignore if\n          if (yarnPath) {\n            preCommands.push(getOptimizeCommand(yarnPath) + ' || true');\n          }\n        }\n      } else if (isYarnModeAvailable) {\n        // Don't run the link step and only fetch what's necessary to compute an updated lockfile\n        cmdOptions += ' --mode=update-lockfile';\n      }\n    }\n\n    if (isYarn1) {\n      cmdOptions +=\n        ' --ignore-engines --ignore-platform --network-timeout 100000';\n      extraEnv.YARN_CACHE_FOLDER = env.YARN_CACHE_FOLDER;\n    } else {\n      extraEnv.YARN_ENABLE_IMMUTABLE_INSTALLS = 'false';\n      extraEnv.YARN_HTTP_TIMEOUT = '100000';\n      extraEnv.YARN_GLOBAL_FOLDER = env.YARN_GLOBAL_FOLDER;\n      if (!config.managerData?.yarnZeroInstall) {\n        logger.debug('Enabling global cache as zero-install is not detected');\n        extraEnv.YARN_ENABLE_GLOBAL_CACHE = '1';\n      }\n    }\n    if (!GlobalConfig.get('allowScripts') || config.ignoreScripts) {\n      if (isYarn1) {\n        cmdOptions += ' --ignore-scripts';\n      } else if (isYarnModeAvailable) {\n        if (config.skipInstalls === false) {\n          // Don't run the build scripts\n          cmdOptions += ' --mode=skip-build';\n        }\n      } else {\n        extraEnv.YARN_ENABLE_SCRIPTS = '0';\n      }\n    }\n    const tagConstraint = await getNodeConstraint(config);\n    const execOptions: ExecOptions = {\n      cwd,\n      extraEnv,\n      docker: {\n        image: 'node',\n        tagScheme: 'node',\n        tagConstraint,\n        preCommands,\n      },\n    };\n    // istanbul ignore if\n    if (GlobalConfig.get('exposeAllEnv')) {\n      execOptions.extraEnv.NPM_AUTH = env.NPM_AUTH;\n      execOptions.extraEnv.NPM_EMAIL = env.NPM_EMAIL;\n    }\n\n    if (yarnUpdate && !isYarn1) {\n      logger.debug('Updating Yarn binary');\n      commands.push(`yarn set version ${yarnUpdate.newValue}`);\n    }\n\n    // This command updates the lock file based on package.json\n    commands.push(`yarn install${cmdOptions}`);\n\n    // rangeStrategy = update-lockfile\n    const lockUpdates = upgrades.filter((upgrade) => upgrade.isLockfileUpdate);\n    if (lockUpdates.length) {\n      logger.debug('Performing lockfileUpdate (yarn)');\n      if (isYarn1) {\n        // `yarn upgrade` updates based on the version range specified in the package file\n        // note - this can hit a yarn bug, see https://github.com/yarnpkg/yarn/issues/8236\n        commands.push(\n          `yarn upgrade ${lockUpdates\n            .map((update) => update.depName)\n            .join(' ')}${cmdOptions}`\n        );\n      } else {\n        // `yarn up` updates to the latest release, so the range should be specified\n        commands.push(\n          `yarn up ${lockUpdates\n            .map((update) => `${update.depName}@${update.newValue}`)\n            .join(' ')}${cmdOptions}`\n        );\n      }\n    }\n\n    // postUpdateOptions\n    ['fewer', 'highest'].forEach((s) => {\n      if (\n        config.postUpdateOptions?.includes(\n          `yarnDedupe${s.charAt(0).toUpperCase()}${s.slice(1)}`\n        )\n      ) {\n        logger.debug(`Performing yarn dedupe ${s}`);\n        if (isYarn1) {\n          commands.push(`npx yarn-deduplicate --strategy ${s}`);\n          // Run yarn again in case any changes are necessary\n          commands.push(`yarn install${cmdOptions}`);\n        } else if (isYarnDedupeAvailable && s === 'highest') {\n          commands.push(`yarn dedupe --strategy ${s}${cmdOptions}`);\n        } else {\n          logger.debug(`yarn dedupe ${s} not available`);\n        }\n      }\n    });\n\n    if (upgrades.find((upgrade) => upgrade.isLockFileMaintenance)) {\n      logger.debug(\n        `Removing ${lockFileName} first due to lock file maintenance upgrade`\n      );\n      try {\n        await remove(lockFileName);\n      } catch (err) /* istanbul ignore next */ {\n        logger.debug(\n          { err, lockFileName },\n          'Error removing yarn.lock for lock file maintenance'\n        );\n      }\n    }\n\n    // Run the commands\n    await exec(commands, execOptions);\n\n    // Read the result\n    lockFile = await readFile(lockFileName, 'utf8');\n  } catch (err) /* istanbul ignore next */ {\n    if (err.message === TEMPORARY_ERROR) {\n      throw err;\n    }\n    logger.debug(\n      {\n        err,\n        type: 'yarn',\n      },\n      'lock file error'\n    );\n    if (err.stderr) {\n      if (err.stderr.includes('ENOSPC: no space left on device')) {\n        throw new Error(SYSTEM_INSUFFICIENT_DISK_SPACE);\n      }\n      if (\n        err.stderr.includes('The registry may be down.') ||\n        err.stderr.includes('getaddrinfo ENOTFOUND registry.yarnpkg.com') ||\n        err.stderr.includes('getaddrinfo ENOTFOUND registry.npmjs.org')\n      ) {\n        throw new ExternalHostError(err, npmId);\n      }\n    }\n    return { error: true, stderr: err.stderr, stdout: err.stdout };\n  }\n  return { lockFile };\n}\n"]}