"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.analyseTerragruntModule = exports.extractTerragruntModule = exports.gitTagsRefMatchRegex = exports.githubRefMatchRegex = void 0;
const tslib_1 = require("tslib");
const git_tags_1 = require("../../datasource/git-tags");
const datasourceGithubTags = (0, tslib_1.__importStar)(require("../../datasource/github-tags"));
const terraform_module_1 = require("../../datasource/terraform-module");
const logger_1 = require("../../logger");
const types_1 = require("../../types");
const regex_1 = require("../../util/regex");
const common_1 = require("./common");
const providers_1 = require("./providers");
exports.githubRefMatchRegex = (0, regex_1.regEx)(/github\.com([/:])(?<project>[^/]+\/[a-z0-9-_.]+).*\?ref=(?<tag>.*)$/i);
exports.gitTagsRefMatchRegex = (0, regex_1.regEx)(/(?:git::)?(?<url>(?:http|https|ssh):\/\/(?:.*@)?(?<path>.*.*\/(?<project>.*\/.*)))\?ref=(?<tag>.*)$/);
const hostnameMatchRegex = (0, regex_1.regEx)(/^(?<hostname>([\w|\d]+\.)+[\w|\d]+)/);
function extractTerragruntModule(startingLine, lines) {
    const moduleName = 'terragrunt';
    const result = (0, providers_1.extractTerragruntProvider)(startingLine, lines, moduleName);
    result.dependencies.forEach((dep) => {
        dep.managerData.terragruntDependencyType =
            common_1.TerragruntDependencyTypes.terragrunt;
    });
    return result;
}
exports.extractTerragruntModule = extractTerragruntModule;
function analyseTerragruntModule(dep) {
    const githubRefMatch = exports.githubRefMatchRegex.exec(dep.managerData.source);
    const gitTagsRefMatch = exports.gitTagsRefMatchRegex.exec(dep.managerData.source);
    if (githubRefMatch) {
        dep.depType = 'github';
        dep.lookupName = githubRefMatch.groups.project.replace((0, regex_1.regEx)(/\.git$/), '');
        dep.depName = 'github.com/' + dep.lookupName;
        dep.currentValue = githubRefMatch.groups.tag;
        dep.datasource = datasourceGithubTags.id;
    }
    else if (gitTagsRefMatch) {
        dep.depType = 'gitTags';
        if (gitTagsRefMatch.groups.path.includes('//')) {
            logger_1.logger.debug('Terragrunt module contains subdirectory');
            dep.depName = gitTagsRefMatch.groups.path.split('//')[0];
            const tempLookupName = gitTagsRefMatch.groups.url.split('//');
            dep.lookupName = tempLookupName[0] + '//' + tempLookupName[1];
        }
        else {
            dep.depName = gitTagsRefMatch.groups.path.replace('.git', '');
            dep.lookupName = gitTagsRefMatch.groups.url;
        }
        dep.currentValue = gitTagsRefMatch.groups.tag;
        dep.datasource = git_tags_1.GitTagsDatasource.id;
    }
    else if (dep.managerData.source) {
        const moduleParts = dep.managerData.source.split('//')[0].split('/');
        if (moduleParts[0] === '..') {
            dep.skipReason = types_1.SkipReason.Local;
        }
        else if (moduleParts.length >= 3) {
            const hostnameMatch = hostnameMatchRegex.exec(dep.managerData.source);
            if (hostnameMatch) {
                dep.registryUrls = [`https://${hostnameMatch.groups.hostname}`];
            }
            dep.depType = 'terragrunt';
            dep.depName = moduleParts.join('/');
            dep.datasource = terraform_module_1.TerraformModuleDatasource.id;
        }
    }
    else {
        logger_1.logger.debug({ dep }, 'terragrunt dep has no source');
        dep.skipReason = types_1.SkipReason.NoSource;
    }
}
exports.analyseTerragruntModule = analyseTerragruntModule;
//# sourceMappingURL=modules.js.map