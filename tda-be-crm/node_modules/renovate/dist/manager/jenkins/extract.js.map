{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../lib/manager/jenkins/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { load } from 'js-yaml';\nimport { JenkinsPluginsDatasource } from '../../datasource/jenkins-plugins';\nimport { logger } from '../../logger';\nimport { SkipReason } from '../../types';\nimport { isSkipComment } from '../../util/ignore';\nimport { regEx } from '../../util/regex';\nimport * as dockerVersioning from '../../versioning/docker';\nimport type { PackageDependency, PackageFile } from '../types';\nimport type { JenkinsPlugin, JenkinsPlugins } from './types';\n\nconst YamlExtension = regEx(/\\.ya?ml$/);\n\nfunction getDependency(plugin: JenkinsPlugin): PackageDependency {\n  const dep: PackageDependency = {\n    datasource: JenkinsPluginsDatasource.id,\n    versioning: dockerVersioning.id,\n    depName: plugin.artifactId,\n  };\n\n  if (plugin.source?.version) {\n    dep.currentValue = plugin.source.version.toString();\n    if (typeof plugin.source.version !== 'string') {\n      dep.skipReason = SkipReason.InvalidVersion;\n      logger.warn(\n        { dep },\n        'Jenkins plugin dependency version is not a string and will be ignored'\n      );\n    }\n  } else {\n    dep.skipReason = SkipReason.NoVersion;\n  }\n\n  if (\n    plugin.source?.version === 'latest' ||\n    plugin.source?.version === 'experimental' ||\n    plugin.groupId\n  ) {\n    dep.skipReason = SkipReason.UnsupportedVersion;\n  }\n\n  if (plugin.source?.url) {\n    dep.skipReason = SkipReason.InternalPackage;\n  }\n\n  if (!dep.skipReason && plugin.renovate?.ignore) {\n    dep.skipReason = SkipReason.Ignored;\n  }\n\n  logger.debug({ dep }, 'Jenkins plugin dependency');\n  return dep;\n}\n\nfunction extractYaml(content: string): PackageDependency[] {\n  const deps: PackageDependency[] = [];\n\n  try {\n    const doc = load(content, { json: true }) as JenkinsPlugins;\n    if (is.nonEmptyArray(doc?.plugins)) {\n      for (const plugin of doc.plugins) {\n        if (plugin.artifactId) {\n          const dep = getDependency(plugin);\n          deps.push(dep);\n        }\n      }\n    }\n  } catch (err) /* istanbul ignore next */ {\n    logger.warn({ err }, 'Error parsing Jenkins plugins');\n  }\n  return deps;\n}\n\nfunction extractText(content: string): PackageDependency[] {\n  const deps: PackageDependency[] = [];\n  const regex = regEx(\n    /^\\s*(?<depName>[\\d\\w-]+):(?<currentValue>[^#\\s]+)[#\\s]*(?<comment>.*)$/\n  );\n\n  for (const line of content.split('\\n')) {\n    const match = regex.exec(line);\n    if (match) {\n      const { depName, currentValue, comment } = match.groups;\n      const plugin: JenkinsPlugin = {\n        artifactId: depName,\n        source: {\n          version: currentValue,\n        },\n        renovate: {\n          ignore: isSkipComment(comment),\n        },\n      };\n      const dep = getDependency(plugin);\n      deps.push(dep);\n    }\n  }\n  return deps;\n}\n\nexport function extractPackageFile(\n  content: string,\n  fileName: string\n): PackageFile | null {\n  logger.trace('jenkins.extractPackageFile()');\n  const deps: PackageDependency[] = [];\n\n  if (YamlExtension.test(fileName)) {\n    deps.push(...extractYaml(content));\n  } else {\n    deps.push(...extractText(content));\n  }\n\n  if (deps.length === 0) {\n    return null;\n  }\n  return { deps };\n}\n"]}