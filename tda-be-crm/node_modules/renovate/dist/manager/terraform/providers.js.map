{"version":3,"file":"providers.js","sourceRoot":"","sources":["../../../lib/manager/terraform/providers.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { TerraformProviderDatasource } from '../../datasource/terraform-provider';\nimport { logger } from '../../logger';\nimport { SkipReason } from '../../types';\nimport { regEx } from '../../util/regex';\nimport type { PackageDependency } from '../types';\nimport { TerraformDependencyTypes } from './common';\nimport type { ProviderLock } from './lockfile/types';\nimport type { ExtractionResult } from './types';\nimport {\n  getLockedVersion,\n  keyValueExtractionRegex,\n  massageProviderLookupName,\n} from './util';\n\nexport const sourceExtractionRegex = regEx(\n  /^(?:(?<hostname>(?:[a-zA-Z0-9]+\\.+)+[a-zA-Z0-9]+)\\/)?(?:(?<namespace>[^/]+)\\/)?(?<type>[^/]+)/\n);\n\nexport function extractTerraformProvider(\n  startingLine: number,\n  lines: string[],\n  moduleName: string\n): ExtractionResult {\n  let lineNumber = startingLine;\n  const deps: PackageDependency[] = [];\n  const dep: PackageDependency = {\n    managerData: {\n      moduleName,\n      terraformDependencyType: TerraformDependencyTypes.provider,\n    },\n  };\n  let braceCounter = 0;\n  do {\n    // istanbul ignore if\n    if (lineNumber > lines.length - 1) {\n      logger.debug(`Malformed Terraform file detected.`);\n    }\n\n    const line = lines[lineNumber];\n\n    // istanbul ignore else\n    if (is.string(line)) {\n      // `{` will be counted wit +1 and `}` with -1. Therefore if we reach braceCounter == 0. We have found the end of the terraform block\n      const openBrackets = (line.match(regEx(/\\{/g)) || []).length; // TODO #12071\n      const closedBrackets = (line.match(regEx(/\\}/g)) || []).length; // TODO #12071\n      braceCounter = braceCounter + openBrackets - closedBrackets;\n\n      // only update fields inside the root block\n      if (braceCounter === 1) {\n        const kvMatch = keyValueExtractionRegex.exec(line);\n        if (kvMatch) {\n          if (kvMatch.groups.key === 'version') {\n            dep.currentValue = kvMatch.groups.value;\n          } else if (kvMatch.groups.key === 'source') {\n            dep.managerData.source = kvMatch.groups.value;\n            dep.managerData.sourceLine = lineNumber;\n          }\n        }\n      }\n    } else {\n      // stop - something went wrong\n      braceCounter = 0;\n    }\n    lineNumber += 1;\n  } while (braceCounter !== 0);\n  deps.push(dep);\n\n  // remove last lineNumber addition to not skip a line after the last bracket\n  lineNumber -= 1;\n  return { lineNumber, dependencies: deps };\n}\n\nexport function analyzeTerraformProvider(\n  dep: PackageDependency,\n  locks: ProviderLock[]\n): void {\n  dep.depType = 'provider';\n  dep.depName = dep.managerData.moduleName;\n  dep.datasource = TerraformProviderDatasource.id;\n\n  if (is.nonEmptyString(dep.managerData.source)) {\n    const source = sourceExtractionRegex.exec(dep.managerData.source);\n    if (!source) {\n      dep.skipReason = SkipReason.UnsupportedUrl;\n      return;\n    }\n\n    // buildin providers https://github.com/terraform-providers\n    if (source.groups.namespace === 'terraform-providers') {\n      dep.registryUrls = [`https://releases.hashicorp.com`];\n    } else if (source.groups.hostname) {\n      dep.registryUrls = [`https://${source.groups.hostname}`];\n      dep.lookupName = `${source.groups.namespace}/${source.groups.type}`;\n    } else {\n      dep.lookupName = dep.managerData.source;\n    }\n  }\n  massageProviderLookupName(dep);\n\n  dep.lockedVersion = getLockedVersion(dep, locks);\n}\n"]}