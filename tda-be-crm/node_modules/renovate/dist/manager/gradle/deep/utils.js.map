{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../lib/manager/gradle/deep/utils.ts"],"names":[],"mappings":";;;AAAA,iCAA6B;AAC7B,mDAAsD;AACtD,yCAAkE;AAClE,sDAGoC;AAEpC,MAAM,uBAAuB,GAAG,0CAA0C,CAAC;AAEpE,KAAK,UAAU,mBAAmB,CACvC,UAAkB;;IAElB,IAAI,qBAAY,CAAC,GAAG,CAAC,cAAc,CAAC,KAAK,QAAQ,EAAE;QACjD,SAAS;QACT,OAAO,IAAI,CAAC;KACb;IAED,MAAM,WAAW,GAAG,MAAM,IAAA,kBAAa,EACrC,IAAA,YAAI,EAAC,UAAU,EAAE,uBAAuB,CAAC,EACzC,MAAM,CACP,CAAC;IAEF,MAAM,OAAO,GAAG,MAAA,IAAA,4BAAoB,EAAC,WAAW,CAAC,0CAAE,OAAO,CAAC;IAE3D,OAAO,IAAA,wBAAgB,EAAC,OAAO,CAAC,CAAC;AACnC,CAAC;AAhBD,kDAgBC;AAEM,KAAK,UAAU,oBAAoB,CACxC,UAAkB;IAElB,IAAI,qBAAY,CAAC,GAAG,CAAC,cAAc,CAAC,KAAK,QAAQ,EAAE;QACjD,SAAS;QACT,OAAO,IAAI,CAAC;KACb;IAED,IAAI,MAAM,IAAA,oBAAe,EAAC,IAAA,YAAI,EAAC,UAAU,EAAE,uBAAuB,CAAC,CAAC,EAAE;QACpE,OAAO,IAAI,CAAC;KACb;IAED,OAAO,CAAC,4BAA4B,CAAC,CAAC;AACxC,CAAC;AAbD,oDAaC","sourcesContent":["import { join } from 'upath';\nimport { GlobalConfig } from '../../../config/global';\nimport { localPathExists, readLocalFile } from '../../../util/fs';\nimport {\n  extractGradleVersion,\n  getJavaContraint,\n} from '../../gradle-wrapper/utils';\n\nconst GradleWrapperProperties = 'gradle/wrapper/gradle-wrapper.properties';\n\nexport async function getDockerConstraint(\n  gradleRoot: string\n): Promise<string | null> {\n  if (GlobalConfig.get('binarySource') !== 'docker') {\n    // ignore\n    return null;\n  }\n\n  const fileContent = await readLocalFile(\n    join(gradleRoot, GradleWrapperProperties),\n    'utf8'\n  );\n\n  const version = extractGradleVersion(fileContent)?.version;\n\n  return getJavaContraint(version);\n}\n\nexport async function getDockerPreCommands(\n  gradleRoot: string\n): Promise<string[]> {\n  if (GlobalConfig.get('binarySource') !== 'docker') {\n    // ignore\n    return null;\n  }\n\n  if (await localPathExists(join(gradleRoot, GradleWrapperProperties))) {\n    return null;\n  }\n\n  return ['install-tool gradle latest'];\n}\n"]}