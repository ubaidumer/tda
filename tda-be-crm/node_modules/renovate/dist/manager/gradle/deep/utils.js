"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDockerPreCommands = exports.getDockerConstraint = void 0;
const upath_1 = require("upath");
const global_1 = require("../../../config/global");
const fs_1 = require("../../../util/fs");
const utils_1 = require("../../gradle-wrapper/utils");
const GradleWrapperProperties = 'gradle/wrapper/gradle-wrapper.properties';
async function getDockerConstraint(gradleRoot) {
    var _a;
    if (global_1.GlobalConfig.get('binarySource') !== 'docker') {
        // ignore
        return null;
    }
    const fileContent = await (0, fs_1.readLocalFile)((0, upath_1.join)(gradleRoot, GradleWrapperProperties), 'utf8');
    const version = (_a = (0, utils_1.extractGradleVersion)(fileContent)) === null || _a === void 0 ? void 0 : _a.version;
    return (0, utils_1.getJavaContraint)(version);
}
exports.getDockerConstraint = getDockerConstraint;
async function getDockerPreCommands(gradleRoot) {
    if (global_1.GlobalConfig.get('binarySource') !== 'docker') {
        // ignore
        return null;
    }
    if (await (0, fs_1.localPathExists)((0, upath_1.join)(gradleRoot, GradleWrapperProperties))) {
        return null;
    }
    return ['install-tool gradle latest'];
}
exports.getDockerPreCommands = getDockerPreCommands;
//# sourceMappingURL=utils.js.map