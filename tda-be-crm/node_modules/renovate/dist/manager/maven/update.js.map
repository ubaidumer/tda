{"version":3,"file":"update.js","sourceRoot":"","sources":["../../../lib/manager/maven/update.ts"],"names":[],"mappings":";;;AAAA,yCAAsC;AAGtC,SAAgB,gBAAgB,CAC9B,WAAmB,EACnB,OAAgB,EAChB,YAAoB;IAEpB,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,mBAAmB,EAAE,GAAG,OAAO,CAAC;IACzE,MAAM,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,mBAAmB,CAAC,CAAC;IAC3D,MAAM,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;IACzD,MAAM,oBAAoB,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;IAC7D,MAAM,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;IACvD,MAAM,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,oBAAoB,CAAC,CAAC;IAC7D,MAAM,OAAO,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC;IACnC,IAAI,OAAO,KAAK,QAAQ,EAAE;QACxB,OAAO,WAAW,CAAC;KACpB;IACD,IAAI,OAAO,KAAK,YAAY,IAAI,OAAO,CAAC,SAAS,EAAE;QACjD,MAAM,YAAY,GAAG,WAAW,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QAC5D,OAAO,QAAQ,GAAG,YAAY,GAAG,QAAQ,CAAC;KAC3C;IACD,eAAM,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,EAAE,eAAe,CAAC,CAAC;IAC5E,OAAO,IAAI,CAAC;AACd,CAAC;AArBD,4CAqBC;AAED,SAAgB,gBAAgB,CAAC,EAC/B,WAAW,EACX,OAAO,GACgB;IACvB,MAAM,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACxC,MAAM,MAAM,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IAC5C,MAAM,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC9C,MAAM,cAAc,GAAG,gBAAgB,CAAC,WAAW,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;IACpE,IAAI,CAAC,cAAc,EAAE;QACnB,OAAO,IAAI,CAAC;KACb;IACD,IAAI,cAAc,KAAK,WAAW,EAAE;QAClC,OAAO,WAAW,CAAC;KACpB;IACD,OAAO,GAAG,MAAM,GAAG,cAAc,EAAE,CAAC;AACtC,CAAC;AAfD,4CAeC","sourcesContent":["import { logger } from '../../logger';\nimport type { UpdateDependencyConfig, Upgrade } from '../types';\n\nexport function updateAtPosition(\n  fileContent: string,\n  upgrade: Upgrade,\n  endingAnchor: string\n): string | null {\n  const { depName, currentValue, newValue, fileReplacePosition } = upgrade;\n  const leftPart = fileContent.slice(0, fileReplacePosition);\n  const rightPart = fileContent.slice(fileReplacePosition);\n  const versionClosePosition = rightPart.indexOf(endingAnchor);\n  const restPart = rightPart.slice(versionClosePosition);\n  const versionPart = rightPart.slice(0, versionClosePosition);\n  const version = versionPart.trim();\n  if (version === newValue) {\n    return fileContent;\n  }\n  if (version === currentValue || upgrade.groupName) {\n    const replacedPart = versionPart.replace(version, newValue);\n    return leftPart + replacedPart + restPart;\n  }\n  logger.debug({ depName, version, currentValue, newValue }, 'Unknown value');\n  return null;\n}\n\nexport function updateDependency({\n  fileContent,\n  upgrade,\n}: UpdateDependencyConfig): string | null {\n  const offset = fileContent.indexOf('<');\n  const spaces = fileContent.slice(0, offset);\n  const restContent = fileContent.slice(offset);\n  const updatedContent = updateAtPosition(restContent, upgrade, '</');\n  if (!updatedContent) {\n    return null;\n  }\n  if (updatedContent === restContent) {\n    return fileContent;\n  }\n  return `${spaces}${updatedContent}`;\n}\n"]}