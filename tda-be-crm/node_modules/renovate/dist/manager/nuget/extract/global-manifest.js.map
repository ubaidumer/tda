{"version":3,"file":"global-manifest.js","sourceRoot":"","sources":["../../../../lib/manager/nuget/extract/global-manifest.ts"],"names":[],"mappings":";;;;AAAA,wFAA6D;AAC7D,4CAAyC;AACzC,0CAA4C;AAI5C,SAAgB,4BAA4B,CAC1C,OAAe,EACf,WAAmB;;IAEnB,MAAM,IAAI,GAAwB,EAAE,CAAC;IACrC,IAAI,QAA+B,CAAC;IAEpC,IAAI;QACF,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KAChC;IAAC,OAAO,GAAG,EAAE;QACZ,eAAM,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,WAAW,EAAE,EAAE,cAAc,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC;KACb;IAED,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAA,MAAA,QAAQ,CAAC,GAAG,0CAAE,OAAO,CAAA,EAAE;QACvD,eAAM,CAAC,KAAK,CACV,EAAE,QAAQ,EAAE,WAAW,EAAE,EACzB,sCAAsC,CACvC,CAAC;QACF,OAAO,IAAI,CAAC;KACb;IAED,IAAI,MAAA,QAAQ,CAAC,GAAG,0CAAE,OAAO,EAAE;QACzB,IAAI,CAAC,IAAI,CAAC;YACR,OAAO,EAAE,YAAY;YACrB,OAAO,EAAE,YAAY;YACrB,YAAY,EAAE,MAAA,QAAQ,CAAC,GAAG,0CAAE,OAAO;YACnC,UAAU,EAAE,kBAAU,CAAC,qBAAqB;SAC7C,CAAC,CAAC;KACJ;IAED,IAAI,QAAQ,CAAC,cAAc,CAAC,EAAE;QAC5B,KAAK,MAAM,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,EAAE;YAC3D,MAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,CAAC;YACvD,MAAM,GAAG,GAAsB;gBAC7B,OAAO,EAAE,aAAa;gBACtB,OAAO;gBACP,YAAY;gBACZ,UAAU,EAAE,eAAe,CAAC,EAAE;aAC/B,CAAC;YAEF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAChB;KACF;IAED,OAAO,EAAE,IAAI,EAAE,CAAC;AAClB,CAAC;AA9CD,oEA8CC","sourcesContent":["import * as datasourceNuget from '../../../datasource/nuget';\nimport { logger } from '../../../logger';\nimport { SkipReason } from '../../../types';\nimport type { PackageDependency, PackageFile } from '../../types';\nimport type { MsbuildGlobalManifest } from '../types';\n\nexport function extractMsbuildGlobalManifest(\n  content: string,\n  packageFile: string\n): PackageFile | null {\n  const deps: PackageDependency[] = [];\n  let manifest: MsbuildGlobalManifest;\n\n  try {\n    manifest = JSON.parse(content);\n  } catch (err) {\n    logger.debug({ fileName: packageFile }, 'Invalid JSON');\n    return null;\n  }\n\n  if (!manifest['msbuild-sdks'] && !manifest.sdk?.version) {\n    logger.debug(\n      { fileName: packageFile },\n      'This global.json is not a Nuget file'\n    );\n    return null;\n  }\n\n  if (manifest.sdk?.version) {\n    deps.push({\n      depType: 'dotnet-sdk',\n      depName: 'dotnet-sdk',\n      currentValue: manifest.sdk?.version,\n      skipReason: SkipReason.UnsupportedDatasource,\n    });\n  }\n\n  if (manifest['msbuild-sdks']) {\n    for (const depName of Object.keys(manifest['msbuild-sdks'])) {\n      const currentValue = manifest['msbuild-sdks'][depName];\n      const dep: PackageDependency = {\n        depType: 'msbuild-sdk',\n        depName,\n        currentValue,\n        datasource: datasourceNuget.id,\n      };\n\n      deps.push(dep);\n    }\n  }\n\n  return { deps };\n}\n"]}